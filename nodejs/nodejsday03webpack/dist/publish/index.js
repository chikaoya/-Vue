/*! For license information please see index.js.LICENSE.txt */
(()=>{var e={309:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Boot:()=>Fge,DomEditor:()=>gO,SlateEditor:()=>yf,SlateElement:()=>ff,SlateLocation:()=>mf,SlateNode:()=>Sf,SlatePath:()=>Of,SlatePoint:()=>Ff,SlateRange:()=>Nf,SlateText:()=>Hf,SlateTransforms:()=>ad,Toolbar:()=>QF,createEditor:()=>Mge,createToolbar:()=>zge,createUploader:()=>a_,default:()=>$ge,genModalButtonElems:()=>IF,genModalInputElems:()=>NF,genModalTextareaElems:()=>RF,i18nAddResources:()=>K_,i18nChangeLanguage:()=>Y_,i18nGetResources:()=>X_,t:()=>J_});var r="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function o(e){var t={exports:{}};return e(t,t.exports),t.exports}var i,a,u=function(e){return e&&e.Math==Math&&e},s=u("object"==typeof globalThis&&globalThis)||u("object"==typeof window&&window)||u("object"==typeof self&&self)||u("object"==typeof r&&r)||function(){return this}()||Function("return this")(),c=Function.prototype,l=c.apply,f=c.bind,d=c.call,p="object"==typeof Reflect&&Reflect.apply||(f?d.bind(l):function(){return d.apply(l,arguments)}),h=Function.prototype,g=h.bind,v=h.call,y=g&&g.bind(v),m=g?function(e){return e&&y(v,e)}:function(e){return e&&function(){return v.apply(e,arguments)}},b=function(e){return"function"==typeof e},w=function(e){try{return!!e()}catch(e){return!0}},E=!w((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),A=Function.prototype.call,S=A.bind?A.bind(A):function(){return A.apply(A,arguments)},C={}.propertyIsEnumerable,x=Object.getOwnPropertyDescriptor,D=x&&!C.call({1:2},1)?function(e){var t=x(this,e);return!!t&&t.enumerable}:C,O={f:D},k=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},B=m({}.toString),T=m("".slice),F=function(e){return T(B(e),8,-1)},_=s.Object,P=m("".split),j=w((function(){return!_("z").propertyIsEnumerable(0)}))?function(e){return"String"==F(e)?P(e,""):_(e)}:_,N=s.TypeError,R=function(e){if(null==e)throw N("Can't call method on "+e);return e},I=function(e){return j(R(e))},L=function(e){return"object"==typeof e?null!==e:b(e)},M={},z=function(e){return b(e)?e:void 0},$=function(e,t){return arguments.length<2?z(M[e])||z(s[e]):M[e]&&M[e][t]||s[e]&&s[e][t]},H=m({}.isPrototypeOf),U=$("navigator","userAgent")||"",V=s.process,q=s.Deno,W=V&&V.versions||q&&q.version,G=W&&W.v8;G&&(a=(i=G.split("."))[0]>0&&i[0]<4?1:+(i[0]+i[1])),!a&&U&&(!(i=U.match(/Edge\/(\d+)/))||i[1]>=74)&&(i=U.match(/Chrome\/(\d+)/))&&(a=+i[1]);var K,Y=a,X=!!Object.getOwnPropertySymbols&&!w((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&Y&&Y<41})),J=X&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Z=s.Object,Q=J?function(e){return"symbol"==typeof e}:function(e){var t=$("Symbol");return b(t)&&H(t.prototype,Z(e))},ee=s.String,te=function(e){try{return ee(e)}catch(e){return"Object"}},ne=s.TypeError,re=function(e){if(b(e))return e;throw ne(te(e)+" is not a function")},oe=function(e,t){var n=e[t];return null==n?void 0:re(n)},ie=s.TypeError,ae=Object.defineProperty,ue=s["__core-js_shared__"]||function(e,t){try{ae(s,e,{value:t,configurable:!0,writable:!0})}catch(n){s[e]=t}return t}("__core-js_shared__",{}),se=o((function(e){(e.exports=function(e,t){return ue[e]||(ue[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"pure",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),ce=s.Object,le=function(e){return ce(R(e))},fe=m({}.hasOwnProperty),de=Object.hasOwn||function(e,t){return fe(le(e),t)},pe=0,he=Math.random(),ge=m(1..toString),ve=function(e){return"Symbol("+(void 0===e?"":e)+")_"+ge(++pe+he,36)},ye=se("wks"),me=s.Symbol,be=me&&me.for,we=J?me:me&&me.withoutSetter||ve,Ee=function(e){if(!de(ye,e)||!X&&"string"!=typeof ye[e]){var t="Symbol."+e;X&&de(me,e)?ye[e]=me[e]:ye[e]=J&&be?be(t):we(t)}return ye[e]},Ae=s.TypeError,Se=Ee("toPrimitive"),Ce=function(e){var t=function(e,t){if(!L(e)||Q(e))return e;var n,r=oe(e,Se);if(r){if(void 0===t&&(t="default"),n=S(r,e,t),!L(n)||Q(n))return n;throw Ae("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&b(n=e.toString)&&!L(r=S(n,e)))return r;if(b(n=e.valueOf)&&!L(r=S(n,e)))return r;if("string"!==t&&b(n=e.toString)&&!L(r=S(n,e)))return r;throw ie("Can't convert object to primitive value")}(e,t)}(e,"string");return Q(t)?t:t+""},xe=s.document,De=L(xe)&&L(xe.createElement),Oe=function(e){return De?xe.createElement(e):{}},ke=!E&&!w((function(){return 7!=Object.defineProperty(Oe("div"),"a",{get:function(){return 7}}).a})),Be=Object.getOwnPropertyDescriptor,Te=E?Be:function(e,t){if(e=I(e),t=Ce(t),ke)try{return Be(e,t)}catch(e){}if(de(e,t))return k(!S(O.f,e,t),e[t])},Fe={f:Te},_e=/#|\.prototype\./,Pe=function(e,t){var n=Ne[je(e)];return n==Ie||n!=Re&&(b(t)?w(t):!!t)},je=Pe.normalize=function(e){return String(e).replace(_e,".").toLowerCase()},Ne=Pe.data={},Re=Pe.NATIVE="N",Ie=Pe.POLYFILL="P",Le=Pe,Me=m(m.bind),ze=function(e,t){return re(e),void 0===t?e:Me?Me(e,t):function(){return e.apply(t,arguments)}},$e=s.String,He=s.TypeError,Ue=function(e){if(L(e))return e;throw He($e(e)+" is not an object")},Ve=s.TypeError,qe=Object.defineProperty,We=E?qe:function(e,t,n){if(Ue(e),t=Ce(t),Ue(n),ke)try{return qe(e,t,n)}catch(e){}if("get"in n||"set"in n)throw Ve("Accessors not supported");return"value"in n&&(e[t]=n.value),e},Ge={f:We},Ke=E?function(e,t,n){return Ge.f(e,t,k(1,n))}:function(e,t,n){return e[t]=n,e},Ye=Fe.f,Xe=function(e){var t=function(n,r,o){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(n);case 2:return new e(n,r)}return new e(n,r,o)}return p(e,this,arguments)};return t.prototype=e.prototype,t},Je=function(e,t){var n,r,o,i,a,u,c,l,f=e.target,d=e.global,p=e.stat,h=e.proto,g=d?s:p?s[f]:(s[f]||{}).prototype,v=d?M:M[f]||Ke(M,f,{})[f],y=v.prototype;for(o in t)n=!Le(d?o:f+(p?".":"#")+o,e.forced)&&g&&de(g,o),a=v[o],n&&(u=e.noTargetGet?(l=Ye(g,o))&&l.value:g[o]),i=n&&u?u:t[o],n&&typeof a==typeof i||(c=e.bind&&n?ze(i,s):e.wrap&&n?Xe(i):h&&b(i)?m(i):i,(e.sham||i&&i.sham||a&&a.sham)&&Ke(c,"sham",!0),Ke(v,o,c),h&&(de(M,r=f+"Prototype")||Ke(M,r,{}),Ke(M[r],o,i),e.real&&y&&!y[o]&&Ke(y,o,i)))},Ze=se("keys"),Qe=function(e){return Ze[e]||(Ze[e]=ve(e))},et=!w((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),tt=Qe("IE_PROTO"),nt=s.Object,rt=nt.prototype,ot=et?nt.getPrototypeOf:function(e){var t=le(e);if(de(t,tt))return t[tt];var n=t.constructor;return b(n)&&t instanceof n?n.prototype:t instanceof nt?rt:null},it=s.String,at=s.TypeError,ut=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=m(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return Ue(n),function(e){if("object"==typeof e||b(e))return e;throw at("Can't set "+it(e)+" as a prototype")}(r),t?e(n,r):n.__proto__=r,n}}():void 0),st=Math.ceil,ct=Math.floor,lt=function(e){var t=+e;return t!=t||0===t?0:(t>0?ct:st)(t)},ft=Math.max,dt=Math.min,pt=function(e,t){var n=lt(e);return n<0?ft(n+t,0):dt(n,t)},ht=Math.min,gt=function(e){return(t=e.length)>0?ht(lt(t),9007199254740991):0;var t},vt=function(e){return function(t,n,r){var o,i=I(t),a=gt(i),u=pt(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},yt={includes:vt(!0),indexOf:vt(!1)},mt={},bt=yt.indexOf,wt=m([].push),Et=function(e,t){var n,r=I(e),o=0,i=[];for(n in r)!de(mt,n)&&de(r,n)&&wt(i,n);for(;t.length>o;)de(r,n=t[o++])&&(~bt(i,n)||wt(i,n));return i},At=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],St=At.concat("length","prototype"),Ct=Object.getOwnPropertyNames||function(e){return Et(e,St)},xt={f:Ct},Dt={f:Object.getOwnPropertySymbols},Ot=m([].concat),kt=$("Reflect","ownKeys")||function(e){var t=xt.f(Ue(e)),n=Dt.f;return n?Ot(t,n(e)):t},Bt=Object.keys||function(e){return Et(e,At)},Tt=E?Object.defineProperties:function(e,t){Ue(e);for(var n,r=I(t),o=Bt(t),i=o.length,a=0;i>a;)Ge.f(e,n=o[a++],r[n]);return e},Ft=$("document","documentElement"),_t=Qe("IE_PROTO"),Pt=function(){},jt=function(e){return"<script>"+e+"<\/script>"},Nt=function(e){e.write(jt("")),e.close();var t=e.parentWindow.Object;return e=null,t},Rt=function(){try{K=new ActiveXObject("htmlfile")}catch(e){}var e,t;Rt="undefined"!=typeof document?document.domain&&K?Nt(K):((t=Oe("iframe")).style.display="none",Ft.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(jt("document.F=Object")),e.close(),e.F):Nt(K);for(var n=At.length;n--;)delete Rt.prototype[At[n]];return Rt()};mt[_t]=!0;var It=Object.create||function(e,t){var n;return null!==e?(Pt.prototype=Ue(e),n=new Pt,Pt.prototype=null,n[_t]=e):n=Rt(),void 0===t?n:Tt(n,t)},Lt=function(e,t,n){var r=Ce(t);r in e?Ge.f(e,r,k(0,n)):e[r]=n},Mt=s.Array,zt=Math.max,$t=function(e,t,n){for(var r=gt(e),o=pt(t,r),i=pt(void 0===n?r:n,r),a=Mt(zt(i-o,0)),u=0;o<i;o++,u++)Lt(a,u,e[o]);return a.length=u,a},Ht=m("".replace),Ut=m("".split),Vt=m([].join),qt=String(Error("zxcasd").stack),Wt=/\n\s*at [^:]*:[^\n]*/,Gt=Wt.test(qt),Kt=/@[^\n]*\n/.test(qt)&&!/zxcasd/.test(qt),Yt={},Xt=Ee("iterator"),Jt=Array.prototype,Zt={};Zt[Ee("toStringTag")]="z";var Qt="[object z]"===String(Zt),en=Ee("toStringTag"),tn=s.Object,nn="Arguments"==F(function(){return arguments}()),rn=Qt?F:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=tn(e),en))?n:nn?F(t):"Object"==(r=F(t))&&b(t.callee)?"Arguments":r},on=Ee("iterator"),an=function(e){if(null!=e)return oe(e,on)||oe(e,"@@iterator")||Yt[rn(e)]},un=s.TypeError,sn=function(e,t,n){var r,o;Ue(e);try{if(!(r=oe(e,"return"))){if("throw"===t)throw n;return n}r=S(r,e)}catch(e){o=!0,r=e}if("throw"===t)throw n;if(o)throw r;return Ue(r),n},cn=s.TypeError,ln=function(e,t){this.stopped=e,this.result=t},fn=ln.prototype,dn=s.String,pn=function(e){if("Symbol"===rn(e))throw TypeError("Cannot convert a Symbol value to a string");return dn(e)},hn=!w((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",k(1,7)),7!==e.stack)})),gn=Ee("toStringTag"),vn=s.Error,yn=[].push,mn=function(e,t){var n,r=arguments.length>2?arguments[2]:void 0,o=H(bn,this);ut?n=ut(new vn(void 0),o?ot(this):bn):(n=o?this:It(bn),Ke(n,gn,"Error")),Ke(n,"message",function(e,t){return void 0===e?arguments.length<2?"":t:pn(e)}(t,"")),hn&&Ke(n,"stack",function(e,t){if("string"!=typeof e)return e;if(Gt)for(;t--;)e=Ht(e,Wt,"");else if(Kt)return Vt($t(Ut(e,"\n"),t),"\n");return e}(n.stack,1)),function(e,t){L(t)&&"cause"in t&&Ke(e,"cause",t.cause)}(n,r);var i=[];return function(e,t,n){var r,o,i,a,u,s,c,l=!(!n||!n.AS_ENTRIES),f=!(!n||!n.IS_ITERATOR),d=!(!n||!n.INTERRUPTED),p=ze(t,n&&n.that),h=function(e){return r&&sn(r,"normal",e),new ln(!0,e)},g=function(e){return l?(Ue(e),d?p(e[0],e[1],h):p(e[0],e[1])):d?p(e,h):p(e)};if(f)r=e;else{if(!(o=an(e)))throw cn(te(e)+" is not iterable");if(function(e){return void 0!==e&&(Yt.Array===e||Jt[Xt]===e)}(o)){for(i=0,a=gt(e);a>i;i++)if((u=g(e[i]))&&H(fn,u))return u;return new ln(!1)}r=function(e,t){var n=arguments.length<2?an(e):t;if(re(n))return Ue(S(n,e));throw un(te(e)+" is not iterable")}(e,o)}for(s=r.next;!(c=S(s,r)).done;){try{u=g(c.value)}catch(e){sn(r,"throw",e)}if("object"==typeof u&&u&&H(fn,u))return u}new ln(!1)}(e,yn,{that:i}),Ke(n,"errors",i),n};ut?ut(mn,vn):function(e,t){for(var n=kt(t),r=Ge.f,o=Fe.f,i=0;i<n.length;i++){var a=n[i];de(e,a)||r(e,a,o(t,a))}}(mn,vn);var bn=mn.prototype=It(vn.prototype,{constructor:k(1,mn),message:k(1,""),name:k(1,"AggregateError")});Je({global:!0},{AggregateError:mn});var wn=m(Function.toString);b(ue.inspectSource)||(ue.inspectSource=function(e){return wn(e)});var En,An,Sn,Cn=ue.inspectSource,xn=s.WeakMap,Dn=b(xn)&&/native code/.test(Cn(xn)),On=s.TypeError,kn=s.WeakMap;if(Dn||ue.state){var Bn=ue.state||(ue.state=new kn),Tn=m(Bn.get),Fn=m(Bn.has),_n=m(Bn.set);En=function(e,t){if(Fn(Bn,e))throw new On("Object already initialized");return t.facade=e,_n(Bn,e,t),t},An=function(e){return Tn(Bn,e)||{}},Sn=function(e){return Fn(Bn,e)}}else{var Pn=Qe("state");mt[Pn]=!0,En=function(e,t){if(de(e,Pn))throw new On("Object already initialized");return t.facade=e,Ke(e,Pn,t),t},An=function(e){return de(e,Pn)?e[Pn]:{}},Sn=function(e){return de(e,Pn)}}var jn,Nn,Rn,In={set:En,get:An,has:Sn,enforce:function(e){return Sn(e)?An(e):En(e,{})},getterFor:function(e){return function(t){var n;if(!L(t)||(n=An(t)).type!==e)throw On("Incompatible receiver, "+e+" required");return n}}},Ln=Function.prototype,Mn=E&&Object.getOwnPropertyDescriptor,zn=de(Ln,"name"),$n={EXISTS:zn,PROPER:zn&&"something"===function(){}.name,CONFIGURABLE:zn&&(!E||E&&Mn(Ln,"name").configurable)},Hn=function(e,t,n,r){r&&r.enumerable?e[t]=n:Ke(e,t,n)},Un=Ee("iterator"),Vn=!1;[].keys&&("next"in(Rn=[].keys())?(Nn=ot(ot(Rn)))!==Object.prototype&&(jn=Nn):Vn=!0);var qn=null==jn||w((function(){var e={};return jn[Un].call(e)!==e}));jn=qn?{}:It(jn),b(jn[Un])||Hn(jn,Un,(function(){return this}));var Wn={IteratorPrototype:jn,BUGGY_SAFARI_ITERATORS:Vn},Gn=Qt?{}.toString:function(){return"[object "+rn(this)+"]"},Kn=Ge.f,Yn=Ee("toStringTag"),Xn=function(e,t,n,r){if(e){var o=n?e:e.prototype;de(o,Yn)||Kn(o,Yn,{configurable:!0,value:t}),r&&!Qt&&Ke(o,"toString",Gn)}},Jn=Wn.IteratorPrototype,Zn=function(){return this},Qn=$n.PROPER,er=Wn.BUGGY_SAFARI_ITERATORS,tr=Ee("iterator"),nr=function(){return this},rr=function(e,t,n,r,o,i,a){!function(e,t,n){var r=t+" Iterator";e.prototype=It(Jn,{next:k(1,n)}),Xn(e,r,!1,!0),Yt[r]=Zn}(n,t,r);var u,s,c,l=function(e){if(e===o&&g)return g;if(!er&&e in p)return p[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},f=t+" Iterator",d=!1,p=e.prototype,h=p[tr]||p["@@iterator"]||o&&p[o],g=!er&&h||l(o),v="Array"==t&&p.entries||h;if(v&&(u=ot(v.call(new e)))!==Object.prototype&&u.next&&(Xn(u,f,!0,!0),Yt[f]=nr),Qn&&"values"==o&&h&&"values"!==h.name&&(d=!0,g=function(){return S(h,this)}),o)if(s={values:l("values"),keys:i?g:l("keys"),entries:l("entries")},a)for(c in s)(er||d||!(c in p))&&Hn(p,c,s[c]);else Je({target:t,proto:!0,forced:er||d},s);return a&&p[tr]!==g&&Hn(p,tr,g,{name:o}),Yt[t]=g,s},or=In.set,ir=In.getterFor("Array Iterator");rr(Array,"Array",(function(e,t){or(this,{type:"Array Iterator",target:I(e),index:0,kind:t})}),(function(){var e=ir(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values"),Yt.Arguments=Yt.Array;var ar=m("".charAt),ur=m("".charCodeAt),sr=m("".slice),cr=function(e){return function(t,n){var r,o,i=pn(R(t)),a=lt(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=ur(i,a))<55296||r>56319||a+1===u||(o=ur(i,a+1))<56320||o>57343?e?ar(i,a):r:e?sr(i,a,a+2):o-56320+(r-55296<<10)+65536}},lr=(cr(!1),cr(!0)),fr=In.set,dr=In.getterFor("String Iterator");rr(String,"String",(function(e){fr(this,{type:"String Iterator",string:pn(e),index:0})}),(function(){var e,t=dr(this),n=t.string,r=t.index;return r>=n.length?{value:void 0,done:!0}:(e=lr(n,r),t.index+=e.length,{value:e,done:!1})}));var pr=M.AggregateError,hr=Ee("toStringTag");for(var gr in{CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var vr=s[gr],yr=vr&&vr.prototype;yr&&rn(yr)!==hr&&Ke(yr,hr,gr),Yt[gr]=Yt.Array}var mr,br,wr=pr,Er=function(e){return e&&e.Math==Math&&e},Ar=Er("object"==typeof globalThis&&globalThis)||Er("object"==typeof window&&window)||Er("object"==typeof self&&self)||Er("object"==typeof r&&r)||function(){return this}()||Function("return this")(),Sr=function(e){try{return!!e()}catch(e){return!0}},Cr=!Sr((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),xr=Function.prototype.call,Dr=xr.bind?xr.bind(xr):function(){return xr.apply(xr,arguments)},Or={}.propertyIsEnumerable,kr=Object.getOwnPropertyDescriptor,Br=kr&&!Or.call({1:2},1)?function(e){var t=kr(this,e);return!!t&&t.enumerable}:Or,Tr={f:Br},Fr=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},_r=Function.prototype,Pr=_r.bind,jr=_r.call,Nr=Pr&&Pr.bind(jr),Rr=Pr?function(e){return e&&Nr(jr,e)}:function(e){return e&&function(){return jr.apply(e,arguments)}},Ir=Rr({}.toString),Lr=Rr("".slice),Mr=function(e){return Lr(Ir(e),8,-1)},zr=Ar.Object,$r=Rr("".split),Hr=Sr((function(){return!zr("z").propertyIsEnumerable(0)}))?function(e){return"String"==Mr(e)?$r(e,""):zr(e)}:zr,Ur=Ar.TypeError,Vr=function(e){if(null==e)throw Ur("Can't call method on "+e);return e},qr=function(e){return Hr(Vr(e))},Wr=function(e){return"function"==typeof e},Gr=function(e){return"object"==typeof e?null!==e:Wr(e)},Kr=function(e,t){return arguments.length<2?function(e){return Wr(e)?e:void 0}(Ar[e]):Ar[e]&&Ar[e][t]},Yr=Rr({}.isPrototypeOf),Xr=Kr("navigator","userAgent")||"",Jr=Ar.process,Zr=Ar.Deno,Qr=Jr&&Jr.versions||Zr&&Zr.version,eo=Qr&&Qr.v8;eo&&(br=(mr=eo.split("."))[0]>0&&mr[0]<4?1:+(mr[0]+mr[1])),!br&&Xr&&(!(mr=Xr.match(/Edge\/(\d+)/))||mr[1]>=74)&&(mr=Xr.match(/Chrome\/(\d+)/))&&(br=+mr[1]);var to=br,no=!!Object.getOwnPropertySymbols&&!Sr((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&to&&to<41})),ro=no&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,oo=Ar.Object,io=ro?function(e){return"symbol"==typeof e}:function(e){var t=Kr("Symbol");return Wr(t)&&Yr(t.prototype,oo(e))},ao=Ar.String,uo=function(e){try{return ao(e)}catch(e){return"Object"}},so=Ar.TypeError,co=function(e){if(Wr(e))return e;throw so(uo(e)+" is not a function")},lo=function(e,t){var n=e[t];return null==n?void 0:co(n)},fo=Ar.TypeError,po=Object.defineProperty,ho=function(e,t){try{po(Ar,e,{value:t,configurable:!0,writable:!0})}catch(n){Ar[e]=t}return t},go=Ar["__core-js_shared__"]||ho("__core-js_shared__",{}),vo=o((function(e){(e.exports=function(e,t){return go[e]||(go[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"global",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),yo=Ar.Object,mo=function(e){return yo(Vr(e))},bo=Rr({}.hasOwnProperty),wo=Object.hasOwn||function(e,t){return bo(mo(e),t)},Eo=0,Ao=Math.random(),So=Rr(1..toString),Co=function(e){return"Symbol("+(void 0===e?"":e)+")_"+So(++Eo+Ao,36)},xo=vo("wks"),Do=Ar.Symbol,Oo=Do&&Do.for,ko=ro?Do:Do&&Do.withoutSetter||Co,Bo=function(e){if(!wo(xo,e)||!no&&"string"!=typeof xo[e]){var t="Symbol."+e;no&&wo(Do,e)?xo[e]=Do[e]:xo[e]=ro&&Oo?Oo(t):ko(t)}return xo[e]},To=Ar.TypeError,Fo=Bo("toPrimitive"),_o=function(e){var t=function(e,t){if(!Gr(e)||io(e))return e;var n,r=lo(e,Fo);if(r){if(void 0===t&&(t="default"),n=Dr(r,e,t),!Gr(n)||io(n))return n;throw To("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&Wr(n=e.toString)&&!Gr(r=Dr(n,e)))return r;if(Wr(n=e.valueOf)&&!Gr(r=Dr(n,e)))return r;if("string"!==t&&Wr(n=e.toString)&&!Gr(r=Dr(n,e)))return r;throw fo("Can't convert object to primitive value")}(e,t)}(e,"string");return io(t)?t:t+""},Po=Ar.document,jo=Gr(Po)&&Gr(Po.createElement),No=function(e){return jo?Po.createElement(e):{}},Ro=!Cr&&!Sr((function(){return 7!=Object.defineProperty(No("div"),"a",{get:function(){return 7}}).a})),Io=Object.getOwnPropertyDescriptor,Lo=Cr?Io:function(e,t){if(e=qr(e),t=_o(t),Ro)try{return Io(e,t)}catch(e){}if(wo(e,t))return Fr(!Dr(Tr.f,e,t),e[t])},Mo={f:Lo},zo=Ar.String,$o=Ar.TypeError,Ho=function(e){if(Gr(e))return e;throw $o(zo(e)+" is not an object")},Uo=Ar.TypeError,Vo=Object.defineProperty,qo=Cr?Vo:function(e,t,n){if(Ho(e),t=_o(t),Ho(n),Ro)try{return Vo(e,t,n)}catch(e){}if("get"in n||"set"in n)throw Uo("Accessors not supported");return"value"in n&&(e[t]=n.value),e},Wo={f:qo},Go=Cr?function(e,t,n){return Wo.f(e,t,Fr(1,n))}:function(e,t,n){return e[t]=n,e},Ko=Rr(Function.toString);Wr(go.inspectSource)||(go.inspectSource=function(e){return Ko(e)});var Yo,Xo,Jo,Zo=go.inspectSource,Qo=Ar.WeakMap,ei=Wr(Qo)&&/native code/.test(Zo(Qo)),ti=vo("keys"),ni=function(e){return ti[e]||(ti[e]=Co(e))},ri={},oi=Ar.TypeError,ii=Ar.WeakMap;if(ei||go.state){var ai=go.state||(go.state=new ii),ui=Rr(ai.get),si=Rr(ai.has),ci=Rr(ai.set);Yo=function(e,t){if(si(ai,e))throw new oi("Object already initialized");return t.facade=e,ci(ai,e,t),t},Xo=function(e){return ui(ai,e)||{}},Jo=function(e){return si(ai,e)}}else{var li=ni("state");ri[li]=!0,Yo=function(e,t){if(wo(e,li))throw new oi("Object already initialized");return t.facade=e,Go(e,li,t),t},Xo=function(e){return wo(e,li)?e[li]:{}},Jo=function(e){return wo(e,li)}}var fi={set:Yo,get:Xo,has:Jo,enforce:function(e){return Jo(e)?Xo(e):Yo(e,{})},getterFor:function(e){return function(t){var n;if(!Gr(t)||(n=Xo(t)).type!==e)throw oi("Incompatible receiver, "+e+" required");return n}}},di=Function.prototype,pi=Cr&&Object.getOwnPropertyDescriptor,hi=wo(di,"name"),gi={EXISTS:hi,PROPER:hi&&"something"===function(){}.name,CONFIGURABLE:hi&&(!Cr||Cr&&pi(di,"name").configurable)},vi=o((function(e){var t=gi.CONFIGURABLE,n=fi.get,r=fi.enforce,o=String(String).split("String");(e.exports=function(e,n,i,a){var u,s=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,l=!!a&&!!a.noTargetGet,f=a&&void 0!==a.name?a.name:n;Wr(i)&&("Symbol("===String(f).slice(0,7)&&(f="["+String(f).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!wo(i,"name")||t&&i.name!==f)&&Go(i,"name",f),(u=r(i)).source||(u.source=o.join("string"==typeof f?f:""))),e!==Ar?(s?!l&&e[n]&&(c=!0):delete e[n],c?e[n]=i:Go(e,n,i)):c?e[n]=i:ho(n,i)})(Function.prototype,"toString",(function(){return Wr(this)&&n(this).source||Zo(this)}))})),yi=Math.ceil,mi=Math.floor,bi=function(e){var t=+e;return t!=t||0===t?0:(t>0?mi:yi)(t)},wi=Math.max,Ei=Math.min,Ai=function(e,t){var n=bi(e);return n<0?wi(n+t,0):Ei(n,t)},Si=Math.min,Ci=function(e){return e>0?Si(bi(e),9007199254740991):0},xi=function(e){return Ci(e.length)},Di=function(e){return function(t,n,r){var o,i=qr(t),a=xi(i),u=Ai(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},Oi=(Di(!0),Di(!1)),ki=Rr([].push),Bi=function(e,t){var n,r=qr(e),o=0,i=[];for(n in r)!wo(ri,n)&&wo(r,n)&&ki(i,n);for(;t.length>o;)wo(r,n=t[o++])&&(~Oi(i,n)||ki(i,n));return i},Ti=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Fi=Ti.concat("length","prototype"),_i=Object.getOwnPropertyNames||function(e){return Bi(e,Fi)},Pi={f:_i},ji={f:Object.getOwnPropertySymbols},Ni=Rr([].concat),Ri=Kr("Reflect","ownKeys")||function(e){var t=Pi.f(Ho(e)),n=ji.f;return n?Ni(t,n(e)):t},Ii=function(e,t){for(var n=Ri(t),r=Wo.f,o=Mo.f,i=0;i<n.length;i++){var a=n[i];wo(e,a)||r(e,a,o(t,a))}},Li=/#|\.prototype\./,Mi=function(e,t){var n=$i[zi(e)];return n==Ui||n!=Hi&&(Wr(t)?Sr(t):!!t)},zi=Mi.normalize=function(e){return String(e).replace(Li,".").toLowerCase()},$i=Mi.data={},Hi=Mi.NATIVE="N",Ui=Mi.POLYFILL="P",Vi=Mi,qi=Mo.f,Wi=function(e,t){var n,r,o,i,a,u=e.target,s=e.global,c=e.stat;if(n=s?Ar:c?Ar[u]||ho(u,{}):(Ar[u]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(a=qi(n,r))&&a.value:n[r],!Vi(s?r:u+(c?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;Ii(i,o)}(e.sham||o&&o.sham)&&Go(i,"sham",!0),vi(n,r,i,e)}},Gi={};Gi[Bo("toStringTag")]="z";var Ki,Yi="[object z]"===String(Gi),Xi=Bo("toStringTag"),Ji=Ar.Object,Zi="Arguments"==Mr(function(){return arguments}()),Qi=Yi?Mr:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Ji(e),Xi))?n:Zi?Mr(t):"Object"==(r=Mr(t))&&Wr(t.callee)?"Arguments":r},ea=Ar.String,ta=function(e){if("Symbol"===Qi(e))throw TypeError("Cannot convert a Symbol value to a string");return ea(e)},na=function(){var e=Ho(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},ra=Ar.RegExp,oa=Sr((function(){var e=ra("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),ia=oa||Sr((function(){return!ra("a","y").sticky})),aa=oa||Sr((function(){var e=ra("^r","gy");return e.lastIndex=2,null!=e.exec("str")})),ua={BROKEN_CARET:aa,MISSED_STICKY:ia,UNSUPPORTED_Y:oa},sa=Object.keys||function(e){return Bi(e,Ti)},ca=Cr?Object.defineProperties:function(e,t){Ho(e);for(var n,r=qr(t),o=sa(t),i=o.length,a=0;i>a;)Wo.f(e,n=o[a++],r[n]);return e},la=Kr("document","documentElement"),fa=ni("IE_PROTO"),da=function(){},pa=function(e){return"<script>"+e+"<\/script>"},ha=function(e){e.write(pa("")),e.close();var t=e.parentWindow.Object;return e=null,t},ga=function(){try{Ki=new ActiveXObject("htmlfile")}catch(e){}var e,t;ga="undefined"!=typeof document?document.domain&&Ki?ha(Ki):((t=No("iframe")).style.display="none",la.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(pa("document.F=Object")),e.close(),e.F):ha(Ki);for(var n=Ti.length;n--;)delete ga.prototype[Ti[n]];return ga()};ri[fa]=!0;var va,ya,ma=Object.create||function(e,t){var n;return null!==e?(da.prototype=Ho(e),n=new da,da.prototype=null,n[fa]=e):n=ga(),void 0===t?n:ca(n,t)},ba=Ar.RegExp,wa=Sr((function(){var e=ba(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)})),Ea=Ar.RegExp,Aa=Sr((function(){var e=Ea("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")})),Sa=fi.get,Ca=vo("native-string-replace",String.prototype.replace),xa=RegExp.prototype.exec,Da=xa,Oa=Rr("".charAt),ka=Rr("".indexOf),Ba=Rr("".replace),Ta=Rr("".slice),Fa=(ya=/b*/g,Dr(xa,va=/a/,"a"),Dr(xa,ya,"a"),0!==va.lastIndex||0!==ya.lastIndex),_a=ua.BROKEN_CARET,Pa=void 0!==/()??/.exec("")[1];(Fa||Pa||_a||wa||Aa)&&(Da=function(e){var t,n,r,o,i,a,u,s=this,c=Sa(s),l=ta(e),f=c.raw;if(f)return f.lastIndex=s.lastIndex,t=Dr(Da,f,l),s.lastIndex=f.lastIndex,t;var d=c.groups,p=_a&&s.sticky,h=Dr(na,s),g=s.source,v=0,y=l;if(p&&(h=Ba(h,"y",""),-1===ka(h,"g")&&(h+="g"),y=Ta(l,s.lastIndex),s.lastIndex>0&&(!s.multiline||s.multiline&&"\n"!==Oa(l,s.lastIndex-1))&&(g="(?: "+g+")",y=" "+y,v++),n=new RegExp("^(?:"+g+")",h)),Pa&&(n=new RegExp("^"+g+"$(?!\\s)",h)),Fa&&(r=s.lastIndex),o=Dr(xa,p?n:s,y),p?o?(o.input=Ta(o.input,v),o[0]=Ta(o[0],v),o.index=s.lastIndex,s.lastIndex+=o[0].length):s.lastIndex=0:Fa&&o&&(s.lastIndex=s.global?o.index+o[0].length:r),Pa&&o&&o.length>1&&Dr(Ca,o[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&d)for(o.groups=a=ma(null),i=0;i<d.length;i++)a[(u=d[i])[0]]=o[u[1]];return o});var ja=Da;Wi({target:"RegExp",proto:!0,forced:/./.exec!==ja},{exec:ja}),Bo("species");var Na=RegExp.prototype,Ra=Rr("".charAt),Ia=Rr("".charCodeAt),La=Rr("".slice),Ma=function(e){return function(t,n){var r,o,i=ta(Vr(t)),a=bi(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=Ia(i,a))<55296||r>56319||a+1===u||(o=Ia(i,a+1))<56320||o>57343?e?Ra(i,a):r:e?La(i,a,a+2):o-56320+(r-55296<<10)+65536}},za={codeAt:Ma(!1),charAt:Ma(!0)},$a=za.charAt,Ha=function(e,t,n){return t+(n?$a(e,t).length:1)},Ua=Ar.TypeError,Va=function(e,t){var n=e.exec;if(Wr(n)){var r=Dr(n,e,t);return null!==r&&Ho(r),r}if("RegExp"===Mr(e))return Dr(ja,e,t);throw Ua("RegExp#exec called on incompatible receiver")};!function(e){var t=Bo(e),n=!Sr((function(){var n={};return n[t]=function(){return 7},7!=""[e](n)})),r=n&&!Sr((function(){var e=!1,n=/a/;return n.exec=function(){return e=!0,null},n[t](""),!e}));if(!n||!r){var o=Rr(/./[t]),i=function(e,t,n){return[function(t){var n=Vr(this),r=null==t?void 0:lo(t,e);return r?Dr(r,t,n):new RegExp(t)[e](ta(n))},function(e){var r=Ho(this),o=ta(e),i=n(t,r,o);if(i.done)return i.value;if(!r.global)return Va(r,o);var a=r.unicode;r.lastIndex=0;for(var u,s=[],c=0;null!==(u=Va(r,o));){var l=ta(u[0]);s[c]=l,""===l&&(r.lastIndex=Ha(o,Ci(r.lastIndex),a)),c++}return 0===c?null:s}]}(t,""[e],(function(e,t,r,i,a){var u=Rr(e),s=t.exec;return s===ja||s===Na.exec?n&&!a?{done:!0,value:o(t,r,i)}:{done:!0,value:u(r,t,i)}:{done:!1}}));vi(String.prototype,e,i[0]),vi(Na,t,i[1])}}("match"),Wi({global:!0},{globalThis:Ar});var qa=!Sr((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Wa=ni("IE_PROTO"),Ga=Ar.Object,Ka=Ga.prototype,Ya=qa?Ga.getPrototypeOf:function(e){var t=mo(e);if(wo(t,Wa))return t[Wa];var n=t.constructor;return Wr(n)&&t instanceof n?n.prototype:t instanceof Ga?Ka:null},Xa=Ar.String,Ja=Ar.TypeError,Za=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Rr(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return Ho(n),function(e){if("object"==typeof e||Wr(e))return e;throw Ja("Can't set "+Xa(e)+" as a prototype")}(r),t?e(n,r):n.__proto__=r,n}}():void 0),Qa=Ar.Array,eu=Math.max,tu=Rr("".replace),nu=Rr("".split),ru=Rr([].join),ou=String(Error("zxcasd").stack),iu=/\n\s*at [^:]*:[^\n]*/,au=iu.test(ou),uu=/@[^\n]*\n/.test(ou)&&!/zxcasd/.test(ou),su=Rr(Rr.bind),cu=function(e,t){return co(e),void 0===t?e:su?su(e,t):function(){return e.apply(t,arguments)}},lu={},fu=Bo("iterator"),du=Array.prototype,pu=Bo("iterator"),hu=function(e){if(null!=e)return lo(e,pu)||lo(e,"@@iterator")||lu[Qi(e)]},gu=Ar.TypeError,vu=function(e,t,n){var r,o;Ho(e);try{if(!(r=lo(e,"return"))){if("throw"===t)throw n;return n}r=Dr(r,e)}catch(e){o=!0,r=e}if("throw"===t)throw n;if(o)throw r;return Ho(r),n},yu=Ar.TypeError,mu=function(e,t){this.stopped=e,this.result=t},bu=mu.prototype,wu=!Sr((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",Fr(1,7)),7!==e.stack)})),Eu=Bo("toStringTag"),Au=Ar.Error,Su=[].push,Cu=function(e,t){var n,r=arguments.length>2?arguments[2]:void 0,o=Yr(xu,this);Za?n=Za(new Au(void 0),o?Ya(this):xu):(n=o?this:ma(xu),Go(n,Eu,"Error")),Go(n,"message",function(e,t){return void 0===e?arguments.length<2?"":t:ta(e)}(t,"")),wu&&Go(n,"stack",function(e,t){if("string"!=typeof e)return e;if(au)for(;t--;)e=tu(e,iu,"");else if(uu)return ru(function(e,t){for(var n,r,o,i,a=xi(e),u=Ai(t,a),s=Ai(a,a),c=Qa(eu(s-u,0)),l=0;u<s;u++,l++)n=c,r=l,o=e[u],(i=_o(r))in n?Wo.f(n,i,Fr(0,o)):n[i]=o;return c.length=l,c}(nu(e,"\n"),t),"\n");return e}(n.stack,1)),function(e,t){Gr(t)&&"cause"in t&&Go(e,"cause",t.cause)}(n,r);var i=[];return function(e,t,n){var r,o,i,a,u,s,c,l=!(!n||!n.AS_ENTRIES),f=!(!n||!n.IS_ITERATOR),d=!(!n||!n.INTERRUPTED),p=cu(t,n&&n.that),h=function(e){return r&&vu(r,"normal",e),new mu(!0,e)},g=function(e){return l?(Ho(e),d?p(e[0],e[1],h):p(e[0],e[1])):d?p(e,h):p(e)};if(f)r=e;else{if(!(o=hu(e)))throw yu(uo(e)+" is not iterable");if(function(e){return void 0!==e&&(lu.Array===e||du[fu]===e)}(o)){for(i=0,a=xi(e);a>i;i++)if((u=g(e[i]))&&Yr(bu,u))return u;return new mu(!1)}r=function(e,t){var n=arguments.length<2?hu(e):t;if(co(n))return Ho(Dr(n,e));throw gu(uo(e)+" is not iterable")}(e,o)}for(s=r.next;!(c=Dr(s,r)).done;){try{u=g(c.value)}catch(e){vu(r,"throw",e)}if("object"==typeof u&&u&&Yr(bu,u))return u}new mu(!1)}(e,Su,{that:i}),Go(n,"errors",i),n};Za?Za(Cu,Au):Ii(Cu,Au);var xu=Cu.prototype=ma(Au.prototype,{constructor:Fr(1,Cu),message:Fr(1,""),name:Fr(1,"AggregateError")});Wi({global:!0},{AggregateError:Cu});var Du=Bo("unscopables"),Ou=Array.prototype;null==Ou[Du]&&Wo.f(Ou,Du,{configurable:!0,value:ma(null)});var ku,Bu,Tu,Fu=function(e){Ou[Du][e]=!0},_u=Bo("iterator"),Pu=!1;[].keys&&("next"in(Tu=[].keys())?(Bu=Ya(Ya(Tu)))!==Object.prototype&&(ku=Bu):Pu=!0);var ju=null==ku||Sr((function(){var e={};return ku[_u].call(e)!==e}));ju&&(ku={}),Wr(ku[_u])||vi(ku,_u,(function(){return this}));var Nu={IteratorPrototype:ku,BUGGY_SAFARI_ITERATORS:Pu},Ru=Wo.f,Iu=Bo("toStringTag"),Lu=function(e,t,n){e&&!wo(e=n?e:e.prototype,Iu)&&Ru(e,Iu,{configurable:!0,value:t})},Mu=Nu.IteratorPrototype,zu=function(){return this},$u=gi.PROPER,Hu=gi.CONFIGURABLE,Uu=Nu.IteratorPrototype,Vu=Nu.BUGGY_SAFARI_ITERATORS,qu=Bo("iterator"),Wu=function(){return this},Gu=function(e,t,n,r,o,i,a){!function(e,t,n){var r=t+" Iterator";e.prototype=ma(Mu,{next:Fr(1,n)}),Lu(e,r,!1),lu[r]=zu}(n,t,r);var u,s,c,l=function(e){if(e===o&&g)return g;if(!Vu&&e in p)return p[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},f=t+" Iterator",d=!1,p=e.prototype,h=p[qu]||p["@@iterator"]||o&&p[o],g=!Vu&&h||l(o),v="Array"==t&&p.entries||h;if(v&&(u=Ya(v.call(new e)))!==Object.prototype&&u.next&&(Ya(u)!==Uu&&(Za?Za(u,Uu):Wr(u[qu])||vi(u,qu,Wu)),Lu(u,f,!0)),$u&&"values"==o&&h&&"values"!==h.name&&(Hu?Go(p,"name","values"):(d=!0,g=function(){return Dr(h,this)})),o)if(s={values:l("values"),keys:i?g:l("keys"),entries:l("entries")},a)for(c in s)(Vu||d||!(c in p))&&vi(p,c,s[c]);else Wi({target:t,proto:!0,forced:Vu||d},s);return p[qu]!==g&&vi(p,qu,g,{name:o}),lu[t]=g,s},Ku=fi.set,Yu=fi.getterFor("Array Iterator"),Xu=Gu(Array,"Array",(function(e,t){Ku(this,{type:"Array Iterator",target:qr(e),index:0,kind:t})}),(function(){var e=Yu(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values");lu.Arguments=lu.Array,Fu("keys"),Fu("values"),Fu("entries");var Ju=za.charAt,Zu=fi.set,Qu=fi.getterFor("String Iterator");Gu(String,"String",(function(e){Zu(this,{type:"String Iterator",string:ta(e),index:0})}),(function(){var e,t=Qu(this),n=t.string,r=t.index;return r>=n.length?{value:void 0,done:!0}:(e=Ju(n,r),t.index+=e.length,{value:e,done:!1})}));var es,ts={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},ns=No("span").classList,rs=ns&&ns.constructor&&ns.constructor.prototype,os=rs===Object.prototype?void 0:rs,is=Bo("iterator"),as=Bo("toStringTag"),us=Xu.values,ss=function(e,t){if(e){if(e[is]!==us)try{Go(e,is,us)}catch(t){e[is]=us}if(e[as]||Go(e,as,t),ts[t])for(var n in Xu)if(e[n]!==Xu[n])try{Go(e,n,Xu[n])}catch(t){e[n]=Xu[n]}}};for(var cs in ts)ss(Ar[cs]&&Ar[cs].prototype,cs);function ls(){"undefined"==typeof globalThis&&(window.globalThis=window)}function fs(){void 0===wr&&(window.AggregateError=function(e,t){var n=new Error(t);return n.errors=e,n})}ss(os,"DOMTokenList"),void 0===n.g?("ActiveXObject"in window&&console.error("æ±æ­ï¼wangEditor V5+ çæ¬å¼å§ï¼ä¸å¨æ¯æ IE æµè§å¨\n Sorry, wangEditor V5+ versions do not support IE browser."),ls(),fs()):n.g&&(null===(es=n.g.navigator)||void 0===es?void 0:es.userAgent.match("QQBrowser"))&&(ls(),fs());var ds=Array.isArray||function(e){return"Array"==F(e)},ps=function(){},hs=[],gs=$("Reflect","construct"),vs=/^\s*(?:class|function)\b/,ys=m(vs.exec),ms=!vs.exec(ps),bs=function(e){if(!b(e))return!1;try{return gs(ps,hs,e),!0}catch(e){return!1}},ws=!gs||w((function(){var e;return bs(bs.call)||!bs(Object)||!bs((function(){e=!0}))||e}))?function(e){if(!b(e))return!1;switch(rn(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return ms||!!ys(vs,Cn(e))}:bs,Es=Ee("species"),As=s.Array,Ss=function(e,t){return new(function(e){var t;return ds(e)&&(t=e.constructor,(ws(t)&&(t===As||ds(t.prototype))||L(t)&&null===(t=t[Es]))&&(t=void 0)),void 0===t?As:t}(e))(0===t?0:t)},Cs=Ee("species"),xs=Ee("isConcatSpreadable"),Ds=s.TypeError,Os=Y>=51||!w((function(){var e=[];return e[xs]=!1,e.concat()[0]!==e})),ks=Y>=51||!w((function(){var e=[];return(e.constructor={})[Cs]=function(){return{foo:1}},1!==e.concat(Boolean).foo})),Bs=function(e){if(!L(e))return!1;var t=e[xs];return void 0!==t?!!t:ds(e)};Je({target:"Array",proto:!0,forced:!Os||!ks},{concat:function(e){var t,n,r,o,i,a=le(this),u=Ss(a,0),s=0;for(t=-1,r=arguments.length;t<r;t++)if(Bs(i=-1===t?a:arguments[t])){if(s+(o=gt(i))>9007199254740991)throw Ds("Maximum allowed index exceeded");for(n=0;n<o;n++,s++)n in i&&Lt(u,s,i[n])}else{if(s>=9007199254740991)throw Ds("Maximum allowed index exceeded");Lt(u,s++,i)}return u.length=s,u}});var Ts=xt.f,Fs="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],_s={f:function(e){return Fs&&"Window"==F(e)?function(e){try{return Ts(e)}catch(e){return $t(Fs)}}(e):Ts(I(e))}},Ps=m([].slice),js={f:Ee},Ns=Ge.f,Rs=function(e){var t=M.Symbol||(M.Symbol={});de(t,e)||Ns(t,e,{value:js.f(e)})},Is=m([].push),Ls=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=le(s),g=j(h),v=ze(c,l),y=gt(g),m=0,b=f||Ss,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:Is(w,d)}else switch(e){case 4:return!1;case 7:Is(w,d)}return i?-1:r||o?o:w}},Ms=[Ls(0),Ls(1),Ls(2),Ls(3),Ls(4),Ls(5),Ls(6),Ls(7)][0],zs=Qe("hidden"),$s=Ee("toPrimitive"),Hs=In.set,Us=In.getterFor("Symbol"),Vs=Object.prototype,qs=s.Symbol,Ws=qs&&qs.prototype,Gs=s.TypeError,Ks=s.QObject,Ys=$("JSON","stringify"),Xs=Fe.f,Js=Ge.f,Zs=_s.f,Qs=O.f,ec=m([].push),tc=se("symbols"),nc=se("op-symbols"),rc=se("string-to-symbol-registry"),oc=se("symbol-to-string-registry"),ic=se("wks"),ac=!Ks||!Ks.prototype||!Ks.prototype.findChild,uc=E&&w((function(){return 7!=It(Js({},"a",{get:function(){return Js(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=Xs(Vs,t);r&&delete Vs[t],Js(e,t,n),r&&e!==Vs&&Js(Vs,t,r)}:Js,sc=function(e,t){var n=tc[e]=It(Ws);return Hs(n,{type:"Symbol",tag:e,description:t}),E||(n.description=t),n},cc=function(e,t,n){e===Vs&&cc(nc,t,n),Ue(e);var r=Ce(t);return Ue(n),de(tc,r)?(n.enumerable?(de(e,zs)&&e[zs][r]&&(e[zs][r]=!1),n=It(n,{enumerable:k(0,!1)})):(de(e,zs)||Js(e,zs,k(1,{})),e[zs][r]=!0),uc(e,r,n)):Js(e,r,n)},lc=function(e,t){Ue(e);var n=I(t),r=Bt(n).concat(hc(n));return Ms(r,(function(t){E&&!S(fc,n,t)||cc(e,t,n[t])})),e},fc=function(e){var t=Ce(e),n=S(Qs,this,t);return!(this===Vs&&de(tc,t)&&!de(nc,t))&&(!(n||!de(this,t)||!de(tc,t)||de(this,zs)&&this[zs][t])||n)},dc=function(e,t){var n=I(e),r=Ce(t);if(n!==Vs||!de(tc,r)||de(nc,r)){var o=Xs(n,r);return!o||!de(tc,r)||de(n,zs)&&n[zs][r]||(o.enumerable=!0),o}},pc=function(e){var t=Zs(I(e)),n=[];return Ms(t,(function(e){de(tc,e)||de(mt,e)||ec(n,e)})),n},hc=function(e){var t=e===Vs,n=Zs(t?nc:I(e)),r=[];return Ms(n,(function(e){!de(tc,e)||t&&!de(Vs,e)||ec(r,tc[e])})),r};if(X||(Ws=(qs=function(){if(H(Ws,this))throw Gs("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?pn(arguments[0]):void 0,t=ve(e),n=function(e){this===Vs&&S(n,nc,e),de(this,zs)&&de(this[zs],t)&&(this[zs][t]=!1),uc(this,t,k(1,e))};return E&&ac&&uc(Vs,t,{configurable:!0,set:n}),sc(t,e)}).prototype,Hn(Ws,"toString",(function(){return Us(this).tag})),Hn(qs,"withoutSetter",(function(e){return sc(ve(e),e)})),O.f=fc,Ge.f=cc,Fe.f=dc,xt.f=_s.f=pc,Dt.f=hc,js.f=function(e){return sc(Ee(e),e)},E&&Js(Ws,"description",{configurable:!0,get:function(){return Us(this).description}})),Je({global:!0,wrap:!0,forced:!X,sham:!X},{Symbol:qs}),Ms(Bt(ic),(function(e){Rs(e)})),Je({target:"Symbol",stat:!0,forced:!X},{for:function(e){var t=pn(e);if(de(rc,t))return rc[t];var n=qs(t);return rc[t]=n,oc[n]=t,n},keyFor:function(e){if(!Q(e))throw Gs(e+" is not a symbol");if(de(oc,e))return oc[e]},useSetter:function(){ac=!0},useSimple:function(){ac=!1}}),Je({target:"Object",stat:!0,forced:!X,sham:!E},{create:function(e,t){return void 0===t?It(e):lc(It(e),t)},defineProperty:cc,defineProperties:lc,getOwnPropertyDescriptor:dc}),Je({target:"Object",stat:!0,forced:!X},{getOwnPropertyNames:pc,getOwnPropertySymbols:hc}),Je({target:"Object",stat:!0,forced:w((function(){Dt.f(1)}))},{getOwnPropertySymbols:function(e){return Dt.f(le(e))}}),Ys){var gc=!X||w((function(){var e=qs();return"[null]"!=Ys([e])||"{}"!=Ys({a:e})||"{}"!=Ys(Object(e))}));Je({target:"JSON",stat:!0,forced:gc},{stringify:function(e,t,n){var r=Ps(arguments),o=t;if((L(t)||void 0!==e)&&!Q(e))return ds(t)||(t=function(e,t){if(b(o)&&(t=S(o,this,e,t)),!Q(t))return t}),r[1]=t,p(Ys,null,r)}})}if(!Ws[$s]){var vc=Ws.valueOf;Hn(Ws,$s,(function(e){return S(vc,this)}))}Xn(qs,"Symbol"),mt[zs]=!0,Rs("asyncIterator"),Rs("hasInstance"),Rs("isConcatSpreadable"),Rs("iterator"),Rs("match"),Rs("matchAll"),Rs("replace"),Rs("search"),Rs("species"),Rs("split"),Rs("toPrimitive"),Rs("toStringTag"),Rs("unscopables"),Xn(s.JSON,"JSON",!0);var yc=M.Symbol;Rs("asyncDispose"),Rs("dispose"),Rs("matcher"),Rs("metadata"),Rs("observable"),Rs("patternMatch"),Rs("replaceAll");var mc=yc,bc=js.f("iterator"),wc=o((function(e){function t(n){return"function"==typeof mc&&"symbol"==typeof bc?(e.exports=t=function(e){return typeof e},e.exports.default=e.exports,e.exports.__esModule=!0):(e.exports=t=function(e){return e&&"function"==typeof mc&&e.constructor===mc&&e!==mc.prototype?"symbol":typeof e},e.exports.default=e.exports,e.exports.__esModule=!0),t(n)}e.exports=t,e.exports.default=e.exports,e.exports.__esModule=!0})),Ec=function(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}(wc),Ac=Mo.f,Sc=Sr((function(){Ac(1)}));if(Wi({target:"Object",stat:!0,forced:!Cr||Sc,sham:!Cr},{getOwnPropertyDescriptor:function(e,t){return Ac(qr(e),t)}}),"object"===(void 0===n.g?"undefined":Ec(n.g))){var Cc=Object.getOwnPropertyDescriptor(n.g,"window");n.g.window&&!Cc.set||(n.g.window=n.g,n.g.requestAnimationFrame=function(){},n.g.navigator={userAgent:""},n.g.location={hostname:"0.0.0.0",port:0,protocol:"http:"},n.g.btoa=function(){},n.g.crypto={getRandomValues:function(e){return nodeCrypto.randomFillSync(e)}}),null!=n.g.document&&null==n.g.document.getElementsByTagName&&(n.g.document.getElementsByTagName=function(){return[]})}function xc(e){return"[object Object]"===Object.prototype.toString.call(e)}function Dc(e){var t,n;return!1!==xc(e)&&(void 0===(t=e.constructor)||!1!==xc(n=t.prototype)&&!1!==n.hasOwnProperty("isPrototypeOf"))}function Oc(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw Error("[Immer] minified error nr: "+e+(n.length?" "+n.map((function(e){return"'"+e+"'"})).join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function kc(e){return!!e&&!!e[dl]}function Bc(e){return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var t=Object.getPrototypeOf(e);if(null===t)return!0;var n=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return n===Object||"function"==typeof n&&Function.toString.call(n)===pl}(e)||Array.isArray(e)||!!e[fl]||!!e.constructor[fl]||jc(e)||Nc(e))}function Tc(e,t,n){void 0===n&&(n=!1),0===Fc(e)?(n?Object.keys:hl)(e).forEach((function(r){n&&"symbol"==typeof r||t(r,e[r],e)})):e.forEach((function(n,r){return t(r,n,e)}))}function Fc(e){var t=e[dl];return t?t.i>3?t.i-4:t.i:Array.isArray(e)?1:jc(e)?2:Nc(e)?3:0}function _c(e,t){return 2===Fc(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function Pc(e,t,n){var r=Fc(e);2===r?e.set(t,n):3===r?(e.delete(t),e.add(n)):e[t]=n}function jc(e){return ul&&e instanceof Map}function Nc(e){return sl&&e instanceof Set}function Rc(e){return e.o||e.t}function Ic(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var t=gl(e);delete t[dl];for(var n=hl(t),r=0;r<n.length;r++){var o=n[r],i=t[o];!1===i.writable&&(i.writable=!0,i.configurable=!0),(i.get||i.set)&&(t[o]={configurable:!0,writable:!0,enumerable:i.enumerable,value:e[o]})}return Object.create(Object.getPrototypeOf(e),t)}function Lc(e,t){return void 0===t&&(t=!1),zc(e)||kc(e)||!Bc(e)||(Fc(e)>1&&(e.set=e.add=e.clear=e.delete=Mc),Object.freeze(e),t&&Tc(e,(function(e,t){return Lc(t,!0)}),!0)),e}function Mc(){Oc(2)}function zc(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function $c(e){var t=vl[e];return t||Oc(18,e),t}function Hc(){return il}function Uc(e,t){t&&($c("Patches"),e.u=[],e.s=[],e.v=t)}function Vc(e){qc(e),e.p.forEach(Gc),e.p=null}function qc(e){e===il&&(il=e.l)}function Wc(e){return il={p:[],l:il,h:e,m:!0,_:0}}function Gc(e){var t=e[dl];0===t.i||1===t.i?t.j():t.O=!0}function Kc(e,t){t._=t.p.length;var n=t.p[0],r=void 0!==e&&e!==n;return t.h.g||$c("ES5").S(t,e,r),r?(n[dl].P&&(Vc(t),Oc(4)),Bc(e)&&(e=Yc(t,e),t.l||Jc(t,e)),t.u&&$c("Patches").M(n[dl],e,t.u,t.s)):e=Yc(t,n,[]),Vc(t),t.u&&t.v(t.u,t.s),e!==ll?e:void 0}function Yc(e,t,n){if(zc(t))return t;var r=t[dl];if(!r)return Tc(t,(function(o,i){return Xc(e,r,t,o,i,n)}),!0),t;if(r.A!==e)return t;if(!r.P)return Jc(e,r.t,!0),r.t;if(!r.I){r.I=!0,r.A._--;var o=4===r.i||5===r.i?r.o=Ic(r.k):r.o;Tc(3===r.i?new Set(o):o,(function(t,i){return Xc(e,r,o,t,i,n)})),Jc(e,o,!1),n&&e.u&&$c("Patches").R(r,n,e.u,e.s)}return r.o}function Xc(e,t,n,r,o,i){if(kc(o)){var a=Yc(e,o,i&&t&&3!==t.i&&!_c(t.D,r)?i.concat(r):void 0);if(Pc(n,r,a),!kc(a))return;e.m=!1}if(Bc(o)&&!zc(o)){if(!e.h.F&&e._<1)return;Yc(e,o),t&&t.A.l||Jc(e,o)}}function Jc(e,t,n){void 0===n&&(n=!1),e.h.F&&e.m&&Lc(t,n)}function Zc(e,t){var n=e[dl];return(n?Rc(n):e)[t]}function Qc(e,t){if(t in e)for(var n=Object.getPrototypeOf(e);n;){var r=Object.getOwnPropertyDescriptor(n,t);if(r)return r;n=Object.getPrototypeOf(n)}}function el(e){e.P||(e.P=!0,e.l&&el(e.l))}function tl(e){e.o||(e.o=Ic(e.t))}function nl(e,t,n){var r=jc(t)?$c("MapSet").N(t,n):Nc(t)?$c("MapSet").T(t,n):e.g?function(e,t){var n=Array.isArray(e),r={i:n?1:0,A:t?t.A:Hc(),P:!1,I:!1,D:{},l:t,t:e,k:null,o:null,j:null,C:!1},o=r,i=yl;n&&(o=[r],i=ml);var a=Proxy.revocable(o,i),u=a.revoke,s=a.proxy;return r.k=s,r.j=u,s}(t,n):$c("ES5").J(t,n);return(n?n.A:Hc()).p.push(r),r}function rl(e,t){switch(t){case 2:return new Map(e);case 3:return Array.from(e)}return Ic(e)}var ol,il,al="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),ul="undefined"!=typeof Map,sl="undefined"!=typeof Set,cl="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,ll=al?Symbol.for("immer-nothing"):((ol={})["immer-nothing"]=!0,ol),fl=al?Symbol.for("immer-draftable"):"__$immer_draftable",dl=al?Symbol.for("immer-state"):"__$immer_state",pl=""+Object.prototype.constructor,hl="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames,gl=Object.getOwnPropertyDescriptors||function(e){var t={};return hl(e).forEach((function(n){t[n]=Object.getOwnPropertyDescriptor(e,n)})),t},vl={},yl={get:function(e,t){if(t===dl)return e;var n=Rc(e);if(!_c(n,t))return function(e,t,n){var r,o=Qc(t,n);return o?"value"in o?o.value:null===(r=o.get)||void 0===r?void 0:r.call(e.k):void 0}(e,n,t);var r=n[t];return e.I||!Bc(r)?r:r===Zc(e.t,t)?(tl(e),e.o[t]=nl(e.A.h,r,e)):r},has:function(e,t){return t in Rc(e)},ownKeys:function(e){return Reflect.ownKeys(Rc(e))},set:function(e,t,n){var r=Qc(Rc(e),t);if(null==r?void 0:r.set)return r.set.call(e.k,n),!0;if(!e.P){var o=Zc(Rc(e),t),i=null==o?void 0:o[dl];if(i&&i.t===n)return e.o[t]=n,e.D[t]=!1,!0;if(function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}(n,o)&&(void 0!==n||_c(e.t,t)))return!0;tl(e),el(e)}return e.o[t]===n&&"number"!=typeof n&&(void 0!==n||t in e.o)||(e.o[t]=n,e.D[t]=!0,!0)},deleteProperty:function(e,t){return void 0!==Zc(e.t,t)||t in e.t?(e.D[t]=!1,tl(e),el(e)):delete e.D[t],e.o&&delete e.o[t],!0},getOwnPropertyDescriptor:function(e,t){var n=Rc(e),r=Reflect.getOwnPropertyDescriptor(n,t);return r?{writable:!0,configurable:1!==e.i||"length"!==t,enumerable:r.enumerable,value:n[t]}:r},defineProperty:function(){Oc(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){Oc(12)}},ml={};Tc(yl,(function(e,t){ml[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),ml.deleteProperty=function(e,t){return yl.deleteProperty.call(this,e[0],t)},ml.set=function(e,t,n){return yl.set.call(this,e[0],t,n,e[0])};var bl=function(){function e(e){var t=this;this.g=cl,this.F=!0,this.produce=function(e,n,r){if("function"==typeof e&&"function"!=typeof n){var o=n;n=e;var i=t;return function(e){var t=this;void 0===e&&(e=o);for(var r=arguments.length,a=Array(r>1?r-1:0),u=1;u<r;u++)a[u-1]=arguments[u];return i.produce(e,(function(e){var r;return(r=n).call.apply(r,[t,e].concat(a))}))}}var a;if("function"!=typeof n&&Oc(6),void 0!==r&&"function"!=typeof r&&Oc(7),Bc(e)){var u=Wc(t),s=nl(t,e,void 0),c=!0;try{a=n(s),c=!1}finally{c?Vc(u):qc(u)}return"undefined"!=typeof Promise&&a instanceof Promise?a.then((function(e){return Uc(u,r),Kc(e,u)}),(function(e){throw Vc(u),e})):(Uc(u,r),Kc(a,u))}if(!e||"object"!=typeof e){if((a=n(e))===ll)return;return void 0===a&&(a=e),t.F&&Lc(a,!0),a}Oc(21,e)},this.produceWithPatches=function(e,n){return"function"==typeof e?function(n){for(var r=arguments.length,o=Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];return t.produceWithPatches(n,(function(t){return e.apply(void 0,[t].concat(o))}))}:[t.produce(e,n,(function(e,t){r=e,o=t})),r,o];var r,o},"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze)}var t=e.prototype;return t.createDraft=function(e){Bc(e)||Oc(8),kc(e)&&(e=function(e){return kc(e)||Oc(22,e),function e(t){if(!Bc(t))return t;var n,r=t[dl],o=Fc(t);if(r){if(!r.P&&(r.i<4||!$c("ES5").K(r)))return r.t;r.I=!0,n=rl(t,o),r.I=!1}else n=rl(t,o);return Tc(n,(function(t,o){r&&function(e,t){return 2===Fc(e)?e.get(t):e[t]}(r.t,t)===o||Pc(n,t,e(o))})),3===o?new Set(n):n}(e)}(e));var t=Wc(this),n=nl(this,e,void 0);return n[dl].C=!0,qc(t),n},t.finishDraft=function(e,t){var n=(e&&e[dl]).A;return Uc(n,t),Kc(void 0,n)},t.setAutoFreeze=function(e){this.F=e},t.setUseProxies=function(e){e&&!cl&&Oc(20),this.g=e},t.applyPatches=function(e,t){var n;for(n=t.length-1;n>=0;n--){var r=t[n];if(0===r.path.length&&"replace"===r.op){e=r.value;break}}n>-1&&(t=t.slice(n+1));var o=$c("Patches").$;return kc(e)?o(e,t):this.produce(e,(function(e){return o(e,t)}))},e}(),wl=new bl,El=wl.produce;wl.produceWithPatches.bind(wl),wl.setAutoFreeze.bind(wl),wl.setUseProxies.bind(wl),wl.applyPatches.bind(wl);var Al=wl.createDraft.bind(wl),Sl=wl.finishDraft.bind(wl);function Cl(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var xl=new WeakMap,Dl=new WeakMap,Ol=new WeakMap,kl=new WeakMap,Bl=new WeakMap,Tl=new WeakMap;function Fl(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function _l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Fl(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Fl(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Pl=()=>{var e={children:[],operations:[],selection:null,marks:null,isInline:()=>!1,isVoid:()=>!1,onChange:()=>{},apply:t=>{for(var n of yf.pathRefs(e))kf.transform(n,t);for(var r of yf.pointRefs(e))_f.transform(r,t);for(var o of yf.rangeRefs(e))Rf.transform(o,t);var i=new Set,a=[],u=e=>{if(e){var t=e.join(",");i.has(t)||(i.add(t),a.push(e))}},s=xl.get(e)||[],c=jl(t);for(var l of s)u(Of.transform(l,t));for(var f of c)u(f);xl.set(e,a),ad.transform(e,t),e.operations.push(t),yf.normalize(e),"set_selection"===t.type&&(e.marks=null),Dl.get(e)||(Dl.set(e,!0),Promise.resolve().then((()=>{Dl.set(e,!1),e.onChange(),e.operations=[]})))},addMark:(t,n)=>{var{selection:r}=e;if(r)if(Nf.isExpanded(r))ad.setNodes(e,{[t]:n},{match:Hf.isText,split:!0});else{var o=_l(_l({},yf.marks(e)||{}),{},{[t]:n});e.marks=o,Dl.get(e)||e.onChange()}},deleteBackward:t=>{var{selection:n}=e;n&&Nf.isCollapsed(n)&&ad.delete(e,{unit:t,reverse:!0})},deleteForward:t=>{var{selection:n}=e;n&&Nf.isCollapsed(n)&&ad.delete(e,{unit:t})},deleteFragment:t=>{var{selection:n}=e;n&&Nf.isExpanded(n)&&ad.delete(e,{reverse:"backward"===t})},getFragment:()=>{var{selection:t}=e;return t?Sf.fragment(e,t):[]},insertBreak:()=>{ad.splitNodes(e,{always:!0})},insertFragment:t=>{ad.insertFragment(e,t)},insertNode:t=>{ad.insertNodes(e,t)},insertText:t=>{var{selection:n,marks:r}=e;if(n){if(r){var o=_l({text:t},r);ad.insertNodes(e,o)}else ad.insertText(e,t);e.marks=null}},normalizeNode:t=>{var[n,r]=t;if(!Hf.isText(n))if(ff.isElement(n)&&0===n.children.length)ad.insertNodes(e,{text:""},{at:r.concat(0),voids:!0});else for(var o=!yf.isEditor(n)&&ff.isElement(n)&&(e.isInline(n)||0===n.children.length||Hf.isText(n.children[0])||e.isInline(n.children[0])),i=0,a=0;a<n.children.length;a++,i++){var u=Sf.get(e,r);if(!Hf.isText(u)){var s=n.children[a],c=u.children[i-1],l=a===n.children.length-1;(Hf.isText(s)||ff.isElement(s)&&e.isInline(s))!==o?(ad.removeNodes(e,{at:r.concat(i),voids:!0}),i--):ff.isElement(s)?e.isInline(s)&&(null!=c&&Hf.isText(c)?l&&(ad.insertNodes(e,{text:""},{at:r.concat(i+1),voids:!0}),i++):(ad.insertNodes(e,{text:""},{at:r.concat(i),voids:!0}),i++)):null!=c&&Hf.isText(c)&&(Hf.equals(s,c,{loose:!0})?(ad.mergeNodes(e,{at:r.concat(i),voids:!0}),i--):""===c.text?(ad.removeNodes(e,{at:r.concat(i-1),voids:!0}),i--):""===s.text&&(ad.removeNodes(e,{at:r.concat(i),voids:!0}),i--))}}},removeMark:t=>{var{selection:n}=e;if(n)if(Nf.isExpanded(n))ad.unsetNodes(e,t,{match:Hf.isText,split:!0});else{var r=_l({},yf.marks(e)||{});delete r[t],e.marks=r,Dl.get(e)||e.onChange()}}};return e},jl=e=>{switch(e.type){case"insert_text":case"remove_text":case"set_node":var{path:t}=e;return Of.levels(t);case"insert_node":var{node:n,path:r}=e,o=Of.levels(r),i=Hf.isText(n)?[]:Array.from(Sf.nodes(n),(e=>{var[,t]=e;return r.concat(t)}));return[...o,...i];case"merge_node":var{path:a}=e;return[...Of.ancestors(a),Of.previous(a)];case"move_node":var{path:u,newPath:s}=e;if(Of.equals(u,s))return[];var c=[],l=[];for(var f of Of.ancestors(u)){var d=Of.transform(f,e);c.push(d)}for(var p of Of.ancestors(s)){var h=Of.transform(p,e);l.push(h)}var g=l[l.length-1],v=s[s.length-1],y=g.concat(v);return[...c,...l,y];case"remove_node":var{path:m}=e;return[...Of.ancestors(m)];case"split_node":var{path:b}=e;return[...Of.levels(b),Of.next(b)];default:return[]}};function Nl(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var Rl,Il=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=!t,r=t?Ul(e):e,o=Rl.None,i=Rl.None,a=0,u=null;for(var s of r){var c=s.codePointAt(0);if(!c)break;var l=tf(s,c);if([o,i]=n?[i,l]:[l,o],nf(o,Rl.ZWJ)&&nf(i,Rl.ExtPict)&&!uf(n?e.substring(0,a):e.substring(0,e.length-a)))break;if(nf(o,Rl.RI)&&nf(i,Rl.RI)&&!(u=null!==u?!u:!!n||cf(e.substring(0,e.length-a))))break;if(o!==Rl.None&&i!==Rl.None&&of(o,i))break;a+=s.length}return a||1},Ll=/\s/,Ml=/[\u0021-\u0023\u0025-\u002A\u002C-\u002F\u003A\u003B\u003F\u0040\u005B-\u005D\u005F\u007B\u007D\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/,zl=/['\u2018\u2019]/,$l=(e,t,n)=>{if(n){var r=e.length-t;return[e.slice(r,e.length),e.slice(0,r)]}return[e.slice(0,t),e.slice(t)]},Hl=function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(Ll.test(t))return!1;if(zl.test(t)){var o=Il(n,r),[i,a]=$l(n,o,r);if(e(i,a,r))return!0}return!Ml.test(t)},Ul=function*(e){for(var t=e.length-1,n=0;n<e.length;n++){var r=e.charAt(t-n);if(ql(r.charCodeAt(0))){var o=e.charAt(t-n-1);if(Vl(o.charCodeAt(0))){yield o+r,n++;continue}}yield r}},Vl=e=>e>=55296&&e<=56319,ql=e=>e>=56320&&e<=57343;!function(e){e[e.None=0]="None",e[e.Extend=1]="Extend",e[e.ZWJ=2]="ZWJ",e[e.RI=4]="RI",e[e.Prepend=8]="Prepend",e[e.SpacingMark=16]="SpacingMark",e[e.L=32]="L",e[e.V=64]="V",e[e.T=128]="T",e[e.LV=256]="LV",e[e.LVT=512]="LVT",e[e.ExtPict=1024]="ExtPict",e[e.Any=2048]="Any"}(Rl||(Rl={}));var Wl=/^(?:[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09BE\u09C1-\u09C4\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01\u0B3C\u0B3E\u0B3F\u0B41-\u0B44\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B82\u0BBE\u0BC0\u0BCD\u0BD7\u0C00\u0C04\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC2\u0CC6\u0CCC\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00\u0D01\u0D3B\u0D3C\u0D3E\u0D41-\u0D44\u0D4D\u0D57\u0D62\u0D63\u0D81\u0DCA\u0DCF\u0DD2-\u0DD4\u0DD6\u0DDF\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1AC0\u1B00-\u1B03\u1B34-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA82C\uA8C4\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9BD\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFF9E\uFF9F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDC9-\uDDCC\uDDCF\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3B\uDF3C\uDF3E\uDF40\uDF57\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDC5E\uDCB0\uDCB3-\uDCB8\uDCBA\uDCBD\uDCBF\uDCC0\uDCC2\uDCC3\uDDAF\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD806[\uDC2F-\uDC37\uDC39\uDC3A\uDD30\uDD3B\uDD3C\uDD3E\uDD43\uDDD4-\uDDD7\uDDDA\uDDDB\uDDE0\uDE01-\uDE0A\uDE33-\uDE38\uDE3B-\uDE3E\uDE47\uDE51-\uDE56\uDE59-\uDE5B\uDE8A-\uDE96\uDE98\uDE99]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD90\uDD91\uDD95\uDD97\uDEF3\uDEF4]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF8F-\uDF92\uDFE4]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65\uDD67-\uDD69\uDD6E-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uD83C[\uDFFB-\uDFFF]|\uDB40[\uDC20-\uDC7F\uDD00-\uDDEF])$/,Gl=/^(?:[\u0600-\u0605\u06DD\u070F\u0890\u0891\u08E2\u0D4E]|\uD804[\uDCBD\uDCCD\uDDC2\uDDC3]|\uD806[\uDD3F\uDD41\uDE3A\uDE84-\uDE89]|\uD807\uDD46)$/,Kl=/^(?:[\u0903\u093B\u093E-\u0940\u0949-\u094C\u094E\u094F\u0982\u0983\u09BF\u09C0\u09C7\u09C8\u09CB\u09CC\u0A03\u0A3E-\u0A40\u0A83\u0ABE-\u0AC0\u0AC9\u0ACB\u0ACC\u0B02\u0B03\u0B40\u0B47\u0B48\u0B4B\u0B4C\u0BBF\u0BC1\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCC\u0C01-\u0C03\u0C41-\u0C44\u0C82\u0C83\u0CBE\u0CC0\u0CC1\u0CC3\u0CC4\u0CC7\u0CC8\u0CCA\u0CCB\u0D02\u0D03\u0D3F\u0D40\u0D46-\u0D48\u0D4A-\u0D4C\u0D82\u0D83\u0DD0\u0DD1\u0DD8-\u0DDE\u0DF2\u0DF3\u0E33\u0EB3\u0F3E\u0F3F\u0F7F\u1031\u103B\u103C\u1056\u1057\u1084\u1715\u1734\u17B6\u17BE-\u17C5\u17C7\u17C8\u1923-\u1926\u1929-\u192B\u1930\u1931\u1933-\u1938\u1A19\u1A1A\u1A55\u1A57\u1A6D-\u1A72\u1B04\u1B3B\u1B3D-\u1B41\u1B43\u1B44\u1B82\u1BA1\u1BA6\u1BA7\u1BAA\u1BE7\u1BEA-\u1BEC\u1BEE\u1BF2\u1BF3\u1C24-\u1C2B\u1C34\u1C35\u1CE1\u1CF7\uA823\uA824\uA827\uA880\uA881\uA8B4-\uA8C3\uA952\uA953\uA983\uA9B4\uA9B5\uA9BA\uA9BB\uA9BE-\uA9C0\uAA2F\uAA30\uAA33\uAA34\uAA4D\uAAEB\uAAEE\uAAEF\uAAF5\uABE3\uABE4\uABE6\uABE7\uABE9\uABEA\uABEC]|\uD804[\uDC00\uDC02\uDC82\uDCB0-\uDCB2\uDCB7\uDCB8\uDD2C\uDD45\uDD46\uDD82\uDDB3-\uDDB5\uDDBF\uDDC0\uDDCE\uDE2C-\uDE2E\uDE32\uDE33\uDE35\uDEE0-\uDEE2\uDF02\uDF03\uDF3F\uDF41-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF62\uDF63]|\uD805[\uDC35-\uDC37\uDC40\uDC41\uDC45\uDCB1\uDCB2\uDCB9\uDCBB\uDCBC\uDCBE\uDCC1\uDDB0\uDDB1\uDDB8-\uDDBB\uDDBE\uDE30-\uDE32\uDE3B\uDE3C\uDE3E\uDEAC\uDEAE\uDEAF\uDEB6\uDF26]|\uD806[\uDC2C-\uDC2E\uDC38\uDD31-\uDD35\uDD37\uDD38\uDD3D\uDD40\uDD42\uDDD1-\uDDD3\uDDDC-\uDDDF\uDDE4\uDE39\uDE57\uDE58\uDE97]|\uD807[\uDC2F\uDC3E\uDCA9\uDCB1\uDCB4\uDD8A-\uDD8E\uDD93\uDD94\uDD96\uDEF5\uDEF6]|\uD81B[\uDF51-\uDF87\uDFF0\uDFF1]|\uD834[\uDD66\uDD6D])$/,Yl=/^[\u1100-\u115F\uA960-\uA97C]$/,Xl=/^[\u1160-\u11A7\uD7B0-\uD7C6]$/,Jl=/^[\u11A8-\u11FF\uD7CB-\uD7FB]$/,Zl=/^[\uAC00\uAC1C\uAC38\uAC54\uAC70\uAC8C\uACA8\uACC4\uACE0\uACFC\uAD18\uAD34\uAD50\uAD6C\uAD88\uADA4\uADC0\uADDC\uADF8\uAE14\uAE30\uAE4C\uAE68\uAE84\uAEA0\uAEBC\uAED8\uAEF4\uAF10\uAF2C\uAF48\uAF64\uAF80\uAF9C\uAFB8\uAFD4\uAFF0\uB00C\uB028\uB044\uB060\uB07C\uB098\uB0B4\uB0D0\uB0EC\uB108\uB124\uB140\uB15C\uB178\uB194\uB1B0\uB1CC\uB1E8\uB204\uB220\uB23C\uB258\uB274\uB290\uB2AC\uB2C8\uB2E4\uB300\uB31C\uB338\uB354\uB370\uB38C\uB3A8\uB3C4\uB3E0\uB3FC\uB418\uB434\uB450\uB46C\uB488\uB4A4\uB4C0\uB4DC\uB4F8\uB514\uB530\uB54C\uB568\uB584\uB5A0\uB5BC\uB5D8\uB5F4\uB610\uB62C\uB648\uB664\uB680\uB69C\uB6B8\uB6D4\uB6F0\uB70C\uB728\uB744\uB760\uB77C\uB798\uB7B4\uB7D0\uB7EC\uB808\uB824\uB840\uB85C\uB878\uB894\uB8B0\uB8CC\uB8E8\uB904\uB920\uB93C\uB958\uB974\uB990\uB9AC\uB9C8\uB9E4\uBA00\uBA1C\uBA38\uBA54\uBA70\uBA8C\uBAA8\uBAC4\uBAE0\uBAFC\uBB18\uBB34\uBB50\uBB6C\uBB88\uBBA4\uBBC0\uBBDC\uBBF8\uBC14\uBC30\uBC4C\uBC68\uBC84\uBCA0\uBCBC\uBCD8\uBCF4\uBD10\uBD2C\uBD48\uBD64\uBD80\uBD9C\uBDB8\uBDD4\uBDF0\uBE0C\uBE28\uBE44\uBE60\uBE7C\uBE98\uBEB4\uBED0\uBEEC\uBF08\uBF24\uBF40\uBF5C\uBF78\uBF94\uBFB0\uBFCC\uBFE8\uC004\uC020\uC03C\uC058\uC074\uC090\uC0AC\uC0C8\uC0E4\uC100\uC11C\uC138\uC154\uC170\uC18C\uC1A8\uC1C4\uC1E0\uC1FC\uC218\uC234\uC250\uC26C\uC288\uC2A4\uC2C0\uC2DC\uC2F8\uC314\uC330\uC34C\uC368\uC384\uC3A0\uC3BC\uC3D8\uC3F4\uC410\uC42C\uC448\uC464\uC480\uC49C\uC4B8\uC4D4\uC4F0\uC50C\uC528\uC544\uC560\uC57C\uC598\uC5B4\uC5D0\uC5EC\uC608\uC624\uC640\uC65C\uC678\uC694\uC6B0\uC6CC\uC6E8\uC704\uC720\uC73C\uC758\uC774\uC790\uC7AC\uC7C8\uC7E4\uC800\uC81C\uC838\uC854\uC870\uC88C\uC8A8\uC8C4\uC8E0\uC8FC\uC918\uC934\uC950\uC96C\uC988\uC9A4\uC9C0\uC9DC\uC9F8\uCA14\uCA30\uCA4C\uCA68\uCA84\uCAA0\uCABC\uCAD8\uCAF4\uCB10\uCB2C\uCB48\uCB64\uCB80\uCB9C\uCBB8\uCBD4\uCBF0\uCC0C\uCC28\uCC44\uCC60\uCC7C\uCC98\uCCB4\uCCD0\uCCEC\uCD08\uCD24\uCD40\uCD5C\uCD78\uCD94\uCDB0\uCDCC\uCDE8\uCE04\uCE20\uCE3C\uCE58\uCE74\uCE90\uCEAC\uCEC8\uCEE4\uCF00\uCF1C\uCF38\uCF54\uCF70\uCF8C\uCFA8\uCFC4\uCFE0\uCFFC\uD018\uD034\uD050\uD06C\uD088\uD0A4\uD0C0\uD0DC\uD0F8\uD114\uD130\uD14C\uD168\uD184\uD1A0\uD1BC\uD1D8\uD1F4\uD210\uD22C\uD248\uD264\uD280\uD29C\uD2B8\uD2D4\uD2F0\uD30C\uD328\uD344\uD360\uD37C\uD398\uD3B4\uD3D0\uD3EC\uD408\uD424\uD440\uD45C\uD478\uD494\uD4B0\uD4CC\uD4E8\uD504\uD520\uD53C\uD558\uD574\uD590\uD5AC\uD5C8\uD5E4\uD600\uD61C\uD638\uD654\uD670\uD68C\uD6A8\uD6C4\uD6E0\uD6FC\uD718\uD734\uD750\uD76C\uD788]$/,Ql=/^[\uAC01-\uAC1B\uAC1D-\uAC37\uAC39-\uAC53\uAC55-\uAC6F\uAC71-\uAC8B\uAC8D-\uACA7\uACA9-\uACC3\uACC5-\uACDF\uACE1-\uACFB\uACFD-\uAD17\uAD19-\uAD33\uAD35-\uAD4F\uAD51-\uAD6B\uAD6D-\uAD87\uAD89-\uADA3\uADA5-\uADBF\uADC1-\uADDB\uADDD-\uADF7\uADF9-\uAE13\uAE15-\uAE2F\uAE31-\uAE4B\uAE4D-\uAE67\uAE69-\uAE83\uAE85-\uAE9F\uAEA1-\uAEBB\uAEBD-\uAED7\uAED9-\uAEF3\uAEF5-\uAF0F\uAF11-\uAF2B\uAF2D-\uAF47\uAF49-\uAF63\uAF65-\uAF7F\uAF81-\uAF9B\uAF9D-\uAFB7\uAFB9-\uAFD3\uAFD5-\uAFEF\uAFF1-\uB00B\uB00D-\uB027\uB029-\uB043\uB045-\uB05F\uB061-\uB07B\uB07D-\uB097\uB099-\uB0B3\uB0B5-\uB0CF\uB0D1-\uB0EB\uB0ED-\uB107\uB109-\uB123\uB125-\uB13F\uB141-\uB15B\uB15D-\uB177\uB179-\uB193\uB195-\uB1AF\uB1B1-\uB1CB\uB1CD-\uB1E7\uB1E9-\uB203\uB205-\uB21F\uB221-\uB23B\uB23D-\uB257\uB259-\uB273\uB275-\uB28F\uB291-\uB2AB\uB2AD-\uB2C7\uB2C9-\uB2E3\uB2E5-\uB2FF\uB301-\uB31B\uB31D-\uB337\uB339-\uB353\uB355-\uB36F\uB371-\uB38B\uB38D-\uB3A7\uB3A9-\uB3C3\uB3C5-\uB3DF\uB3E1-\uB3FB\uB3FD-\uB417\uB419-\uB433\uB435-\uB44F\uB451-\uB46B\uB46D-\uB487\uB489-\uB4A3\uB4A5-\uB4BF\uB4C1-\uB4DB\uB4DD-\uB4F7\uB4F9-\uB513\uB515-\uB52F\uB531-\uB54B\uB54D-\uB567\uB569-\uB583\uB585-\uB59F\uB5A1-\uB5BB\uB5BD-\uB5D7\uB5D9-\uB5F3\uB5F5-\uB60F\uB611-\uB62B\uB62D-\uB647\uB649-\uB663\uB665-\uB67F\uB681-\uB69B\uB69D-\uB6B7\uB6B9-\uB6D3\uB6D5-\uB6EF\uB6F1-\uB70B\uB70D-\uB727\uB729-\uB743\uB745-\uB75F\uB761-\uB77B\uB77D-\uB797\uB799-\uB7B3\uB7B5-\uB7CF\uB7D1-\uB7EB\uB7ED-\uB807\uB809-\uB823\uB825-\uB83F\uB841-\uB85B\uB85D-\uB877\uB879-\uB893\uB895-\uB8AF\uB8B1-\uB8CB\uB8CD-\uB8E7\uB8E9-\uB903\uB905-\uB91F\uB921-\uB93B\uB93D-\uB957\uB959-\uB973\uB975-\uB98F\uB991-\uB9AB\uB9AD-\uB9C7\uB9C9-\uB9E3\uB9E5-\uB9FF\uBA01-\uBA1B\uBA1D-\uBA37\uBA39-\uBA53\uBA55-\uBA6F\uBA71-\uBA8B\uBA8D-\uBAA7\uBAA9-\uBAC3\uBAC5-\uBADF\uBAE1-\uBAFB\uBAFD-\uBB17\uBB19-\uBB33\uBB35-\uBB4F\uBB51-\uBB6B\uBB6D-\uBB87\uBB89-\uBBA3\uBBA5-\uBBBF\uBBC1-\uBBDB\uBBDD-\uBBF7\uBBF9-\uBC13\uBC15-\uBC2F\uBC31-\uBC4B\uBC4D-\uBC67\uBC69-\uBC83\uBC85-\uBC9F\uBCA1-\uBCBB\uBCBD-\uBCD7\uBCD9-\uBCF3\uBCF5-\uBD0F\uBD11-\uBD2B\uBD2D-\uBD47\uBD49-\uBD63\uBD65-\uBD7F\uBD81-\uBD9B\uBD9D-\uBDB7\uBDB9-\uBDD3\uBDD5-\uBDEF\uBDF1-\uBE0B\uBE0D-\uBE27\uBE29-\uBE43\uBE45-\uBE5F\uBE61-\uBE7B\uBE7D-\uBE97\uBE99-\uBEB3\uBEB5-\uBECF\uBED1-\uBEEB\uBEED-\uBF07\uBF09-\uBF23\uBF25-\uBF3F\uBF41-\uBF5B\uBF5D-\uBF77\uBF79-\uBF93\uBF95-\uBFAF\uBFB1-\uBFCB\uBFCD-\uBFE7\uBFE9-\uC003\uC005-\uC01F\uC021-\uC03B\uC03D-\uC057\uC059-\uC073\uC075-\uC08F\uC091-\uC0AB\uC0AD-\uC0C7\uC0C9-\uC0E3\uC0E5-\uC0FF\uC101-\uC11B\uC11D-\uC137\uC139-\uC153\uC155-\uC16F\uC171-\uC18B\uC18D-\uC1A7\uC1A9-\uC1C3\uC1C5-\uC1DF\uC1E1-\uC1FB\uC1FD-\uC217\uC219-\uC233\uC235-\uC24F\uC251-\uC26B\uC26D-\uC287\uC289-\uC2A3\uC2A5-\uC2BF\uC2C1-\uC2DB\uC2DD-\uC2F7\uC2F9-\uC313\uC315-\uC32F\uC331-\uC34B\uC34D-\uC367\uC369-\uC383\uC385-\uC39F\uC3A1-\uC3BB\uC3BD-\uC3D7\uC3D9-\uC3F3\uC3F5-\uC40F\uC411-\uC42B\uC42D-\uC447\uC449-\uC463\uC465-\uC47F\uC481-\uC49B\uC49D-\uC4B7\uC4B9-\uC4D3\uC4D5-\uC4EF\uC4F1-\uC50B\uC50D-\uC527\uC529-\uC543\uC545-\uC55F\uC561-\uC57B\uC57D-\uC597\uC599-\uC5B3\uC5B5-\uC5CF\uC5D1-\uC5EB\uC5ED-\uC607\uC609-\uC623\uC625-\uC63F\uC641-\uC65B\uC65D-\uC677\uC679-\uC693\uC695-\uC6AF\uC6B1-\uC6CB\uC6CD-\uC6E7\uC6E9-\uC703\uC705-\uC71F\uC721-\uC73B\uC73D-\uC757\uC759-\uC773\uC775-\uC78F\uC791-\uC7AB\uC7AD-\uC7C7\uC7C9-\uC7E3\uC7E5-\uC7FF\uC801-\uC81B\uC81D-\uC837\uC839-\uC853\uC855-\uC86F\uC871-\uC88B\uC88D-\uC8A7\uC8A9-\uC8C3\uC8C5-\uC8DF\uC8E1-\uC8FB\uC8FD-\uC917\uC919-\uC933\uC935-\uC94F\uC951-\uC96B\uC96D-\uC987\uC989-\uC9A3\uC9A5-\uC9BF\uC9C1-\uC9DB\uC9DD-\uC9F7\uC9F9-\uCA13\uCA15-\uCA2F\uCA31-\uCA4B\uCA4D-\uCA67\uCA69-\uCA83\uCA85-\uCA9F\uCAA1-\uCABB\uCABD-\uCAD7\uCAD9-\uCAF3\uCAF5-\uCB0F\uCB11-\uCB2B\uCB2D-\uCB47\uCB49-\uCB63\uCB65-\uCB7F\uCB81-\uCB9B\uCB9D-\uCBB7\uCBB9-\uCBD3\uCBD5-\uCBEF\uCBF1-\uCC0B\uCC0D-\uCC27\uCC29-\uCC43\uCC45-\uCC5F\uCC61-\uCC7B\uCC7D-\uCC97\uCC99-\uCCB3\uCCB5-\uCCCF\uCCD1-\uCCEB\uCCED-\uCD07\uCD09-\uCD23\uCD25-\uCD3F\uCD41-\uCD5B\uCD5D-\uCD77\uCD79-\uCD93\uCD95-\uCDAF\uCDB1-\uCDCB\uCDCD-\uCDE7\uCDE9-\uCE03\uCE05-\uCE1F\uCE21-\uCE3B\uCE3D-\uCE57\uCE59-\uCE73\uCE75-\uCE8F\uCE91-\uCEAB\uCEAD-\uCEC7\uCEC9-\uCEE3\uCEE5-\uCEFF\uCF01-\uCF1B\uCF1D-\uCF37\uCF39-\uCF53\uCF55-\uCF6F\uCF71-\uCF8B\uCF8D-\uCFA7\uCFA9-\uCFC3\uCFC5-\uCFDF\uCFE1-\uCFFB\uCFFD-\uD017\uD019-\uD033\uD035-\uD04F\uD051-\uD06B\uD06D-\uD087\uD089-\uD0A3\uD0A5-\uD0BF\uD0C1-\uD0DB\uD0DD-\uD0F7\uD0F9-\uD113\uD115-\uD12F\uD131-\uD14B\uD14D-\uD167\uD169-\uD183\uD185-\uD19F\uD1A1-\uD1BB\uD1BD-\uD1D7\uD1D9-\uD1F3\uD1F5-\uD20F\uD211-\uD22B\uD22D-\uD247\uD249-\uD263\uD265-\uD27F\uD281-\uD29B\uD29D-\uD2B7\uD2B9-\uD2D3\uD2D5-\uD2EF\uD2F1-\uD30B\uD30D-\uD327\uD329-\uD343\uD345-\uD35F\uD361-\uD37B\uD37D-\uD397\uD399-\uD3B3\uD3B5-\uD3CF\uD3D1-\uD3EB\uD3ED-\uD407\uD409-\uD423\uD425-\uD43F\uD441-\uD45B\uD45D-\uD477\uD479-\uD493\uD495-\uD4AF\uD4B1-\uD4CB\uD4CD-\uD4E7\uD4E9-\uD503\uD505-\uD51F\uD521-\uD53B\uD53D-\uD557\uD559-\uD573\uD575-\uD58F\uD591-\uD5AB\uD5AD-\uD5C7\uD5C9-\uD5E3\uD5E5-\uD5FF\uD601-\uD61B\uD61D-\uD637\uD639-\uD653\uD655-\uD66F\uD671-\uD68B\uD68D-\uD6A7\uD6A9-\uD6C3\uD6C5-\uD6DF\uD6E1-\uD6FB\uD6FD-\uD717\uD719-\uD733\uD735-\uD74F\uD751-\uD76B\uD76D-\uD787\uD789-\uD7A3]$/,ef=/^(?:[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u2388\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2605\u2607-\u2612\u2614-\u2685\u2690-\u2705\u2708-\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763-\u2767\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC00-\uDCFF\uDD0D-\uDD0F\uDD2F\uDD6C-\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDAD-\uDDE5\uDE01-\uDE0F\uDE1A\uDE2F\uDE32-\uDE3A\uDE3C-\uDE3F\uDE49-\uDFFA]|\uD83D[\uDC00-\uDD3D\uDD46-\uDE4F\uDE80-\uDEFF\uDF74-\uDF7F\uDFD5-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE-\uDCFF\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDEFF]|\uD83F[\uDC00-\uDFFD])$/,tf=(e,t)=>{var n=Rl.Any;return-1!==e.search(Wl)&&(n|=Rl.Extend),8205===t&&(n|=Rl.ZWJ),t>=127462&&t<=127487&&(n|=Rl.RI),-1!==e.search(Gl)&&(n|=Rl.Prepend),-1!==e.search(Kl)&&(n|=Rl.SpacingMark),-1!==e.search(Yl)&&(n|=Rl.L),-1!==e.search(Xl)&&(n|=Rl.V),-1!==e.search(Jl)&&(n|=Rl.T),-1!==e.search(Zl)&&(n|=Rl.LV),-1!==e.search(Ql)&&(n|=Rl.LVT),-1!==e.search(ef)&&(n|=Rl.ExtPict),n};function nf(e,t){return!!(e&t)}var rf=[[Rl.L,Rl.L|Rl.V|Rl.LV|Rl.LVT],[Rl.LV|Rl.V,Rl.V|Rl.T],[Rl.LVT|Rl.T,Rl.T],[Rl.Any,Rl.Extend|Rl.ZWJ],[Rl.Any,Rl.SpacingMark],[Rl.Prepend,Rl.Any],[Rl.ZWJ,Rl.ExtPict],[Rl.RI,Rl.RI]];function of(e,t){return-1===rf.findIndex((n=>nf(e,n[0])&&nf(t,n[1])))}var af=/(?:[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u2388\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2605\u2607-\u2612\u2614-\u2685\u2690-\u2705\u2708-\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763-\u2767\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC00-\uDCFF\uDD0D-\uDD0F\uDD2F\uDD6C-\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDAD-\uDDE5\uDE01-\uDE0F\uDE1A\uDE2F\uDE32-\uDE3A\uDE3C-\uDE3F\uDE49-\uDFFA]|\uD83D[\uDC00-\uDD3D\uDD46-\uDE4F\uDE80-\uDEFF\uDF74-\uDF7F\uDFD5-\uDFFF]|\uD83E[\uDC0C-\uDC0F\uDC48-\uDC4F\uDC5A-\uDC5F\uDC88-\uDC8F\uDCAE-\uDCFF\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDEFF]|\uD83F[\uDC00-\uDFFD])(?:[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u07FD\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08D3-\u08E1\u08E3-\u0902\u093A\u093C\u0941-\u0948\u094D\u0951-\u0957\u0962\u0963\u0981\u09BC\u09BE\u09C1-\u09C4\u09CD\u09D7\u09E2\u09E3\u09FE\u0A01\u0A02\u0A3C\u0A41\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81\u0A82\u0ABC\u0AC1-\u0AC5\u0AC7\u0AC8\u0ACD\u0AE2\u0AE3\u0AFA-\u0AFF\u0B01\u0B3C\u0B3E\u0B3F\u0B41-\u0B44\u0B4D\u0B55-\u0B57\u0B62\u0B63\u0B82\u0BBE\u0BC0\u0BCD\u0BD7\u0C00\u0C04\u0C3E-\u0C40\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81\u0CBC\u0CBF\u0CC2\u0CC6\u0CCC\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D00\u0D01\u0D3B\u0D3C\u0D3E\u0D41-\u0D44\u0D4D\u0D57\u0D62\u0D63\u0D81\u0DCA\u0DCF\u0DD2-\u0DD4\u0DD6\u0DDF\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F71-\u0F7E\u0F80-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102D-\u1030\u1032-\u1037\u1039\u103A\u103D\u103E\u1058\u1059\u105E-\u1060\u1071-\u1074\u1082\u1085\u1086\u108D\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4\u17B5\u17B7-\u17BD\u17C6\u17C9-\u17D3\u17DD\u180B-\u180D\u1885\u1886\u18A9\u1920-\u1922\u1927\u1928\u1932\u1939-\u193B\u1A17\u1A18\u1A1B\u1A56\u1A58-\u1A5E\u1A60\u1A62\u1A65-\u1A6C\u1A73-\u1A7C\u1A7F\u1AB0-\u1AC0\u1B00-\u1B03\u1B34-\u1B3A\u1B3C\u1B42\u1B6B-\u1B73\u1B80\u1B81\u1BA2-\u1BA5\u1BA8\u1BA9\u1BAB-\u1BAD\u1BE6\u1BE8\u1BE9\u1BED\u1BEF-\u1BF1\u1C2C-\u1C33\u1C36\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE0\u1CE2-\u1CE8\u1CED\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF9\u1DFB-\u1DFF\u200C\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69E\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA825\uA826\uA82C\uA8C4\uA8C5\uA8E0-\uA8F1\uA8FF\uA926-\uA92D\uA947-\uA951\uA980-\uA982\uA9B3\uA9B6-\uA9B9\uA9BC\uA9BD\uA9E5\uAA29-\uAA2E\uAA31\uAA32\uAA35\uAA36\uAA43\uAA4C\uAA7C\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEC\uAAED\uAAF6\uABE5\uABE8\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2F\uFF9E\uFF9F]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD803[\uDD24-\uDD27\uDEAB\uDEAC\uDF46-\uDF50]|\uD804[\uDC01\uDC38-\uDC46\uDC7F-\uDC81\uDCB3-\uDCB6\uDCB9\uDCBA\uDD00-\uDD02\uDD27-\uDD2B\uDD2D-\uDD34\uDD73\uDD80\uDD81\uDDB6-\uDDBE\uDDC9-\uDDCC\uDDCF\uDE2F-\uDE31\uDE34\uDE36\uDE37\uDE3E\uDEDF\uDEE3-\uDEEA\uDF00\uDF01\uDF3B\uDF3C\uDF3E\uDF40\uDF57\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC38-\uDC3F\uDC42-\uDC44\uDC46\uDC5E\uDCB0\uDCB3-\uDCB8\uDCBA\uDCBD\uDCBF\uDCC0\uDCC2\uDCC3\uDDAF\uDDB2-\uDDB5\uDDBC\uDDBD\uDDBF\uDDC0\uDDDC\uDDDD\uDE33-\uDE3A\uDE3D\uDE3F\uDE40\uDEAB\uDEAD\uDEB0-\uDEB5\uDEB7\uDF1D-\uDF1F\uDF22-\uDF25\uDF27-\uDF2B]|\uD806[\uDC2F-\uDC37\uDC39\uDC3A\uDD30\uDD3B\uDD3C\uDD3E\uDD43\uDDD4-\uDDD7\uDDDA\uDDDB\uDDE0\uDE01-\uDE0A\uDE33-\uDE38\uDE3B-\uDE3E\uDE47\uDE51-\uDE56\uDE59-\uDE5B\uDE8A-\uDE96\uDE98\uDE99]|\uD807[\uDC30-\uDC36\uDC38-\uDC3D\uDC3F\uDC92-\uDCA7\uDCAA-\uDCB0\uDCB2\uDCB3\uDCB5\uDCB6\uDD31-\uDD36\uDD3A\uDD3C\uDD3D\uDD3F-\uDD45\uDD47\uDD90\uDD91\uDD95\uDD97\uDEF3\uDEF4]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF4F\uDF8F-\uDF92\uDFE4]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65\uDD67-\uDD69\uDD6E-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD838[\uDC00-\uDC06\uDC08-\uDC18\uDC1B-\uDC21\uDC23\uDC24\uDC26-\uDC2A\uDD30-\uDD36\uDEEC-\uDEEF]|\uD83A[\uDCD0-\uDCD6\uDD44-\uDD4A]|\uD83C[\uDFFB-\uDFFF]|\uDB40[\uDC20-\uDC7F\uDD00-\uDDEF])*\u200D$/,uf=e=>-1!==e.search(af),sf=/(?:\uD83C[\uDDE6-\uDDFF])+$/g,cf=e=>{var t=e.match(sf);return null!==t&&t[0].length/2%2==1},lf=e=>Dc(e)&&Sf.isNodeList(e.children)&&!yf.isEditor(e),ff={isAncestor:e=>Dc(e)&&Sf.isNodeList(e.children),isElement:lf,isElementList:e=>Array.isArray(e)&&e.every((e=>ff.isElement(e))),isElementProps:e=>void 0!==e.children,isElementType:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"type";return lf(e)&&e[n]===t},matches(e,t){for(var n in t)if("children"!==n&&e[n]!==t[n])return!1;return!0}},df=["text"],pf=["text"];function hf(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function gf(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?hf(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):hf(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var vf=new WeakMap,yf={above(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{voids:n=!1,mode:r="lowest",at:o=e.selection,match:i}=t;if(o){var a=yf.path(e,o),u="lowest"===r;for(var[s,c]of yf.levels(e,{at:a,voids:n,match:i,reverse:u}))if(!Hf.isText(s)&&!Of.equals(a,c))return[s,c]}},addMark(e,t,n){e.addMark(t,n)},after(e,t){var n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o={anchor:yf.point(e,t,{edge:"end"}),focus:yf.end(e,[])},{distance:i=1}=r,a=0;for(var u of yf.positions(e,gf(gf({},r),{},{at:o}))){if(a>i)break;0!==a&&(n=u),a++}return n},before(e,t){var n,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o={anchor:yf.start(e,[]),focus:yf.point(e,t,{edge:"start"})},{distance:i=1}=r,a=0;for(var u of yf.positions(e,gf(gf({},r),{},{at:o,reverse:!0}))){if(a>i)break;0!==a&&(n=u),a++}return n},deleteBackward(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{unit:n="character"}=t;e.deleteBackward(n)},deleteForward(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{unit:n="character"}=t;e.deleteForward(n)},deleteFragment(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{direction:n="forward"}=t;e.deleteFragment(n)},edges:(e,t)=>[yf.start(e,t),yf.end(e,t)],end:(e,t)=>yf.point(e,t,{edge:"end"}),first(e,t){var n=yf.path(e,t,{edge:"start"});return yf.node(e,n)},fragment(e,t){var n=yf.range(e,t);return Sf.fragment(e,n)},hasBlocks:(e,t)=>t.children.some((t=>yf.isBlock(e,t))),hasInlines:(e,t)=>t.children.some((t=>Hf.isText(t)||yf.isInline(e,t))),hasTexts:(e,t)=>t.children.every((e=>Hf.isText(e))),insertBreak(e){e.insertBreak()},insertFragment(e,t){e.insertFragment(t)},insertNode(e,t){e.insertNode(t)},insertText(e,t){e.insertText(t)},isBlock:(e,t)=>ff.isElement(t)&&!e.isInline(t),isEditor(e){if(!Dc(e))return!1;var t=vf.get(e);if(void 0!==t)return t;var n="function"==typeof e.addMark&&"function"==typeof e.apply&&"function"==typeof e.deleteBackward&&"function"==typeof e.deleteForward&&"function"==typeof e.deleteFragment&&"function"==typeof e.insertBreak&&"function"==typeof e.insertFragment&&"function"==typeof e.insertNode&&"function"==typeof e.insertText&&"function"==typeof e.isInline&&"function"==typeof e.isVoid&&"function"==typeof e.normalizeNode&&"function"==typeof e.onChange&&"function"==typeof e.removeMark&&(null===e.marks||Dc(e.marks))&&(null===e.selection||Nf.isRange(e.selection))&&Sf.isNodeList(e.children)&&Df.isOperationList(e.operations);return vf.set(e,n),n},isEnd(e,t,n){var r=yf.end(e,n);return Ff.equals(t,r)},isEdge:(e,t,n)=>yf.isStart(e,t,n)||yf.isEnd(e,t,n),isEmpty(e,t){var{children:n}=t,[r]=n;return 0===n.length||1===n.length&&Hf.isText(r)&&""===r.text&&!e.isVoid(t)},isInline:(e,t)=>ff.isElement(t)&&e.isInline(t),isNormalizing(e){var t=Ol.get(e);return void 0===t||t},isStart(e,t,n){if(0!==t.offset)return!1;var r=yf.start(e,n);return Ff.equals(t,r)},isVoid:(e,t)=>ff.isElement(t)&&e.isVoid(t),last(e,t){var n=yf.path(e,t,{edge:"end"});return yf.node(e,n)},leaf(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=yf.path(e,t,n);return[Sf.leaf(e,r),r]},*levels(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:n=e.selection,reverse:r=!1,voids:o=!1}=t,{match:i}=t;if(null==i&&(i=()=>!0),n){var a=[],u=yf.path(e,n);for(var[s,c]of Sf.levels(e,u))if(i(s,c)&&(a.push([s,c]),!o&&yf.isVoid(e,s)))break;r&&a.reverse(),yield*a}},marks(e){var{marks:t,selection:n}=e;if(!n)return null;if(t)return t;if(Nf.isExpanded(n)){var[r]=yf.nodes(e,{match:Hf.isText});if(r){var[o]=r;return Nl(o,df)}return{}}var{anchor:i}=n,{path:a}=i,[u]=yf.leaf(e,a);if(0===i.offset){var s=yf.previous(e,{at:a,match:Hf.isText}),c=yf.above(e,{match:t=>yf.isBlock(e,t)});if(s&&c){var[l,f]=s,[,d]=c;Of.isAncestor(d,f)&&(u=l)}}return Nl(u,pf)},next(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{mode:n="lowest",voids:r=!1}=t,{match:o,at:i=e.selection}=t;if(i){var a=yf.after(e,i,{voids:r});if(a){var[,u]=yf.last(e,[]),s=[a.path,u];if(Of.isPath(i)&&0===i.length)throw new Error("Cannot get the next node from the root node!");if(null==o)if(Of.isPath(i)){var[c]=yf.parent(e,i);o=e=>c.children.includes(e)}else o=()=>!0;var[l]=yf.nodes(e,{at:s,match:o,mode:n,voids:r});return l}}},node(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=yf.path(e,t,n);return[Sf.get(e,r),r]},*nodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:n=e.selection,mode:r="all",universal:o=!1,reverse:i=!1,voids:a=!1}=t,{match:u}=t;if(u||(u=()=>!0),n){var s,c;if(bf.isSpan(n))s=n[0],c=n[1];else{var l=yf.path(e,n,{edge:"start"}),f=yf.path(e,n,{edge:"end"});s=i?f:l,c=i?l:f}var d,p=Sf.nodes(e,{reverse:i,from:s,to:c,pass:t=>{var[n]=t;return!a&&yf.isVoid(e,n)}}),h=[];for(var[g,v]of p){var y=d&&0===Of.compare(v,d[1]);if("highest"!==r||!y)if(u(g,v))if("lowest"===r&&y)d=[g,v];else{var m="lowest"===r?d:[g,v];m&&(o?h.push(m):yield m),d=[g,v]}else if(o&&!y&&Hf.isText(g))return}"lowest"===r&&d&&(o?h.push(d):yield d),o&&(yield*h)}},normalize(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{force:n=!1}=t,r=e=>xl.get(e)||[];if(yf.isNormalizing(e)){if(n){var o=Array.from(Sf.nodes(e),(e=>{var[,t]=e;return t}));xl.set(e,o)}0!==r(e).length&&yf.withoutNormalizing(e,(()=>{for(var t of r(e))if(Sf.has(e,t)){var n=yf.node(e,t),[o,i]=n;ff.isElement(o)&&0===o.children.length&&e.normalizeNode(n)}for(var a=42*r(e).length,u=0;0!==r(e).length;){if(u>a)throw new Error("\n            Could not completely normalize the editor after ".concat(a," iterations! This is usually due to incorrect normalization logic that leaves a node in an invalid state.\n          "));var s=r(e).pop();if(Sf.has(e,s)){var c=yf.node(e,s);e.normalizeNode(c)}u++}}))}},parent(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=yf.path(e,t,n),o=Of.parent(r);return yf.node(e,o)},path(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{depth:r,edge:o}=n;if(Of.isPath(t))if("start"===o){var[,i]=Sf.first(e,t);t=i}else if("end"===o){var[,a]=Sf.last(e,t);t=a}return Nf.isRange(t)&&(t="start"===o?Nf.start(t):"end"===o?Nf.end(t):Of.common(t.anchor.path,t.focus.path)),Ff.isPoint(t)&&(t=t.path),null!=r&&(t=t.slice(0,r)),t},hasPath:(e,t)=>Sf.has(e,t),pathRef(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:r="forward"}=n,o={current:t,affinity:r,unref(){var{current:t}=o;return yf.pathRefs(e).delete(o),o.current=null,t}};return yf.pathRefs(e).add(o),o},pathRefs(e){var t=kl.get(e);return t||(t=new Set,kl.set(e,t)),t},point(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{edge:r="start"}=n;if(Of.isPath(t)){var o;if("end"===r){var[,i]=Sf.last(e,t);o=i}else{var[,a]=Sf.first(e,t);o=a}var u=Sf.get(e,o);if(!Hf.isText(u))throw new Error("Cannot get the ".concat(r," point in the node at path [").concat(t,"] because it has no ").concat(r," text node."));return{path:o,offset:"end"===r?u.text.length:0}}if(Nf.isRange(t)){var[s,c]=Nf.edges(t);return"start"===r?s:c}return t},pointRef(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:r="forward"}=n,o={current:t,affinity:r,unref(){var{current:t}=o;return yf.pointRefs(e).delete(o),o.current=null,t}};return yf.pointRefs(e).add(o),o},pointRefs(e){var t=Bl.get(e);return t||(t=new Set,Bl.set(e,t)),t},*positions(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{at:n=e.selection,unit:r="offset",reverse:o=!1,voids:i=!1}=t;if(n){var a=yf.range(e,n),[u,s]=Nf.edges(a),c=o?s:u,l=!1,f="",d=0,p=0,h=0;for(var[g,v]of yf.nodes(e,{at:n,reverse:o,voids:i})){if(ff.isElement(g)){if(!i&&e.isVoid(g)){yield yf.start(e,v);continue}if(e.isInline(g))continue;if(yf.hasInlines(e,g)){var y=Of.isAncestor(v,s.path)?s:yf.end(e,v),m=Of.isAncestor(v,u.path)?u:yf.start(e,v);f=yf.string(e,{anchor:m,focus:y},{voids:i}),l=!0}}if(Hf.isText(g)){var b=Of.equals(v,c.path);for(b?(p=o?c.offset:g.text.length-c.offset,h=c.offset):(p=g.text.length,h=o?p:0),(b||l||"offset"===r)&&(yield{path:v,offset:h},l=!1);;){if(0===d){if(""===f)break;d=w(f,r,o),f=$l(f,d,o)[1]}if(h=o?h-d:h+d,(p-=d)<0){d=-p;break}d=0,yield{path:v,offset:h}}}}}function w(e,t,n){return"character"===t?Il(e,n):"word"===t?function(e){for(var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=0,r=!1;e.length>0;){var o=Il(e,t),[i,a]=$l(e,o,t);if(Hl(i,a,t))r=!0,n+=o;else{if(r)break;n+=o}e=a}return n}(e,n):"line"===t||"block"===t?e.length:1}},previous(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{mode:n="lowest",voids:r=!1}=t,{match:o,at:i=e.selection}=t;if(i){var a=yf.before(e,i,{voids:r});if(a){var[,u]=yf.first(e,[]),s=[a.path,u];if(Of.isPath(i)&&0===i.length)throw new Error("Cannot get the previous node from the root node!");if(null==o)if(Of.isPath(i)){var[c]=yf.parent(e,i);o=e=>c.children.includes(e)}else o=()=>!0;var[l]=yf.nodes(e,{reverse:!0,at:s,match:o,mode:n,voids:r});return l}}},range:(e,t,n)=>Nf.isRange(t)&&!n?t:{anchor:yf.start(e,t),focus:yf.end(e,n||t)},rangeRef(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{affinity:r="forward"}=n,o={current:t,affinity:r,unref(){var{current:t}=o;return yf.rangeRefs(e).delete(o),o.current=null,t}};return yf.rangeRefs(e).add(o),o},rangeRefs(e){var t=Tl.get(e);return t||(t=new Set,Tl.set(e,t)),t},removeMark(e,t){e.removeMark(t)},setNormalizing(e,t){Ol.set(e,t)},start:(e,t)=>yf.point(e,t,{edge:"start"}),string(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{voids:r=!1}=n,o=yf.range(e,t),[i,a]=Nf.edges(o),u="";for(var[s,c]of yf.nodes(e,{at:o,match:Hf.isText,voids:r})){var l=s.text;Of.equals(c,a.path)&&(l=l.slice(0,a.offset)),Of.equals(c,i.path)&&(l=l.slice(i.offset)),u+=l}return u},unhangRange(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{voids:r=!1}=n,[o,i]=Nf.edges(t);if(0!==o.offset||0!==i.offset||Nf.isCollapsed(t))return t;var a=yf.above(e,{at:i,match:t=>yf.isBlock(e,t)}),u=a?a[1]:[],s={anchor:yf.start(e,[]),focus:i},c=!0;for(var[l,f]of yf.nodes(e,{at:s,match:Hf.isText,reverse:!0,voids:r}))if(c)c=!1;else if(""!==l.text||Of.isBefore(f,u)){i={path:f,offset:l.text.length};break}return{anchor:o,focus:i}},void(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return yf.above(e,gf(gf({},t),{},{match:t=>yf.isVoid(e,t)}))},withoutNormalizing(e,t){var n=yf.isNormalizing(e);yf.setNormalizing(e,!1);try{t()}finally{yf.setNormalizing(e,n)}yf.normalize(e)}},mf={isLocation:e=>Of.isPath(e)||Ff.isPoint(e)||Nf.isRange(e)},bf={isSpan:e=>Array.isArray(e)&&2===e.length&&e.every(Of.isPath)},wf=["children"],Ef=["text"],Af=new WeakMap,Sf={ancestor(e,t){var n=Sf.get(e,t);if(Hf.isText(n))throw new Error("Cannot get the ancestor node at path [".concat(t,"] because it refers to a text node instead: ").concat(n));return n},*ancestors(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(var r of Of.ancestors(t,n)){var o=[Sf.ancestor(e,r),r];yield o}},child(e,t){if(Hf.isText(e))throw new Error("Cannot get the child of a text node: ".concat(JSON.stringify(e)));var n=e.children[t];if(null==n)throw new Error("Cannot get child at index `".concat(t,"` in node: ").concat(JSON.stringify(e)));return n},*children(e,t){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{reverse:r=!1}=n,o=Sf.ancestor(e,t),{children:i}=o,a=r?i.length-1:0;r?a>=0:a<i.length;){var u=Sf.child(o,a),s=t.concat(a);yield[u,s],a=r?a-1:a+1}},common(e,t,n){var r=Of.common(t,n);return[Sf.get(e,r),r]},descendant(e,t){var n=Sf.get(e,t);if(yf.isEditor(n))throw new Error("Cannot get the descendant node at path [".concat(t,"] because it refers to the root editor node instead: ").concat(n));return n},*descendants(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[n,r]of Sf.nodes(e,t))0!==r.length&&(yield[n,r])},*elements(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[n,r]of Sf.nodes(e,t))ff.isElement(n)&&(yield[n,r])},extractProps:e=>ff.isAncestor(e)?Nl(e,wf):Nl(e,Ef),first(e,t){for(var n=t.slice(),r=Sf.get(e,n);r&&!Hf.isText(r)&&0!==r.children.length;)r=r.children[0],n.push(0);return[r,n]},fragment(e,t){if(Hf.isText(e))throw new Error("Cannot get a fragment starting from a root text node: ".concat(JSON.stringify(e)));var n=El({children:e.children},(e=>{var[n,r]=Nf.edges(t),o=Sf.nodes(e,{reverse:!0,pass:e=>{var[,n]=e;return!Nf.includes(t,n)}});for(var[,i]of o){if(!Nf.includes(t,i)){var a=Sf.parent(e,i),u=i[i.length-1];a.children.splice(u,1)}if(Of.equals(i,r.path)){var s=Sf.leaf(e,i);s.text=s.text.slice(0,r.offset)}if(Of.equals(i,n.path)){var c=Sf.leaf(e,i);c.text=c.text.slice(n.offset)}}yf.isEditor(e)&&(e.selection=null)}));return n.children},get(e,t){for(var n=e,r=0;r<t.length;r++){var o=t[r];if(Hf.isText(n)||!n.children[o])throw new Error("Cannot find a descendant at path [".concat(t,"] in node: ").concat(JSON.stringify(e)));n=n.children[o]}return n},has(e,t){for(var n=e,r=0;r<t.length;r++){var o=t[r];if(Hf.isText(n)||!n.children[o])return!1;n=n.children[o]}return!0},isNode:e=>Hf.isText(e)||ff.isElement(e)||yf.isEditor(e),isNodeList(e){if(!Array.isArray(e))return!1;var t=Af.get(e);if(void 0!==t)return t;var n=e.every((e=>Sf.isNode(e)));return Af.set(e,n),n},last(e,t){for(var n=t.slice(),r=Sf.get(e,n);r&&!Hf.isText(r)&&0!==r.children.length;){var o=r.children.length-1;r=r.children[o],n.push(o)}return[r,n]},leaf(e,t){var n=Sf.get(e,t);if(!Hf.isText(n))throw new Error("Cannot get the leaf node at path [".concat(t,"] because it refers to a non-leaf node: ").concat(n));return n},*levels(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};for(var r of Of.levels(t,n)){var o=Sf.get(e,r);yield[o,r]}},matches:(e,t)=>ff.isElement(e)&&ff.isElementProps(t)&&ff.matches(e,t)||Hf.isText(e)&&Hf.isTextProps(t)&&Hf.matches(e,t),*nodes(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{pass:n,reverse:r=!1}=t,{from:o=[],to:i}=t,a=new Set,u=[],s=e;!i||!(r?Of.isBefore(u,i):Of.isAfter(u,i));)if(a.has(s)||(yield[s,u]),a.has(s)||Hf.isText(s)||0===s.children.length||null!=n&&!1!==n([s,u])){if(0===u.length)break;if(!r){var c=Of.next(u);if(Sf.has(e,c)){u=c,s=Sf.get(e,u);continue}}r&&0!==u[u.length-1]?(u=Of.previous(u),s=Sf.get(e,u)):(u=Of.parent(u),s=Sf.get(e,u),a.add(s))}else{a.add(s);var l=r?s.children.length-1:0;Of.isAncestor(u,o)&&(l=o[u.length]),u=u.concat(l),s=Sf.get(e,u)}},parent(e,t){var n=Of.parent(t),r=Sf.get(e,n);if(Hf.isText(r))throw new Error("Cannot get the parent of path [".concat(t,"] because it does not exist in the root."));return r},string:e=>Hf.isText(e)?e.text:e.children.map(Sf.string).join(""),*texts(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};for(var[n,r]of Sf.nodes(e,t))Hf.isText(n)&&(yield[n,r])}};function Cf(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function xf(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Cf(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Cf(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Df={isNodeOperation:e=>Df.isOperation(e)&&e.type.endsWith("_node"),isOperation(e){if(!Dc(e))return!1;switch(e.type){case"insert_node":case"remove_node":return Of.isPath(e.path)&&Sf.isNode(e.node);case"insert_text":case"remove_text":return"number"==typeof e.offset&&"string"==typeof e.text&&Of.isPath(e.path);case"merge_node":return"number"==typeof e.position&&Of.isPath(e.path)&&Dc(e.properties);case"move_node":return Of.isPath(e.path)&&Of.isPath(e.newPath);case"set_node":return Of.isPath(e.path)&&Dc(e.properties)&&Dc(e.newProperties);case"set_selection":return null===e.properties&&Nf.isRange(e.newProperties)||null===e.newProperties&&Nf.isRange(e.properties)||Dc(e.properties)&&Dc(e.newProperties);case"split_node":return Of.isPath(e.path)&&"number"==typeof e.position&&Dc(e.properties);default:return!1}},isOperationList:e=>Array.isArray(e)&&e.every((e=>Df.isOperation(e))),isSelectionOperation:e=>Df.isOperation(e)&&e.type.endsWith("_selection"),isTextOperation:e=>Df.isOperation(e)&&e.type.endsWith("_text"),inverse(e){switch(e.type){case"insert_node":return xf(xf({},e),{},{type:"remove_node"});case"insert_text":return xf(xf({},e),{},{type:"remove_text"});case"merge_node":return xf(xf({},e),{},{type:"split_node",path:Of.previous(e.path)});case"move_node":var{newPath:t,path:n}=e;if(Of.equals(t,n))return e;if(Of.isSibling(n,t))return xf(xf({},e),{},{path:t,newPath:n});var r=Of.transform(n,e),o=Of.transform(Of.next(n),e);return xf(xf({},e),{},{path:r,newPath:o});case"remove_node":return xf(xf({},e),{},{type:"insert_node"});case"remove_text":return xf(xf({},e),{},{type:"insert_text"});case"set_node":var{properties:i,newProperties:a}=e;return xf(xf({},e),{},{properties:a,newProperties:i});case"set_selection":var{properties:u,newProperties:s}=e;return xf(xf({},e),{},null==u?{properties:s,newProperties:null}:null==s?{properties:null,newProperties:u}:{properties:s,newProperties:u});case"split_node":return xf(xf({},e),{},{type:"merge_node",path:Of.next(e.path)})}}},Of={ancestors(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:n=!1}=t,r=Of.levels(e,t);return n?r.slice(1):r.slice(0,-1)},common(e,t){for(var n=[],r=0;r<e.length&&r<t.length;r++){var o=e[r];if(o!==t[r])break;n.push(o)}return n},compare(e,t){for(var n=Math.min(e.length,t.length),r=0;r<n;r++){if(e[r]<t[r])return-1;if(e[r]>t[r])return 1}return 0},endsAfter(e,t){var n=e.length-1,r=e.slice(0,n),o=t.slice(0,n),i=e[n],a=t[n];return Of.equals(r,o)&&i>a},endsAt(e,t){var n=e.length,r=e.slice(0,n),o=t.slice(0,n);return Of.equals(r,o)},endsBefore(e,t){var n=e.length-1,r=e.slice(0,n),o=t.slice(0,n),i=e[n],a=t[n];return Of.equals(r,o)&&i<a},equals:(e,t)=>e.length===t.length&&e.every(((e,n)=>e===t[n])),hasPrevious:e=>e[e.length-1]>0,isAfter:(e,t)=>1===Of.compare(e,t),isAncestor:(e,t)=>e.length<t.length&&0===Of.compare(e,t),isBefore:(e,t)=>-1===Of.compare(e,t),isChild:(e,t)=>e.length===t.length+1&&0===Of.compare(e,t),isCommon:(e,t)=>e.length<=t.length&&0===Of.compare(e,t),isDescendant:(e,t)=>e.length>t.length&&0===Of.compare(e,t),isParent:(e,t)=>e.length+1===t.length&&0===Of.compare(e,t),isPath:e=>Array.isArray(e)&&(0===e.length||"number"==typeof e[0]),isSibling(e,t){if(e.length!==t.length)return!1;var n=e.slice(0,-1),r=t.slice(0,-1);return e[e.length-1]!==t[t.length-1]&&Of.equals(n,r)},levels(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:n=!1}=t,r=[],o=0;o<=e.length;o++)r.push(e.slice(0,o));return n&&r.reverse(),r},next(e){if(0===e.length)throw new Error("Cannot get the next path of a root path [".concat(e,"], because it has no next index."));var t=e[e.length-1];return e.slice(0,-1).concat(t+1)},parent(e){if(0===e.length)throw new Error("Cannot get the parent path of the root path [".concat(e,"]."));return e.slice(0,-1)},previous(e){if(0===e.length)throw new Error("Cannot get the previous path of a root path [".concat(e,"], because it has no previous index."));var t=e[e.length-1];if(t<=0)throw new Error("Cannot get the previous path of a first child path [".concat(e,"] because it would result in a negative index."));return e.slice(0,-1).concat(t-1)},relative(e,t){if(!Of.isAncestor(t,e)&&!Of.equals(e,t))throw new Error("Cannot get the relative path of [".concat(e,"] inside ancestor [").concat(t,"], because it is not above or equal to the path."));return e.slice(t.length)},transform(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return El(e,(r=>{var{affinity:o="forward"}=n;if(e&&0!==(null==e?void 0:e.length)){if(null===r)return null;switch(t.type){case"insert_node":var{path:i}=t;(Of.equals(i,r)||Of.endsBefore(i,r)||Of.isAncestor(i,r))&&(r[i.length-1]+=1);break;case"remove_node":var{path:a}=t;if(Of.equals(a,r)||Of.isAncestor(a,r))return null;Of.endsBefore(a,r)&&(r[a.length-1]-=1);break;case"merge_node":var{path:u,position:s}=t;Of.equals(u,r)||Of.endsBefore(u,r)?r[u.length-1]-=1:Of.isAncestor(u,r)&&(r[u.length-1]-=1,r[u.length]+=s);break;case"split_node":var{path:c,position:l}=t;if(Of.equals(c,r)){if("forward"===o)r[r.length-1]+=1;else if("backward"!==o)return null}else Of.endsBefore(c,r)?r[c.length-1]+=1:Of.isAncestor(c,r)&&e[c.length]>=l&&(r[c.length-1]+=1,r[c.length]-=l);break;case"move_node":var{path:f,newPath:d}=t;if(Of.equals(f,d))return;if(Of.isAncestor(f,r)||Of.equals(f,r)){var p=d.slice();return Of.endsBefore(f,d)&&f.length<d.length&&(p[f.length-1]-=1),p.concat(r.slice(f.length))}Of.isSibling(f,d)&&(Of.isAncestor(d,r)||Of.equals(d,r))?Of.endsBefore(f,r)?r[f.length-1]-=1:r[f.length-1]+=1:Of.endsBefore(d,r)||Of.equals(d,r)||Of.isAncestor(d,r)?(Of.endsBefore(f,r)&&(r[f.length-1]-=1),r[d.length-1]+=1):Of.endsBefore(f,r)&&(Of.equals(d,r)&&(r[d.length-1]+=1),r[f.length-1]-=1)}}}))}},kf={transform(e,t){var{current:n,affinity:r}=e;if(null!=n){var o=Of.transform(n,t,{affinity:r});e.current=o,null==o&&e.unref()}}};function Bf(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Tf(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Bf(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Bf(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Ff={compare(e,t){var n=Of.compare(e.path,t.path);return 0===n?e.offset<t.offset?-1:e.offset>t.offset?1:0:n},isAfter:(e,t)=>1===Ff.compare(e,t),isBefore:(e,t)=>-1===Ff.compare(e,t),equals:(e,t)=>e.offset===t.offset&&Of.equals(e.path,t.path),isPoint:e=>Dc(e)&&"number"==typeof e.offset&&Of.isPath(e.path),transform(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return El(e,(e=>{if(null===e)return null;var{affinity:r="forward"}=n,{path:o,offset:i}=e;switch(t.type){case"insert_node":case"move_node":e.path=Of.transform(o,t,n);break;case"insert_text":Of.equals(t.path,o)&&t.offset<=i&&(e.offset+=t.text.length);break;case"merge_node":Of.equals(t.path,o)&&(e.offset+=t.position),e.path=Of.transform(o,t,n);break;case"remove_text":Of.equals(t.path,o)&&t.offset<=i&&(e.offset-=Math.min(i-t.offset,t.text.length));break;case"remove_node":if(Of.equals(t.path,o)||Of.isAncestor(t.path,o))return null;e.path=Of.transform(o,t,n);break;case"split_node":if(Of.equals(t.path,o)){if(t.position===i&&null==r)return null;(t.position<i||t.position===i&&"forward"===r)&&(e.offset-=t.position,e.path=Of.transform(o,t,Tf(Tf({},n),{},{affinity:"forward"})))}else e.path=Of.transform(o,t,n)}}))}},_f={transform(e,t){var{current:n,affinity:r}=e;if(null!=n){var o=Ff.transform(n,t,{affinity:r});e.current=o,null==o&&e.unref()}}},Pf=["anchor","focus"];function jf(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}var Nf={edges(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{reverse:n=!1}=t,{anchor:r,focus:o}=e;return Nf.isBackward(e)===n?[r,o]:[o,r]},end(e){var[,t]=Nf.edges(e);return t},equals:(e,t)=>Ff.equals(e.anchor,t.anchor)&&Ff.equals(e.focus,t.focus),includes(e,t){if(Nf.isRange(t)){if(Nf.includes(e,t.anchor)||Nf.includes(e,t.focus))return!0;var[n,r]=Nf.edges(e),[o,i]=Nf.edges(t);return Ff.isBefore(n,o)&&Ff.isAfter(r,i)}var[a,u]=Nf.edges(e),s=!1,c=!1;return Ff.isPoint(t)?(s=Ff.compare(t,a)>=0,c=Ff.compare(t,u)<=0):(s=Of.compare(t,a.path)>=0,c=Of.compare(t,u.path)<=0),s&&c},intersection(e,t){var n=Nl(e,Pf),[r,o]=Nf.edges(e),[i,a]=Nf.edges(t),u=Ff.isBefore(r,i)?i:r,s=Ff.isBefore(o,a)?o:a;return Ff.isBefore(s,u)?null:function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?jf(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):jf(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({anchor:u,focus:s},n)},isBackward(e){var{anchor:t,focus:n}=e;return Ff.isAfter(t,n)},isCollapsed(e){var{anchor:t,focus:n}=e;return Ff.equals(t,n)},isExpanded:e=>!Nf.isCollapsed(e),isForward:e=>!Nf.isBackward(e),isRange:e=>Dc(e)&&Ff.isPoint(e.anchor)&&Ff.isPoint(e.focus),*points(e){yield[e.anchor,"anchor"],yield[e.focus,"focus"]},start(e){var[t]=Nf.edges(e);return t},transform(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return El(e,(e=>{if(null===e)return null;var r,o,{affinity:i="inward"}=n;if("inward"===i){var a=Nf.isCollapsed(e);Nf.isForward(e)?(r="forward",o=a?r:"backward"):(r="backward",o=a?r:"forward")}else"outward"===i?Nf.isForward(e)?(r="backward",o="forward"):(r="forward",o="backward"):(r=i,o=i);var u=Ff.transform(e.anchor,t,{affinity:r}),s=Ff.transform(e.focus,t,{affinity:o});if(!u||!s)return null;e.anchor=u,e.focus=s}))}},Rf={transform(e,t){var{current:n,affinity:r}=e;if(null!=n){var o=Nf.transform(n,t,{affinity:r});e.current=o,null==o&&e.unref()}}},If=(e,t)=>{for(var n in e){var r=e[n],o=t[n];if(Dc(r)&&Dc(o)){if(!If(r,o))return!1}else if(Array.isArray(r)&&Array.isArray(o)){if(r.length!==o.length)return!1;for(var i=0;i<r.length;i++)if(r[i]!==o[i])return!1}else if(r!==o)return!1}for(var a in t)if(void 0===e[a]&&void 0!==t[a])return!1;return!0},Lf=["text"],Mf=["anchor","focus"];function zf(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function $f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?zf(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):zf(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Hf={equals(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{loose:r=!1}=n;function o(e){return Nl(e,Lf)}return If(r?o(e):e,r?o(t):t)},isText:e=>Dc(e)&&"string"==typeof e.text,isTextList:e=>Array.isArray(e)&&e.every((e=>Hf.isText(e))),isTextProps:e=>void 0!==e.text,matches(e,t){for(var n in t)if("text"!==n&&(!e.hasOwnProperty(n)||e[n]!==t[n]))return!1;return!0},decorations(e,t){var n=[$f({},e)];for(var r of t){var o=Nl(r,Mf),[i,a]=Nf.edges(r),u=[],s=0;for(var c of n){var{length:l}=c.text,f=s;if(s+=l,i.offset<=f&&a.offset>=s)Object.assign(c,o),u.push(c);else if(i.offset!==a.offset&&(i.offset===s||a.offset===f)||i.offset>s||a.offset<f||a.offset===f&&0!==f)u.push(c);else{var d=c,p=void 0,h=void 0;if(a.offset<s){var g=a.offset-f;h=$f($f({},d),{},{text:d.text.slice(g)}),d=$f($f({},d),{},{text:d.text.slice(0,g)})}if(i.offset>f){var v=i.offset-f;p=$f($f({},d),{},{text:d.text.slice(0,v)}),d=$f($f({},d),{},{text:d.text.slice(v)})}Object.assign(d,o),p&&u.push(p),u.push(d),h&&u.push(h)}}n=u}return n}};function Uf(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Vf(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Uf(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Uf(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var qf={transform(e,t){e.children=Al(e.children);var n=e.selection&&Al(e.selection);try{n=((e,t,n)=>{switch(n.type){case"insert_node":var{path:r,node:o}=n,i=Sf.parent(e,r),a=r[r.length-1];if(a>i.children.length)throw new Error('Cannot apply an "insert_node" operation at path ['.concat(r,"] because the destination is past the end of the node."));if(i.children.splice(a,0,o),t)for(var[u,s]of Nf.points(t))t[s]=Ff.transform(u,n);break;case"insert_text":var{path:c,offset:l,text:f}=n;if(0===f.length)break;var d=Sf.leaf(e,c),p=d.text.slice(0,l),h=d.text.slice(l);if(d.text=p+f+h,t)for(var[g,v]of Nf.points(t))t[v]=Ff.transform(g,n);break;case"merge_node":var{path:y}=n,m=Sf.get(e,y),b=Of.previous(y),w=Sf.get(e,b),E=Sf.parent(e,y),A=y[y.length-1];if(Hf.isText(m)&&Hf.isText(w))w.text+=m.text;else{if(Hf.isText(m)||Hf.isText(w))throw new Error('Cannot apply a "merge_node" operation at path ['.concat(y,"] to nodes of different interfaces: ").concat(m," ").concat(w));w.children.push(...m.children)}if(E.children.splice(A,1),t)for(var[S,C]of Nf.points(t))t[C]=Ff.transform(S,n);break;case"move_node":var{path:x,newPath:D}=n;if(Of.isAncestor(x,D))throw new Error("Cannot move a path [".concat(x,"] to new path [").concat(D,"] because the destination is inside itself."));var O=Sf.get(e,x),k=Sf.parent(e,x),B=x[x.length-1];k.children.splice(B,1);var T=Of.transform(x,n),F=Sf.get(e,Of.parent(T)),_=T[T.length-1];if(F.children.splice(_,0,O),t)for(var[P,j]of Nf.points(t))t[j]=Ff.transform(P,n);break;case"remove_node":var{path:N}=n,R=N[N.length-1];if(Sf.parent(e,N).children.splice(R,1),t)for(var[I,L]of Nf.points(t)){var M=Ff.transform(I,n);if(null!=t&&null!=M)t[L]=M;else{var z=void 0,$=void 0;for(var[H,U]of Sf.texts(e)){if(-1!==Of.compare(U,N)){$=[H,U];break}z=[H,U]}var V=!1;z&&$&&(V=Of.equals($[1],N)?!Of.hasPrevious($[1]):Of.common(z[1],N).length<Of.common($[1],N).length),z&&!V?(I.path=z[1],I.offset=z[0].text.length):$?(I.path=$[1],I.offset=0):t=null}}break;case"remove_text":var{path:q,offset:W,text:G}=n;if(0===G.length)break;var K=Sf.leaf(e,q),Y=K.text.slice(0,W),X=K.text.slice(W+G.length);if(K.text=Y+X,t)for(var[J,Z]of Nf.points(t))t[Z]=Ff.transform(J,n);break;case"set_node":var{path:Q,properties:ee,newProperties:te}=n;if(0===Q.length)throw new Error("Cannot set properties on the root node!");var ne=Sf.get(e,Q);for(var re in te){if("children"===re||"text"===re)throw new Error('Cannot set the "'.concat(re,'" property of nodes!'));var oe=te[re];null==oe?delete ne[re]:ne[re]=oe}for(var ie in ee)te.hasOwnProperty(ie)||delete ne[ie];break;case"set_selection":var{newProperties:ae}=n;if(null==ae)t=ae;else{if(null==t){if(!Nf.isRange(ae))throw new Error('Cannot apply an incomplete "set_selection" operation properties '.concat(JSON.stringify(ae)," when there is no current selection."));t=Vf({},ae)}for(var ue in ae){var se=ae[ue];if(null==se){if("anchor"===ue||"focus"===ue)throw new Error('Cannot remove the "'.concat(ue,'" selection property'));delete t[ue]}else t[ue]=se}}break;case"split_node":var{path:ce,position:le,properties:fe}=n;if(0===ce.length)throw new Error('Cannot apply a "split_node" operation at path ['.concat(ce,"] because the root node cannot be split."));var de,pe=Sf.get(e,ce),he=Sf.parent(e,ce),ge=ce[ce.length-1];if(Hf.isText(pe)){var ve=pe.text.slice(0,le),ye=pe.text.slice(le);pe.text=ve,de=Vf(Vf({},fe),{},{text:ye})}else{var me=pe.children.slice(0,le),be=pe.children.slice(le);pe.children=me,de=Vf(Vf({},fe),{},{children:be})}if(he.children.splice(ge+1,0,de),t)for(var[we,Ee]of Nf.points(t))t[Ee]=Ff.transform(we,n)}return t})(e,n,t)}finally{e.children=Sl(e.children),e.selection=n?kc(n)?Sl(n):n:null}}},Wf=["text"],Gf=["children"];function Kf(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Yf(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Kf(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Kf(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var Xf={insertNodes(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};yf.withoutNormalizing(e,(()=>{var{hanging:r=!1,voids:o=!1,mode:i="lowest"}=n,{at:a,match:u,select:s}=n;if(Sf.isNode(t)&&(t=[t]),0!==t.length){var[c]=t;if(a||(a=e.selection?e.selection:e.children.length>0?yf.end(e,[]):[0],s=!0),null==s&&(s=!1),Nf.isRange(a))if(r||(a=yf.unhangRange(e,a)),Nf.isCollapsed(a))a=a.anchor;else{var[,l]=Nf.edges(a),f=yf.pointRef(e,l);ad.delete(e,{at:a}),a=f.unref()}if(Ff.isPoint(a)){null==u&&(u=Hf.isText(c)?e=>Hf.isText(e):e.isInline(c)?t=>Hf.isText(t)||yf.isInline(e,t):t=>yf.isBlock(e,t));var[d]=yf.nodes(e,{at:a.path,match:u,mode:i,voids:o});if(!d)return;var[,p]=d,h=yf.pathRef(e,p),g=yf.isEnd(e,a,p);ad.splitNodes(e,{at:a,match:u,mode:i,voids:o});var v=h.unref();a=g?Of.next(v):v}var y=Of.parent(a),m=a[a.length-1];if(o||!yf.void(e,{at:y})){for(var b of t){var w=y.concat(m);m++,e.apply({type:"insert_node",path:w,node:b}),a=Of.next(a)}if(a=Of.previous(a),s){var E=yf.end(e,a);E&&ad.select(e,E)}}}}))},liftNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};yf.withoutNormalizing(e,(()=>{var{at:n=e.selection,mode:r="lowest",voids:o=!1}=t,{match:i}=t;if(null==i&&(i=Of.isPath(n)?Qf(e,n):t=>yf.isBlock(e,t)),n){var a=yf.nodes(e,{at:n,match:i,mode:r,voids:o}),u=Array.from(a,(t=>{var[,n]=t;return yf.pathRef(e,n)}));for(var s of u){var c=s.unref();if(c.length<2)throw new Error("Cannot lift node at a path [".concat(c,"] because it has a depth of less than `2`."));var l=yf.node(e,Of.parent(c)),[f,d]=l,p=c[c.length-1],{length:h}=f.children;if(1===h){var g=Of.next(d);ad.moveNodes(e,{at:c,to:g,voids:o}),ad.removeNodes(e,{at:d,voids:o})}else if(0===p)ad.moveNodes(e,{at:c,to:d,voids:o});else if(p===h-1){var v=Of.next(d);ad.moveNodes(e,{at:c,to:v,voids:o})}else{var y=Of.next(c),m=Of.next(d);ad.splitNodes(e,{at:y,voids:o}),ad.moveNodes(e,{at:c,to:m,voids:o})}}}}))},mergeNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};yf.withoutNormalizing(e,(()=>{var{match:n,at:r=e.selection}=t,{hanging:o=!1,voids:i=!1,mode:a="lowest"}=t;if(r){if(null==n)if(Of.isPath(r)){var[u]=yf.parent(e,r);n=e=>u.children.includes(e)}else n=t=>yf.isBlock(e,t);if(!o&&Nf.isRange(r)&&(r=yf.unhangRange(e,r)),Nf.isRange(r))if(Nf.isCollapsed(r))r=r.anchor;else{var[,s]=Nf.edges(r),c=yf.pointRef(e,s);ad.delete(e,{at:r}),r=c.unref(),null==t.at&&ad.select(e,r)}var[l]=yf.nodes(e,{at:r,match:n,voids:i,mode:a}),f=yf.previous(e,{at:r,match:n,voids:i,mode:a});if(l&&f){var[d,p]=l,[h,g]=f;if(0!==p.length&&0!==g.length){var v,y,m=Of.next(g),b=Of.common(p,g),w=Of.isSibling(p,g),E=Array.from(yf.levels(e,{at:p}),(e=>{var[t]=e;return t})).slice(b.length).slice(0,-1),A=yf.above(e,{at:p,mode:"highest",match:t=>E.includes(t)&&Jf(e,t)}),S=A&&yf.pathRef(e,A[1]);if(Hf.isText(d)&&Hf.isText(h)){var C=Nl(d,Wf);y=h.text.length,v=C}else{if(!ff.isElement(d)||!ff.isElement(h))throw new Error("Cannot merge the node at path [".concat(p,"] with the previous sibling because it is not the same kind: ").concat(JSON.stringify(d)," ").concat(JSON.stringify(h)));C=Nl(d,Gf),y=h.children.length,v=C}w||ad.moveNodes(e,{at:p,to:m,voids:i}),S&&ad.removeNodes(e,{at:S.current,voids:i}),ff.isElement(h)&&yf.isEmpty(e,h)||Hf.isText(h)&&""===h.text&&0!==g[g.length-1]?ad.removeNodes(e,{at:g,voids:i}):e.apply({type:"merge_node",path:m,position:y,properties:v}),S&&S.unref()}}}}))},moveNodes(e,t){yf.withoutNormalizing(e,(()=>{var{to:n,at:r=e.selection,mode:o="lowest",voids:i=!1}=t,{match:a}=t;if(r){null==a&&(a=Of.isPath(r)?Qf(e,r):t=>yf.isBlock(e,t));var u=yf.pathRef(e,n),s=yf.nodes(e,{at:r,match:a,mode:o,voids:i}),c=Array.from(s,(t=>{var[,n]=t;return yf.pathRef(e,n)}));for(var l of c){var f=l.unref(),d=u.current;0!==f.length&&e.apply({type:"move_node",path:f,newPath:d}),u.current&&Of.isSibling(d,f)&&Of.isAfter(d,f)&&(u.current=Of.next(u.current))}u.unref()}}))},removeNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};yf.withoutNormalizing(e,(()=>{var{hanging:n=!1,voids:r=!1,mode:o="lowest"}=t,{at:i=e.selection,match:a}=t;if(i){null==a&&(a=Of.isPath(i)?Qf(e,i):t=>yf.isBlock(e,t)),!n&&Nf.isRange(i)&&(i=yf.unhangRange(e,i));var u=yf.nodes(e,{at:i,match:a,mode:o,voids:r}),s=Array.from(u,(t=>{var[,n]=t;return yf.pathRef(e,n)}));for(var c of s){var l=c.unref();if(l){var[f]=yf.node(e,l);e.apply({type:"remove_node",path:l,node:f})}}}}))},setNodes(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};yf.withoutNormalizing(e,(()=>{var{match:r,at:o=e.selection}=n,{hanging:i=!1,mode:a="lowest",split:u=!1,voids:s=!1}=n;if(o){if(null==r&&(r=Of.isPath(o)?Qf(e,o):t=>yf.isBlock(e,t)),!i&&Nf.isRange(o)&&(o=yf.unhangRange(e,o)),u&&Nf.isRange(o)){if(Nf.isCollapsed(o)&&yf.leaf(e,o.anchor)[0].text.length>0)return;var c=yf.rangeRef(e,o,{affinity:"inward"}),[l,f]=Nf.edges(o),d="lowest"===a?"lowest":"highest",p=yf.isEnd(e,f,f.path);ad.splitNodes(e,{at:f,match:r,mode:d,voids:s,always:!p});var h=yf.isStart(e,l,l.path);ad.splitNodes(e,{at:l,match:r,mode:d,voids:s,always:!h}),o=c.unref(),null==n.at&&ad.select(e,o)}for(var[g,v]of yf.nodes(e,{at:o,match:r,mode:a,voids:s})){var y={},m={};if(0!==v.length){var b=!1;for(var w in t)"children"!==w&&"text"!==w&&t[w]!==g[w]&&(b=!0,g.hasOwnProperty(w)&&(y[w]=g[w]),null!=t[w]&&(m[w]=t[w]));b&&e.apply({type:"set_node",path:v,properties:y,newProperties:m})}}}}))},splitNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};yf.withoutNormalizing(e,(()=>{var{mode:n="lowest",voids:r=!1}=t,{match:o,at:i=e.selection,height:a=0,always:u=!1}=t;if(null==o&&(o=t=>yf.isBlock(e,t)),Nf.isRange(i)&&(i=Zf(e,i)),Of.isPath(i)){var s=i,c=yf.point(e,s),[l]=yf.parent(e,s);o=e=>e===l,a=c.path.length-s.length+1,i=c,u=!0}if(i){var f=yf.pointRef(e,i,{affinity:"backward"}),[d]=yf.nodes(e,{at:i,match:o,mode:n,voids:r});if(d){var p=yf.void(e,{at:i,mode:"highest"});if(!r&&p){var[h,g]=p;if(ff.isElement(h)&&e.isInline(h)){var v=yf.after(e,g);if(!v){var y=Of.next(g);ad.insertNodes(e,{text:""},{at:y,voids:r}),v=yf.point(e,y)}i=v,u=!0}a=i.path.length-g.length+1,u=!0}var m=yf.pointRef(e,i),b=i.path.length-a,[,w]=d,E=i.path.slice(0,b),A=0===a?i.offset:i.path[b]+0;for(var[S,C]of yf.levels(e,{at:E,reverse:!0,voids:r})){var x=!1;if(C.length<w.length||0===C.length||!r&&yf.isVoid(e,S))break;var D=f.current,O=yf.isEnd(e,D,C);if(u||!f||!yf.isEdge(e,D,C)){x=!0;var k=Sf.extractProps(S);e.apply({type:"split_node",path:C,position:A,properties:k})}A=C[C.length-1]+(x||O?1:0)}if(null==t.at){var B=m.current||yf.end(e,[]);ad.select(e,B)}f.unref(),m.unref()}}}))},unsetNodes(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};Array.isArray(t)||(t=[t]);var r={};for(var o of t)r[o]=null;ad.setNodes(e,r,n)},unwrapNodes(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};yf.withoutNormalizing(e,(()=>{var{mode:n="lowest",split:r=!1,voids:o=!1}=t,{at:i=e.selection,match:a}=t;if(i){null==a&&(a=Of.isPath(i)?Qf(e,i):t=>yf.isBlock(e,t)),Of.isPath(i)&&(i=yf.range(e,i));var u=Nf.isRange(i)?yf.rangeRef(e,i):null,s=yf.nodes(e,{at:i,match:a,mode:n,voids:o}),c=Array.from(s,(t=>{var[,n]=t;return yf.pathRef(e,n)})).reverse(),l=function(t){var n=t.unref(),[i]=yf.node(e,n),a=yf.range(e,n);r&&u&&(a=Nf.intersection(u.current,a)),ad.liftNodes(e,{at:a,match:e=>ff.isAncestor(i)&&i.children.includes(e),voids:o})};for(var f of c)l(f);u&&u.unref()}}))},wrapNodes(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};yf.withoutNormalizing(e,(()=>{var{mode:r="lowest",split:o=!1,voids:i=!1}=n,{match:a,at:u=e.selection}=n;if(u){if(null==a&&(a=Of.isPath(u)?Qf(e,u):e.isInline(t)?t=>yf.isInline(e,t)||Hf.isText(t):t=>yf.isBlock(e,t)),o&&Nf.isRange(u)){var[s,c]=Nf.edges(u),l=yf.rangeRef(e,u,{affinity:"inward"});ad.splitNodes(e,{at:c,match:a,voids:i}),ad.splitNodes(e,{at:s,match:a,voids:i}),u=l.unref(),null==n.at&&ad.select(e,u)}var f=Array.from(yf.nodes(e,{at:u,match:e.isInline(t)?t=>yf.isBlock(e,t):e=>yf.isEditor(e),mode:"lowest",voids:i}));for(var[,d]of f){var p=Nf.isRange(u)?Nf.intersection(u,yf.range(e,d)):u;if(p){var h=Array.from(yf.nodes(e,{at:p,match:a,mode:r,voids:i}));if(h.length>0){var g=function(){var[n]=h,r=h[h.length-1],[,o]=n,[,a]=r;if(0===o.length&&0===a.length)return"continue";var u=Of.equals(o,a)?Of.parent(o):Of.common(o,a),s=yf.range(e,o,a),c=yf.node(e,u),[l]=c,f=u.length+1,d=Of.next(a.slice(0,f)),p=Yf(Yf({},t),{},{children:[]});ad.insertNodes(e,p,{at:d,voids:i}),ad.moveNodes(e,{at:s,match:e=>ff.isAncestor(l)&&l.children.includes(e),to:d.concat(0),voids:i})}();if("continue"===g)continue}}}}}))}},Jf=(e,t)=>{if(ff.isElement(t)){var n=t;return!!yf.isVoid(e,t)||1===n.children.length&&Jf(e,n.children[0])}return!yf.isEditor(t)},Zf=(e,t)=>{if(Nf.isCollapsed(t))return t.anchor;var[,n]=Nf.edges(t),r=yf.pointRef(e,n);return ad.delete(e,{at:t}),r.unref()},Qf=(e,t)=>{var[n]=yf.node(e,t);return e=>e===n};function ed(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function td(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ed(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ed(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var nd={collapse(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{edge:n="anchor"}=t,{selection:r}=e;if(r)if("anchor"===n)ad.select(e,r.anchor);else if("focus"===n)ad.select(e,r.focus);else if("start"===n){var[o]=Nf.edges(r);ad.select(e,o)}else if("end"===n){var[,i]=Nf.edges(r);ad.select(e,i)}},deselect(e){var{selection:t}=e;t&&e.apply({type:"set_selection",properties:t,newProperties:null})},move(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{selection:n}=e,{distance:r=1,unit:o="character",reverse:i=!1}=t,{edge:a=null}=t;if(n){"start"===a&&(a=Nf.isBackward(n)?"focus":"anchor"),"end"===a&&(a=Nf.isBackward(n)?"anchor":"focus");var{anchor:u,focus:s}=n,c={distance:r,unit:o},l={};if(null==a||"anchor"===a){var f=i?yf.before(e,u,c):yf.after(e,u,c);f&&(l.anchor=f)}if(null==a||"focus"===a){var d=i?yf.before(e,s,c):yf.after(e,s,c);d&&(l.focus=d)}ad.setSelection(e,l)}},select(e,t){var{selection:n}=e;if(t=yf.range(e,t),n)ad.setSelection(e,t);else{if(!Nf.isRange(t))throw new Error("When setting the selection and the current selection is `null` you must provide at least an `anchor` and `focus`, but you passed: ".concat(JSON.stringify(t)));e.apply({type:"set_selection",properties:n,newProperties:t})}},setPoint(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{selection:r}=e,{edge:o="both"}=n;if(r){"start"===o&&(o=Nf.isBackward(r)?"focus":"anchor"),"end"===o&&(o=Nf.isBackward(r)?"anchor":"focus");var{anchor:i,focus:a}=r,u="anchor"===o?i:a;ad.setSelection(e,{["anchor"===o?"anchor":"focus"]:td(td({},u),t)})}},setSelection(e,t){var{selection:n}=e,r={},o={};if(n){for(var i in t)("anchor"===i&&null!=t.anchor&&!Ff.equals(t.anchor,n.anchor)||"focus"===i&&null!=t.focus&&!Ff.equals(t.focus,n.focus)||"anchor"!==i&&"focus"!==i&&t[i]!==n[i])&&(r[i]=n[i],o[i]=t[i]);Object.keys(r).length>0&&e.apply({type:"set_selection",properties:r,newProperties:o})}}},rd={delete(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};yf.withoutNormalizing(e,(()=>{var{reverse:n=!1,unit:r="character",distance:o=1,voids:i=!1}=t,{at:a=e.selection,hanging:u=!1}=t;if(a){if(Nf.isRange(a)&&Nf.isCollapsed(a)&&(a=a.anchor),Ff.isPoint(a)){var s=yf.void(e,{at:a,mode:"highest"});if(!i&&s){var[,c]=s;a=c}else{var l={unit:r,distance:o};a={anchor:a,focus:n?yf.before(e,a,l)||yf.start(e,[]):yf.after(e,a,l)||yf.end(e,[])},u=!0}}if(Of.isPath(a))ad.removeNodes(e,{at:a,voids:i});else if(!Nf.isCollapsed(a)){if(!u){var[,f]=Nf.edges(a),d=yf.end(e,[]);Ff.equals(f,d)||(a=yf.unhangRange(e,a,{voids:i}))}var[p,h]=Nf.edges(a),g=yf.above(e,{match:t=>yf.isBlock(e,t),at:p,voids:i}),v=yf.above(e,{match:t=>yf.isBlock(e,t),at:h,voids:i}),y=g&&v&&!Of.equals(g[1],v[1]),m=Of.equals(p.path,h.path),b=i?null:yf.void(e,{at:p,mode:"highest"}),w=i?null:yf.void(e,{at:h,mode:"highest"});if(b){var E=yf.before(e,p);E&&g&&Of.isAncestor(g[1],E.path)&&(p=E)}if(w){var A=yf.after(e,h);A&&v&&Of.isAncestor(v[1],A.path)&&(h=A)}var S,C=[];for(var x of yf.nodes(e,{at:a,voids:i})){var[D,O]=x;S&&0===Of.compare(O,S)||(!i&&yf.isVoid(e,D)||!Of.isCommon(O,p.path)&&!Of.isCommon(O,h.path))&&(C.push(x),S=O)}var k=Array.from(C,(t=>{var[,n]=t;return yf.pathRef(e,n)})),B=yf.pointRef(e,p),T=yf.pointRef(e,h);if(!m&&!b){var F=B.current,[_]=yf.leaf(e,F),{path:P}=F,{offset:j}=p,N=_.text.slice(j);N.length>0&&e.apply({type:"remove_text",path:P,offset:j,text:N})}for(var R of k){var I=R.unref();ad.removeNodes(e,{at:I,voids:i})}if(!w){var L=T.current,[M]=yf.leaf(e,L),{path:z}=L,$=m?p.offset:0,H=M.text.slice($,h.offset);H.length>0&&e.apply({type:"remove_text",path:z,offset:$,text:H})}!m&&y&&T.current&&B.current&&ad.mergeNodes(e,{at:T.current,hanging:!0,voids:i});var U=n?B.unref()||T.unref():T.unref()||B.unref();null==t.at&&U&&ad.select(e,U)}}}))},insertFragment(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};yf.withoutNormalizing(e,(()=>{var{hanging:r=!1,voids:o=!1}=n,{at:i=e.selection}=n;if(t.length&&i){if(Nf.isRange(i))if(r||(i=yf.unhangRange(e,i)),Nf.isCollapsed(i))i=i.anchor;else{var[,a]=Nf.edges(i);if(!o&&yf.void(e,{at:a}))return;var u=yf.pointRef(e,a);ad.delete(e,{at:i}),i=u.unref()}else Of.isPath(i)&&(i=yf.start(e,i));if(o||!yf.void(e,{at:i})){var s=yf.above(e,{at:i,match:t=>yf.isInline(e,t),mode:"highest",voids:o});if(s){var[,c]=s;yf.isEnd(e,i,c)?i=yf.after(e,c):yf.isStart(e,i,c)&&(i=yf.before(e,c))}var l=yf.above(e,{match:t=>yf.isBlock(e,t),at:i,voids:o}),[,f]=l,d=yf.isStart(e,i,f),p=yf.isEnd(e,i,f),h=d&&p,g=!d||d&&p,v=!p,[,y]=Sf.first({children:t},[]),[,m]=Sf.last({children:t},[]),b=[],w=t=>{var[n,r]=t;return!(0===r.length||!h&&(g&&Of.isAncestor(r,y)&&ff.isElement(n)&&!e.isVoid(n)&&!e.isInline(n)||v&&Of.isAncestor(r,m)&&ff.isElement(n)&&!e.isVoid(n)&&!e.isInline(n)))};for(var E of Sf.nodes({children:t},{pass:w}))w(E)&&b.push(E);var A=[],S=[],C=[],x=!0,D=!1;for(var[O]of b)ff.isElement(O)&&!e.isInline(O)?(x=!1,D=!0,S.push(O)):x?A.push(O):C.push(O);var[k]=yf.nodes(e,{at:i,match:t=>Hf.isText(t)||yf.isInline(e,t),mode:"highest",voids:o}),[,B]=k,T=yf.isStart(e,i,B),F=yf.isEnd(e,i,B),_=yf.pathRef(e,p?Of.next(f):f),P=yf.pathRef(e,F?Of.next(B):B),j=yf.pathRef(e,f);ad.splitNodes(e,{at:i,match:t=>D?yf.isBlock(e,t):Hf.isText(t)||yf.isInline(e,t),mode:D?"lowest":"highest",voids:o});var N=yf.pathRef(e,!T||T&&F?Of.next(B):B);if(ad.insertNodes(e,A,{at:N.current,match:t=>Hf.isText(t)||yf.isInline(e,t),mode:"highest",voids:o}),h&&S.length&&ad.delete(e,{at:j.unref(),voids:o}),ad.insertNodes(e,S,{at:_.current,match:t=>yf.isBlock(e,t),mode:"lowest",voids:o}),ad.insertNodes(e,C,{at:P.current,match:t=>Hf.isText(t)||yf.isInline(e,t),mode:"highest",voids:o}),!n.at){var R;R=C.length>0?Of.previous(P.current):S.length>0?Of.previous(_.current):Of.previous(N.current);var I=yf.end(e,R);ad.select(e,I)}N.unref(),_.unref(),P.unref()}}}))},insertText(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};yf.withoutNormalizing(e,(()=>{var{voids:r=!1}=n,{at:o=e.selection}=n;if(o){if(Of.isPath(o)&&(o=yf.range(e,o)),Nf.isRange(o))if(Nf.isCollapsed(o))o=o.anchor;else{var i=Nf.end(o);if(!r&&yf.void(e,{at:i}))return;var a=yf.pointRef(e,i);ad.delete(e,{at:o,voids:r}),o=a.unref(),ad.setSelection(e,{anchor:o,focus:o})}if(r||!yf.void(e,{at:o})){var{path:u,offset:s}=o;t.length>0&&e.apply({type:"insert_text",path:u,offset:s,text:t})}}}))}};function od(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function id(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?od(Object(n),!0).forEach((function(t){Cl(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):od(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var ad=id(id(id(id({},qf),Xf),nd),rd),ud="[object Map]",sd="[object Set]",cd=/^\[object .+?Constructor\]$/,ld=/^(?:0|[1-9]\d*)$/,fd="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",dd="\\ud83c[\\udffb-\\udfff]",pd="[^\\ud800-\\udfff]",hd="(?:\\ud83c[\\udde6-\\uddff]){2}",gd="[\\ud800-\\udbff][\\udc00-\\udfff]",vd="(?:"+fd+"|"+dd+")?",yd="[\\ufe0e\\ufe0f]?"+vd+"(?:\\u200d(?:"+[pd,hd,gd].join("|")+")[\\ufe0e\\ufe0f]?"+vd+")*",md="(?:"+[pd+fd+"?",fd,hd,gd,"[\\ud800-\\udfff]"].join("|")+")",bd=RegExp(dd+"(?="+dd+")|"+md+yd,"g"),wd=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),Ed="object"==typeof r&&r&&r.Object===Object&&r,Ad="object"==typeof self&&self&&self.Object===Object&&self,Sd=Ed||Ad||Function("return this")();function Cd(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function xd(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}var Dd,Od,kd=Function.prototype,Bd=Object.prototype,Td=Sd["__core-js_shared__"],Fd=function(){var e=/[^.]+$/.exec(Td&&Td.keys&&Td.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),_d=kd.toString,Pd=Bd.hasOwnProperty,jd=Bd.toString,Nd=RegExp("^"+_d.call(Pd).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Rd=Sd.Symbol,Id=Rd?Rd.iterator:void 0,Ld=Bd.propertyIsEnumerable,Md=(Dd=Object.keys,Od=Object,function(e){return Dd(Od(e))}),zd=Xd(Sd,"DataView"),$d=Xd(Sd,"Map"),Hd=Xd(Sd,"Promise"),Ud=Xd(Sd,"Set"),Vd=Xd(Sd,"WeakMap"),qd=Qd(zd),Wd=Qd($d),Gd=Qd(Hd),Kd=Qd(Ud),Yd=Qd(Vd);function Xd(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return function(e){if(!rp(e)||function(e){return!!Fd&&Fd in e}(e))return!1;var t=np(e)||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e)?Nd:cd;return t.test(Qd(e))}(n)?n:void 0}var Jd=function(e){return jd.call(e)};function Zd(e,t){return!!(t=null==t?9007199254740991:t)&&("number"==typeof e||ld.test(e))&&e>-1&&e%1==0&&e<t}function Qd(e){if(null!=e){try{return _d.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(zd&&"[object DataView]"!=Jd(new zd(new ArrayBuffer(1)))||$d&&Jd(new $d)!=ud||Hd&&"[object Promise]"!=Jd(Hd.resolve())||Ud&&Jd(new Ud)!=sd||Vd&&"[object WeakMap]"!=Jd(new Vd))&&(Jd=function(e){var t=jd.call(e),n="[object Object]"==t?e.constructor:void 0,r=n?Qd(n):void 0;if(r)switch(r){case qd:return"[object DataView]";case Wd:return ud;case Gd:return"[object Promise]";case Kd:return sd;case Yd:return"[object WeakMap]"}return t});var ep=Array.isArray;function tp(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}(e.length)&&!np(e)}function np(e){var t=rp(e)?jd.call(e):"";return"[object Function]"==t||"[object GeneratorFunction]"==t}function rp(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function op(e){return!!e&&"object"==typeof e}function ip(e){return e?function(e,t){return function(e,t){for(var n=-1,r=e?e.length:0,o=Array(r);++n<r;)o[n]=t(e[n]);return o}(t,(function(t){return e[t]}))}(e,function(e){return tp(e)?function(e){var t=ep(e)||function(e){return function(e){return op(e)&&tp(e)}(e)&&Pd.call(e,"callee")&&(!Ld.call(e,"callee")||"[object Arguments]"==jd.call(e))}(e)?function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}(e.length,String):[],n=t.length,r=!!n;for(var o in e)!Pd.call(e,o)||r&&("length"==o||Zd(o,n))||t.push(o);return t}(e):function(e){if(n=(t=e)&&t.constructor,t!==("function"==typeof n&&n.prototype||Bd))return Md(e);var t,n,r=[];for(var o in Object(e))Pd.call(e,o)&&"constructor"!=o&&r.push(o);return r}(e)}(e)):[]}var ap=function(e){if(!e)return[];if(tp(e))return function(e){return"string"==typeof e||!ep(e)&&op(e)&&"[object String]"==jd.call(e)}(e)?function(e){return function(e){return wd.test(e)}(e)?function(e){return e.match(bd)||[]}(e):function(e){return e.split("")}(e)}(e):function(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}(e);if(Id&&e[Id])return function(e){for(var t,n=[];!(t=e.next()).done;)n.push(t.value);return n}(e[Id]());var t=Jd(e);return(t==ud?Cd:t==sd?xd:ip)(e)};function up(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function sp(e,t){void 0===e&&(e={}),void 0===t&&(t={}),Object.keys(t).forEach((function(n){void 0===e[n]?e[n]=t[n]:up(t[n])&&up(e[n])&&Object.keys(t[n]).length>0&&sp(e[n],t[n])}))}var cp={body:{},addEventListener:function(){},removeEventListener:function(){},activeElement:{blur:function(){},nodeName:""},querySelector:function(){return null},querySelectorAll:function(){return[]},getElementById:function(){return null},createEvent:function(){return{initEvent:function(){}}},createElement:function(){return{children:[],childNodes:[],style:{},setAttribute:function(){},getElementsByTagName:function(){return[]}}},createElementNS:function(){return{}},importNode:function(){return null},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function lp(){var e="undefined"!=typeof document?document:{};return sp(e,cp),e}var fp={document:cp,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState:function(){},pushState:function(){},go:function(){},back:function(){}},CustomEvent:function(){return this},addEventListener:function(){},removeEventListener:function(){},getComputedStyle:function(){return{getPropertyValue:function(){return""}}},Image:function(){},Date:function(){},screen:{},setTimeout:function(){},clearTimeout:function(){},matchMedia:function(){return{}},requestAnimationFrame:function(e){return"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0)},cancelAnimationFrame:function(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function dp(){var e="undefined"!=typeof window?window:{};return sp(e,fp),e}function pp(e){return pp=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},pp(e)}function hp(e,t){return hp=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},hp(e,t)}function gp(e,t,n){return gp=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&hp(o,n.prototype),o},gp.apply(null,arguments)}function vp(e){var t="function"==typeof Map?new Map:void 0;return vp=function(e){if(null===e||!function(e){return-1!==Function.toString.call(e).indexOf("[native code]")}(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return gp(e,arguments,pp(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),hp(n,e)},vp(e)}var yp=function(e){var t,n;function r(t){var n,r,o;return r=function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(n=e.call.apply(e,[this].concat(t))||this),o=r.__proto__,Object.defineProperty(r,"__proto__",{get:function(){return o},set:function(e){o.__proto__=e}}),n}return n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n,r}(vp(Array));function mp(e){void 0===e&&(e=[]);var t=[];return e.forEach((function(e){Array.isArray(e)?t.push.apply(t,mp(e)):t.push(e)})),t}function bp(e,t){return Array.prototype.filter.call(e,t)}function wp(e,t){var n=dp(),r=lp(),o=[];if(!t&&e instanceof yp)return e;if(!e)return new yp(o);if("string"==typeof e){var i=e.trim();if(i.indexOf("<")>=0&&i.indexOf(">")>=0){var a="div";0===i.indexOf("<li")&&(a="ul"),0===i.indexOf("<tr")&&(a="tbody"),0!==i.indexOf("<td")&&0!==i.indexOf("<th")||(a="tr"),0===i.indexOf("<tbody")&&(a="table"),0===i.indexOf("<option")&&(a="select");var u=r.createElement(a);u.innerHTML=i;for(var s=0;s<u.childNodes.length;s+=1)o.push(u.childNodes[s])}else o=function(e,t){if("string"!=typeof e)return[e];for(var n=[],r=t.querySelectorAll(e),o=0;o<r.length;o+=1)n.push(r[o]);return n}(e.trim(),t||r)}else if(e.nodeType||e===n||e===r)o.push(e);else if(Array.isArray(e)){if(e instanceof yp)return e;o=e}return new yp(function(e){for(var t=[],n=0;n<e.length;n+=1)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(o))}function Ep(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=mp(t.map((function(e){return e.split(" ")})));return this.forEach((function(e){var t;(t=e.classList).add.apply(t,r)})),this}function Ap(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=mp(t.map((function(e){return e.split(" ")})));return this.forEach((function(e){var t;(t=e.classList).remove.apply(t,r)})),this}function Sp(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=mp(t.map((function(e){return e.split(" ")})));return bp(this,(function(e){return r.filter((function(t){return e.classList.contains(t)})).length>0})).length>0}function Cp(e,t){if(1===arguments.length&&"string"==typeof e)return this[0]?this[0].getAttribute(e):void 0;for(var n=0;n<this.length;n+=1)if(2===arguments.length)this[n].setAttribute(e,t);else for(var r in e)this[n][r]=e[r],this[n].setAttribute(r,e[r]);return this}function xp(e){for(var t=0;t<this.length;t+=1)this[t].removeAttribute(e);return this}function Dp(){var e=this[0];if(e){var t,n={};if(e.dataset)for(var r in e.dataset)n[r]=e.dataset[r];else for(var o=0;o<e.attributes.length;o+=1){var i=e.attributes[o];i.name.indexOf("data-")>=0&&(n[(t=i.name.split("data-")[1],t.toLowerCase().replace(/-(.)/g,(function(e,t){return t.toUpperCase()})))]=i.value)}for(var a in n)"false"===n[a]?n[a]=!1:"true"===n[a]?n[a]=!0:parseFloat(n[a])===1*n[a]&&(n[a]*=1);return n}}function Op(e){if(void 0===e){var t=this[0];if(!t)return;if(t.multiple&&"select"===t.nodeName.toLowerCase()){for(var n=[],r=0;r<t.selectedOptions.length;r+=1)n.push(t.selectedOptions[r].value);return n}return t.value}for(var o=0;o<this.length;o+=1){var i=this[o];if(Array.isArray(e)&&i.multiple&&"select"===i.nodeName.toLowerCase())for(var a=0;a<i.options.length;a+=1)i.options[a].selected=e.indexOf(i.options[a].value)>=0;else i.value=e}return this}function kp(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=t[0],o=t[1],i=t[2],a=t[3];function u(e){var t=e.target;if(t){var n=e.target.dom7EventData||[];if(n.indexOf(e)<0&&n.unshift(e),wp(t).is(o))i.apply(t,n);else for(var r=wp(t).parents(),a=0;a<r.length;a+=1)wp(r[a]).is(o)&&i.apply(r[a],n)}}function s(e){var t=e&&e.target&&e.target.dom7EventData||[];t.indexOf(e)<0&&t.unshift(e),i.apply(this,t)}"function"==typeof t[1]&&(r=t[0],i=t[1],a=t[2],o=void 0),a||(a=!1);for(var c,l=r.split(" "),f=0;f<this.length;f+=1){var d=this[f];if(o)for(c=0;c<l.length;c+=1){var p=l[c];d.dom7LiveListeners||(d.dom7LiveListeners={}),d.dom7LiveListeners[p]||(d.dom7LiveListeners[p]=[]),d.dom7LiveListeners[p].push({listener:i,proxyListener:u}),d.addEventListener(p,u,a)}else for(c=0;c<l.length;c+=1){var h=l[c];d.dom7Listeners||(d.dom7Listeners={}),d.dom7Listeners[h]||(d.dom7Listeners[h]=[]),d.dom7Listeners[h].push({listener:i,proxyListener:s}),d.addEventListener(h,s,a)}}return this}function Bp(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];var r=t[0],o=t[1],i=t[2],a=t[3];"function"==typeof t[1]&&(r=t[0],i=t[1],a=t[2],o=void 0),a||(a=!1);for(var u=r.split(" "),s=0;s<u.length;s+=1)for(var c=u[s],l=0;l<this.length;l+=1){var f=this[l],d=void 0;if(!o&&f.dom7Listeners?d=f.dom7Listeners[c]:o&&f.dom7LiveListeners&&(d=f.dom7LiveListeners[c]),d&&d.length)for(var p=d.length-1;p>=0;p-=1){var h=d[p];i&&h.listener===i||i&&h.listener&&h.listener.dom7proxy&&h.listener.dom7proxy===i?(f.removeEventListener(c,h.proxyListener,a),d.splice(p,1)):i||(f.removeEventListener(c,h.proxyListener,a),d.splice(p,1))}}return this}function Tp(){var e=dp();return this[0]===e?e.innerWidth:this.length>0?parseFloat(this.css("width")):null}function Fp(){var e=dp();return this[0]===e?e.innerHeight:this.length>0?parseFloat(this.css("height")):null}function _p(){if(this.length>0){var e=dp(),t=lp(),n=this[0],r=n.getBoundingClientRect(),o=t.body,i=n.clientTop||o.clientTop||0,a=n.clientLeft||o.clientLeft||0,u=n===e?e.scrollY:n.scrollTop,s=n===e?e.scrollX:n.scrollLeft;return{top:r.top+u-i,left:r.left+s-a}}return null}function Pp(){for(var e=0;e<this.length;e+=1)this[e].style.display="none";return this}function jp(){for(var e=dp(),t=0;t<this.length;t+=1){var n=this[t];"none"===n.style.display&&(n.style.display=""),"none"===e.getComputedStyle(n,null).getPropertyValue("display")&&(n.style.display="block")}return this}function Np(e,t){var n,r=dp();if(1===arguments.length){if("string"!=typeof e){for(n=0;n<this.length;n+=1)for(var o in e)this[n].style[o]=e[o];return this}if(this[0])return r.getComputedStyle(this[0],null).getPropertyValue(e)}if(2===arguments.length&&"string"==typeof e){for(n=0;n<this.length;n+=1)this[n].style[e]=t;return this}return this}function Rp(e){return e?(this.forEach((function(t,n){e.apply(t,[t,n])})),this):this}function Ip(e){return wp(bp(this,e))}function Lp(e){if(void 0===e)return this[0]?this[0].innerHTML:null;for(var t=0;t<this.length;t+=1)this[t].innerHTML=e;return this}function Mp(e){if(void 0===e)return this[0]?this[0].textContent.trim():null;for(var t=0;t<this.length;t+=1)this[t].textContent=e;return this}function zp(e){var t,n,r=dp(),o=lp(),i=this[0];if(!i||void 0===e)return!1;if("string"==typeof e){if(i.matches)return i.matches(e);if(i.webkitMatchesSelector)return i.webkitMatchesSelector(e);if(i.msMatchesSelector)return i.msMatchesSelector(e);for(t=wp(e),n=0;n<t.length;n+=1)if(t[n]===i)return!0;return!1}if(e===o)return i===o;if(e===r)return i===r;if(e.nodeType||e instanceof yp){for(t=e.nodeType?[e]:e,n=0;n<t.length;n+=1)if(t[n]===i)return!0;return!1}return!1}function $p(){for(var e,t=lp(),n=0;n<arguments.length;n+=1){e=n<0||arguments.length<=n?void 0:arguments[n];for(var r=0;r<this.length;r+=1)if("string"==typeof e){var o=t.createElement("div");for(o.innerHTML=e;o.firstChild;)this[r].appendChild(o.firstChild)}else if(e instanceof yp)for(var i=0;i<e.length;i+=1)this[r].appendChild(e[i]);else this[r].appendChild(e)}return this}function Hp(e){var t,n,r=lp();for(t=0;t<this.length;t+=1)if("string"==typeof e){var o=r.createElement("div");for(o.innerHTML=e,n=o.childNodes.length-1;n>=0;n-=1)this[t].insertBefore(o.childNodes[n],this[t].childNodes[0])}else if(e instanceof yp)for(n=0;n<e.length;n+=1)this[t].insertBefore(e[n],this[t].childNodes[0]);else this[t].insertBefore(e,this[t].childNodes[0]);return this}function Up(e){for(var t=[],n=0;n<this.length;n+=1)null!==this[n].parentNode&&(e?wp(this[n].parentNode).is(e)&&t.push(this[n].parentNode):t.push(this[n].parentNode));return wp(t)}function Vp(e){for(var t=[],n=0;n<this.length;n+=1)for(var r=this[n].parentNode;r;)e?wp(r).is(e)&&t.push(r):t.push(r),r=r.parentNode;return wp(t)}function qp(e){for(var t=[],n=0;n<this.length;n+=1)for(var r=this[n].querySelectorAll(e),o=0;o<r.length;o+=1)t.push(r[o]);return wp(t)}function Wp(e){for(var t=[],n=0;n<this.length;n+=1)for(var r=this[n].children,o=0;o<r.length;o+=1)e&&!wp(r[o]).is(e)||t.push(r[o]);return wp(t)}function Gp(){for(var e=0;e<this.length;e+=1)this[e].parentNode&&this[e].parentNode.removeChild(this[e]);return this}function Kp(){for(var e=0;e<this.length;e+=1){var t=this[e];if(1===t.nodeType){for(var n=0;n<t.childNodes.length;n+=1)t.childNodes[n].parentNode&&t.childNodes[n].parentNode.removeChild(t.childNodes[n]);t.textContent=""}}return this}wp.fn=yp.prototype;var Yp="resize scroll".split(" ");function Xp(e){return function(){for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];if(void 0===n[0]){for(var o=0;o<this.length;o+=1)Yp.indexOf(e)<0&&(e in this[o]?this[o][e]():wp(this[o]).trigger(e));return this}return this.on.apply(this,[e].concat(n))}}var Jp=Xp("click"),Zp=Xp("focus"),Qp="[object GeneratorFunction]",eh=/^(?:0|[1-9]\d*)$/;function th(e,t){for(var n=-1,r=e?e.length:0;++n<r&&!1!==t(e[n],n,e););return e}var nh,rh=Object.prototype,oh=rh.hasOwnProperty,ih=rh.toString,ah=rh.propertyIsEnumerable,uh=function(e,t){return function(n){return e(t(n))}}(Object.keys,Object),sh=(nh=function(e,t){return e&&ch(e,t,ph)},function(e,t){if(null==e)return e;if(!dh(e))return nh(e,t);for(var n=e.length,r=-1,o=Object(e);++r<n&&!1!==t(o[r],r,o););return e}),ch=function(e,t,n){for(var r=-1,o=Object(e),i=n(e),a=i.length;a--;){var u=i[++r];if(!1===t(o[u],u,o))break}return e};function lh(e,t){return!!(t=null==t?9007199254740991:t)&&("number"==typeof e||eh.test(e))&&e>-1&&e%1==0&&e<t}var fh=Array.isArray;function dh(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=9007199254740991}(e.length)&&!function(e){var t=function(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}(e)?ih.call(e):"";return"[object Function]"==t||t==Qp}(e)}function ph(e){return dh(e)?function(e){var t=fh(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&dh(e)}(e)&&oh.call(e,"callee")&&(!ah.call(e,"callee")||"[object Arguments]"==ih.call(e))}(e)?function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}(e.length,String):[],n=t.length,r=!!n;for(var o in e)!oh.call(e,o)||r&&("length"==o||lh(o,n))||t.push(o);return t}(e):function(e){if(n=(t=e)&&t.constructor,t!==("function"==typeof n&&n.prototype||rh))return uh(e);var t,n,r=[];for(var o in Object(e))oh.call(e,o)&&"constructor"!=o&&r.push(o);return r}(e)}function hh(e){return e}var gh=function(e,t){return(fh(e)?th:sh)(e,"function"==typeof t?t:hh)};let vh=(e=21)=>{let t="",n=crypto.getRandomValues(new Uint8Array(e));for(;e--;){let r=63&n[e];t+=r<36?r.toString(36):r<62?(r-26).toString(36).toUpperCase():r<63?"_":"-"}return t};var yh=/^\s+|\s+$/g,mh=/^[-+]0x[0-9a-f]+$/i,bh=/^0b[01]+$/i,wh=/^0o[0-7]+$/i,Eh=parseInt,Ah="object"==typeof r&&r&&r.Object===Object&&r,Sh="object"==typeof self&&self&&self.Object===Object&&self,Ch=Ah||Sh||Function("return this")(),xh=Object.prototype.toString,Dh=Math.max,Oh=Math.min,kh=function(){return Ch.Date.now()};function Bh(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function Th(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==xh.call(e)}(e))return NaN;if(Bh(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=Bh(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(yh,"");var n=bh.test(e);return n||wh.test(e)?Eh(e.slice(2),n?2:8):mh.test(e)?NaN:+e}var Fh=function(e,t,n){var r=!0,o=!0;if("function"!=typeof e)throw new TypeError("Expected a function");return Bh(n)&&(r="leading"in n?!!n.leading:r,o="trailing"in n?!!n.trailing:o),function(e,t,n){var r,o,i,a,u,s,c=0,l=!1,f=!1,d=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function p(t){var n=r,i=o;return r=o=void 0,c=t,a=e.apply(i,n)}function h(e){var n=e-s;return void 0===s||n>=t||n<0||f&&e-c>=i}function g(){var e=kh();if(h(e))return v(e);u=setTimeout(g,function(e){var n=t-(e-s);return f?Oh(n,i-(e-c)):n}(e))}function v(e){return u=void 0,d&&r?p(e):(r=o=void 0,a)}function y(){var e=kh(),n=h(e);if(r=arguments,o=this,s=e,n){if(void 0===u)return function(e){return c=e,u=setTimeout(g,t),l?p(e):a}(s);if(f)return u=setTimeout(g,t),p(s)}return void 0===u&&(u=setTimeout(g,t)),a}return t=Th(t)||0,Bh(n)&&(l=!!n.leading,i=(f="maxWait"in n)?Dh(Th(n.maxWait)||0,t):i,d="trailing"in n?!!n.trailing:d),y.cancel=function(){void 0!==u&&clearTimeout(u),c=0,r=s=o=u=void 0},y.flush=function(){return void 0===u?a:v(kh())},y}(e,t,{leading:r,maxWait:t,trailing:o})};const _h={createElement:function(e,t){return document.createElement(e,t)},createElementNS:function(e,t,n){return document.createElementNS(e,t,n)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},getTextContent:function(e){return e.textContent},isElement:function(e){return 1===e.nodeType},isText:function(e){return 3===e.nodeType},isComment:function(e){return 8===e.nodeType}};function Ph(e,t,n,r,o){return{sel:e,data:t,children:n,text:r,elm:o,key:void 0===t?void 0:t.key}}const jh=Array.isArray;function Nh(e){return"string"==typeof e||"number"==typeof e||e instanceof String||e instanceof Number}function Rh(e){return void 0===e}function Ih(e){return void 0!==e}const Lh=Ph("",{},[],void 0,void 0);function Mh(e,t){var n,r;const o=e.key===t.key,i=(null===(n=e.data)||void 0===n?void 0:n.is)===(null===(r=t.data)||void 0===r?void 0:r.is);return e.sel===t.sel&&o&&i}function zh(e,t,n){var r;const o={};for(let i=t;i<=n;++i){const t=null===(r=e[i])||void 0===r?void 0:r.key;void 0!==t&&(o[t]=i)}return o}const $h=["create","update","remove","destroy","pre","post"];function Hh(e,t,n){if(e.ns="http://www.w3.org/2000/svg","foreignObject"!==n&&void 0!==t)for(let e=0;e<t.length;++e){const n=t[e].data;void 0!==n&&Hh(n,t[e].children,t[e].sel)}}function Uh(e,t,n){let r,o,i,a={};if(void 0!==n?(null!==t&&(a=t),jh(n)?r=n:Nh(n)?o=n.toString():n&&n.sel&&(r=[n])):null!=t&&(jh(t)?r=t:Nh(t)?o=t.toString():t&&t.sel?r=[t]:a=t),void 0!==r)for(i=0;i<r.length;++i)Nh(r[i])&&(r[i]=Ph(void 0,void 0,void 0,r[i],void 0));return"s"!==e[0]||"v"!==e[1]||"g"!==e[2]||3!==e.length&&"."!==e[3]&&"#"!==e[3]||Hh(a,r,e),Ph(e,a,r,o,void 0)}function Vh(e,t){let n;const r=t.elm;let o=e.data.attrs,i=t.data.attrs;if((o||i)&&o!==i){for(n in o=o||{},i=i||{},i){const e=i[n];o[n]!==e&&(!0===e?r.setAttribute(n,""):!1===e?r.removeAttribute(n):120!==n.charCodeAt(0)?r.setAttribute(n,e):58===n.charCodeAt(3)?r.setAttributeNS("http://www.w3.org/XML/1998/namespace",n,e):58===n.charCodeAt(5)?r.setAttributeNS("http://www.w3.org/1999/xlink",n,e):r.setAttribute(n,e))}for(n in o)n in i||r.removeAttribute(n)}}const qh={create:Vh,update:Vh};function Wh(e,t){let n,r;const o=t.elm;let i=e.data.class,a=t.data.class;if((i||a)&&i!==a){for(r in i=i||{},a=a||{},i)i[r]&&!Object.prototype.hasOwnProperty.call(a,r)&&o.classList.remove(r);for(r in a)n=a[r],n!==i[r]&&o.classList[n?"add":"remove"](r)}}const Gh={create:Wh,update:Wh},Kh=/[A-Z]/g;function Yh(e,t){const n=t.elm;let r,o=e.data.dataset,i=t.data.dataset;if(!o&&!i)return;if(o===i)return;o=o||{},i=i||{};const a=n.dataset;for(r in o)i[r]||(a?r in a&&delete a[r]:n.removeAttribute("data-"+r.replace(Kh,"-$&").toLowerCase()));for(r in i)o[r]!==i[r]&&(a?a[r]=i[r]:n.setAttribute("data-"+r.replace(Kh,"-$&").toLowerCase(),i[r]))}const Xh={create:Yh,update:Yh};function Jh(e,t,n){if("function"==typeof e)e.call(t,n,t);else if("object"==typeof e)for(let r=0;r<e.length;r++)Jh(e[r],t,n)}function Zh(e,t){const n=e.type,r=t.data.on;r&&r[n]&&Jh(r[n],t,e)}function Qh(e,t){const n=e.data.on,r=e.listener,o=e.elm,i=t&&t.data.on,a=t&&t.elm;let u;if(n!==i){if(n&&r)if(i)for(u in n)i[u]||o.removeEventListener(u,r,!1);else for(u in n)o.removeEventListener(u,r,!1);if(i){const r=t.listener=e.listener||function e(t){Zh(t,e.vnode)};if(r.vnode=t,n)for(u in i)n[u]||a.addEventListener(u,r,!1);else for(u in i)a.addEventListener(u,r,!1)}}}const eg={create:Qh,update:Qh,destroy:Qh};function tg(e,t){let n,r,o;const i=t.elm;let a=e.data.props,u=t.data.props;if((a||u)&&a!==u)for(n in a=a||{},u=u||{},u)r=u[n],o=a[n],o===r||"value"===n&&i[n]===r||(i[n]=r)}const ng={create:tg,update:tg},rg="undefined"!=typeof window&&window.requestAnimationFrame.bind(window)||setTimeout;let og=!1;function ig(e,t,n){!function(e){rg((function(){rg(e)}))}((function(){e[t]=n}))}function ag(e,t){let n,r;const o=t.elm;let i=e.data.style,a=t.data.style;if(!i&&!a)return;if(i===a)return;i=i||{},a=a||{};const u="delayed"in i;for(r in i)a[r]||("-"===r[0]&&"-"===r[1]?o.style.removeProperty(r):o.style[r]="");for(r in a)if(n=a[r],"delayed"===r&&a.delayed)for(const e in a.delayed)n=a.delayed[e],u&&n===i.delayed[e]||ig(o.style,e,n);else"remove"!==r&&n!==i[r]&&("-"===r[0]&&"-"===r[1]?o.style.setProperty(r,n):o.style[r]=n)}const ug={pre:function(){og=!1},create:ag,update:ag,destroy:function(e){let t,n;const r=e.elm,o=e.data.style;if(o&&(t=o.destroy))for(n in t)r.style[n]=t[n]},remove:function(e,t){const n=e.data.style;if(!n||!n.remove)return void t();let r;og||(e.elm.offsetLeft,og=!0);const o=e.elm;let i=0;const a=n.remove;let u=0;const s=[];for(r in a)s.push(r),o.style[r]=a[r];const c=getComputedStyle(o)["transition-property"].split(", ");for(;i<c.length;++i)-1!==s.indexOf(c[i])&&u++;o.addEventListener("transitionend",(function(e){e.target===o&&--u,0===u&&t()}))}};function sg(e,t){for(const n of e)null!=n&&!1!==n&&""!==n&&(Array.isArray(n)?sg(n,t):"string"==typeof n||"number"==typeof n||"boolean"==typeof n?t.push(Ph(void 0,void 0,void 0,String(n),void 0)):t.push(n));return t}function cg(e,t,...n){const r=sg(n,[]);return"function"==typeof e?e(t,r):1===r.length&&!r[0].sel&&r[0].text?Uh(e,t,r[0].text):Uh(e,t,r)}cg||(cg={});var lg,fg=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,dg=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,pg="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",hg="["+pg+"]",gg="[\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0]",vg="\\d+",yg="[a-z\\xdf-\\xf6\\xf8-\\xff]",mg="[^\\ud800-\\udfff"+pg+vg+"\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde]",bg="\\ud83c[\\udffb-\\udfff]",wg="[^\\ud800-\\udfff]",Eg="(?:\\ud83c[\\udde6-\\uddff]){2}",Ag="[\\ud800-\\udbff][\\udc00-\\udfff]",Sg="[A-Z\\xc0-\\xd6\\xd8-\\xde]",Cg="(?:"+yg+"|"+mg+")",xg="(?:"+Sg+"|"+mg+")",Dg="(?:"+gg+"|"+bg+")?",Og="[\\ufe0e\\ufe0f]?"+Dg+"(?:\\u200d(?:"+[wg,Eg,Ag].join("|")+")[\\ufe0e\\ufe0f]?"+Dg+")*",kg="(?:"+["[\\u2700-\\u27bf]",Eg,Ag].join("|")+")"+Og,Bg="(?:"+[wg+gg+"?",gg,Eg,Ag,"[\\ud800-\\udfff]"].join("|")+")",Tg=RegExp("['â]","g"),Fg=RegExp(gg,"g"),_g=RegExp(bg+"(?="+bg+")|"+Bg+Og,"g"),Pg=RegExp([Sg+"?"+yg+"+(?:['â](?:d|ll|m|re|s|t|ve))?(?="+[hg,Sg,"$"].join("|")+")",xg+"+(?:['â](?:D|LL|M|RE|S|T|VE))?(?="+[hg,Sg+Cg,"$"].join("|")+")",Sg+"?"+Cg+"+(?:['â](?:d|ll|m|re|s|t|ve))?",Sg+"+(?:['â](?:D|LL|M|RE|S|T|VE))?",vg,kg].join("|"),"g"),jg=RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ufe0e\\ufe0f]"),Ng=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Rg="object"==typeof r&&r&&r.Object===Object&&r,Ig="object"==typeof self&&self&&self.Object===Object&&self,Lg=Rg||Ig||Function("return this")(),Mg=(lg={Ã:"A",Ã:"A",Ã:"A",Ã:"A",Ã:"A",Ã:"A",Ã :"a",Ã¡:"a",Ã¢:"a",Ã£:"a",Ã¤:"a",Ã¥:"a",Ã:"C",Ã§:"c",Ã:"D",Ã°:"d",Ã:"E",Ã:"E",Ã:"E",Ã:"E",Ã¨:"e",Ã©:"e",Ãª:"e",Ã«:"e",Ã:"I",Ã:"I",Ã:"I",Ã:"I",Ã¬:"i",Ã­:"i",Ã®:"i",Ã¯:"i",Ã:"N",Ã±:"n",Ã:"O",Ã:"O",Ã:"O",Ã:"O",Ã:"O",Ã:"O",Ã²:"o",Ã³:"o",Ã´:"o",Ãµ:"o",Ã¶:"o",Ã¸:"o",Ã:"U",Ã:"U",Ã:"U",Ã:"U",Ã¹:"u",Ãº:"u",Ã»:"u",Ã¼:"u",Ã:"Y",Ã½:"y",Ã¿:"y",Ã:"Ae",Ã¦:"ae",Ã:"Th",Ã¾:"th",Ã:"ss",Ä:"A",Ä:"A",Ä:"A",Ä:"a",Ä:"a",Ä:"a",Ä:"C",Ä:"C",Ä:"C",Ä:"C",Ä:"c",Ä:"c",Ä:"c",Ä:"c",Ä:"D",Ä:"D",Ä:"d",Ä:"d",Ä:"E",Ä:"E",Ä:"E",Ä:"E",Ä:"E",Ä:"e",Ä:"e",Ä:"e",Ä:"e",Ä:"e",Ä:"G",Ä:"G",Ä :"G",Ä¢:"G",Ä:"g",Ä:"g",Ä¡:"g",Ä£:"g",Ä¤:"H",Ä¦:"H",Ä¥:"h",Ä§:"h",Ä¨:"I",Äª:"I",Ä¬:"I",Ä®:"I",Ä°:"I",Ä©:"i",Ä«:"i",Ä­:"i",Ä¯:"i",Ä±:"i",Ä´:"J",Äµ:"j",Ä¶:"K",Ä·:"k",Ä¸:"k",Ä¹:"L",Ä»:"L",Ä½:"L",Ä¿:"L",Å:"L",Äº:"l",Ä¼:"l",Ä¾:"l",Å:"l",Å:"l",Å:"N",Å:"N",Å:"N",Å:"N",Å:"n",Å:"n",Å:"n",Å:"n",Å:"O",Å:"O",Å:"O",Å:"o",Å:"o",Å:"o",Å:"R",Å:"R",Å:"R",Å:"r",Å:"r",Å:"r",Å:"S",Å:"S",Å:"S",Å :"S",Å:"s",Å:"s",Å:"s",Å¡:"s",Å¢:"T",Å¤:"T",Å¦:"T",Å£:"t",Å¥:"t",Å§:"t",Å¨:"U",Åª:"U",Å¬:"U",Å®:"U",Å°:"U",Å²:"U",Å©:"u",Å«:"u",Å­:"u",Å¯:"u",Å±:"u",Å³:"u",Å´:"W",Åµ:"w",Å¶:"Y",Å·:"y",Å¸:"Y",Å¹:"Z",Å»:"Z",Å½:"Z",Åº:"z",Å¼:"z",Å¾:"z",Ä²:"IJ",Ä³:"ij",Å:"Oe",Å:"oe",Å:"'n",Å¿:"ss"},function(e){return null==lg?void 0:lg[e]});function zg(e){return jg.test(e)}var $g=Object.prototype.toString,Hg=Lg.Symbol,Ug=Hg?Hg.prototype:void 0,Vg=Ug?Ug.toString:void 0;function qg(e){return null==e?"":function(e){if("string"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==$g.call(e)}(e))return Vg?Vg.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}(e)}for(var Wg,Gg=(Wg=function(e,t,n){return t=t.toLowerCase(),e+(n?Kg(qg(t).toLowerCase()):t)},function(e){return function(e,t,n){for(var r=-1,o=e?e.length:0;++r<o;)n=t(n,e[r],r,e);return n}(function(e){return function(e){return Ng.test(e)}(e=qg(e))?function(e){return e.match(Pg)||[]}(e):function(e){return e.match(fg)||[]}(e)}(function(e){return(e=qg(e))&&e.replace(dg,Mg).replace(Fg,"")}(e).replace(Tg,"")),Wg,"")}),Kg=function(e){var t=zg(e=qg(e))?function(e){return zg(e)?function(e){return e.match(_g)||[]}(e):function(e){return e.split("")}(e)}(e):void 0,n=t?t[0]:e.charAt(0),r=t?function(e,t,n){var r=e.length;return function(e,t,n){var r=-1,o=e.length;t<0&&(t=-t>o?0:o+t),(n=n>o?o:n)<0&&(n+=o),o=t>n?0:n-t>>>0,t>>>=0;for(var i=Array(o);++r<o;)i[r]=e[r+t];return i}(e,1,n=void 0===n?r:n)}(t).join(""):e.slice(1);return n.toUpperCase()+r},Yg=Gg,Xg="undefined"!=typeof window&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform),Jg={alt:"altKey",control:"ctrlKey",meta:"metaKey",shift:"shiftKey"},Zg={add:"+",break:"pause",cmd:"meta",command:"meta",ctl:"control",ctrl:"control",del:"delete",down:"arrowdown",esc:"escape",ins:"insert",left:"arrowleft",mod:Xg?"meta":"control",opt:"alt",option:"alt",return:"enter",right:"arrowright",space:" ",spacebar:" ",up:"arrowup",win:"meta",windows:"meta"},Qg={backspace:8,tab:9,enter:13,shift:16,control:17,alt:18,pause:19,capslock:20,escape:27," ":32,pageup:33,pagedown:34,end:35,home:36,arrowleft:37,arrowup:38,arrowright:39,arrowdown:40,insert:45,delete:46,meta:91,numlock:144,scrolllock:145,";":186,"=":187,",":188,"-":189,".":190,"/":191,"`":192,"[":219,"\\":220,"]":221,"'":222},ev=1;ev<20;ev++)Qg["f"+ev]=111+ev;function tv(e,t,n){t&&!("byKey"in t)&&(n=t,t=null),Array.isArray(e)||(e=[e]);var r=e.map((function(e){return function(e,t){var n=t&&t.byKey,r={},o=(e=e.replace("++","+add")).split("+"),i=o.length;for(var a in Jg)r[Jg[a]]=!1;var u=!0,s=!1,c=void 0;try{for(var l,f=o[Symbol.iterator]();!(u=(l=f.next()).done);u=!0){var d=l.value,p=d.endsWith("?")&&d.length>1;p&&(d=d.slice(0,-1));var h=rv(d),g=Jg[h];if(d.length>1&&!g&&!Zg[d]&&!Qg[h])throw new TypeError('Unknown modifier: "'+d+'"');1!==i&&g||(n?r.key=h:r.which=nv(d)),g&&(r[g]=!p||null)}}catch(e){s=!0,c=e}finally{try{!u&&f.return&&f.return()}finally{if(s)throw c}}return r}(e,t)})),o=function(e){return r.some((function(t){return function(e,t){for(var n in e){var r=e[n],o=void 0;if(null!=r&&(null!=(o="key"===n&&null!=t.key?t.key.toLowerCase():"which"===n?91===r&&93===t.which?91:t.which:t[n])||!1!==r)&&o!==r)return!1}return!0}(t,e)}))};return null==n?o:o(n)}function nv(e){return e=rv(e),Qg[e]||e.toUpperCase().charCodeAt(0)}function rv(e){return e=e.toLowerCase(),Zg[e]||e}var ov=tv,iv=function(e,t){return tv(e,{byKey:!0},t)},av=/^\s+|\s+$/g,uv=/^[-+]0x[0-9a-f]+$/i,sv=/^0b[01]+$/i,cv=/^0o[0-7]+$/i,lv=parseInt,fv="object"==typeof r&&r&&r.Object===Object&&r,dv="object"==typeof self&&self&&self.Object===Object&&self,pv=fv||dv||Function("return this")(),hv=Object.prototype.toString,gv=Math.max,vv=Math.min,yv=function(){return pv.Date.now()};function mv(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function bv(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==hv.call(e)}(e))return NaN;if(mv(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=mv(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(av,"");var n=sv.test(e);return n||cv.test(e)?lv(e.slice(2),n?2:8):uv.test(e)?NaN:+e}var wv,Ev=function(e,t,n){var r,o,i,a,u,s,c=0,l=!1,f=!1,d=!0;if("function"!=typeof e)throw new TypeError("Expected a function");function p(t){var n=r,i=o;return r=o=void 0,c=t,a=e.apply(i,n)}function h(e){var n=e-s;return void 0===s||n>=t||n<0||f&&e-c>=i}function g(){var e=yv();if(h(e))return v(e);u=setTimeout(g,function(e){var n=t-(e-s);return f?vv(n,i-(e-c)):n}(e))}function v(e){return u=void 0,d&&r?p(e):(r=o=void 0,a)}function y(){var e=yv(),n=h(e);if(r=arguments,o=this,s=e,n){if(void 0===u)return function(e){return c=e,u=setTimeout(g,t),l?p(e):a}(s);if(f)return u=setTimeout(g,t),p(s)}return void 0===u&&(u=setTimeout(g,t)),a}return t=bv(t)||0,mv(n)&&(l=!!n.leading,i=(f="maxWait"in n)?gv(bv(n.maxWait)||0,t):i,d="trailing"in n?!!n.trailing:d),y.cancel=function(){void 0!==u&&clearTimeout(u),c=0,r=s=o=u=void 0},y.flush=function(){return void 0===u?a:v(yv())},y},Av=o((function(e,t){var n="__lodash_hash_undefined__",o=9007199254740991,i="[object Arguments]",a="[object Boolean]",u="[object Date]",s="[object Function]",c="[object GeneratorFunction]",l="[object Map]",f="[object Number]",d="[object Object]",p="[object Promise]",h="[object RegExp]",g="[object Set]",v="[object String]",y="[object Symbol]",m="[object WeakMap]",b="[object ArrayBuffer]",w="[object DataView]",E="[object Float32Array]",A="[object Float64Array]",S="[object Int8Array]",C="[object Int16Array]",x="[object Int32Array]",D="[object Uint8Array]",O="[object Uint8ClampedArray]",k="[object Uint16Array]",B="[object Uint32Array]",T=/\w*$/,F=/^\[object .+?Constructor\]$/,_=/^(?:0|[1-9]\d*)$/,P={};P[i]=P["[object Array]"]=P[b]=P[w]=P[a]=P[u]=P[E]=P[A]=P[S]=P[C]=P[x]=P[l]=P[f]=P[d]=P[h]=P[g]=P[v]=P[y]=P[D]=P[O]=P[k]=P[B]=!0,P["[object Error]"]=P[s]=P[m]=!1;var j="object"==typeof r&&r&&r.Object===Object&&r,N="object"==typeof self&&self&&self.Object===Object&&self,R=j||N||Function("return this")(),I=t&&!t.nodeType&&t,L=I&&e&&!e.nodeType&&e,M=L&&L.exports===I;function z(e,t){return e.set(t[0],t[1]),e}function $(e,t){return e.add(t),e}function H(e,t,n,r){var o=-1,i=e?e.length:0;for(r&&i&&(n=e[++o]);++o<i;)n=t(n,e[o],o,e);return n}function U(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}function V(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function q(e,t){return function(n){return e(t(n))}}function W(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}var G=Array.prototype,K=Function.prototype,Y=Object.prototype,X=R["__core-js_shared__"],J=function(){var e=/[^.]+$/.exec(X&&X.keys&&X.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),Z=K.toString,Q=Y.hasOwnProperty,ee=Y.toString,te=RegExp("^"+Z.call(Q).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),ne=M?R.Buffer:void 0,re=R.Symbol,oe=R.Uint8Array,ie=q(Object.getPrototypeOf,Object),ae=Object.create,ue=Y.propertyIsEnumerable,se=G.splice,ce=Object.getOwnPropertySymbols,le=ne?ne.isBuffer:void 0,fe=q(Object.keys,Object),de=Ne(R,"DataView"),pe=Ne(R,"Map"),he=Ne(R,"Promise"),ge=Ne(R,"Set"),ve=Ne(R,"WeakMap"),ye=Ne(Object,"create"),me=ze(de),be=ze(pe),we=ze(he),Ee=ze(ge),Ae=ze(ve),Se=re?re.prototype:void 0,Ce=Se?Se.valueOf:void 0;function xe(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function De(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function Oe(e){var t=-1,n=e?e.length:0;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function ke(e){this.__data__=new De(e)}function Be(e,t,n){var r=e[t];Q.call(e,t)&&$e(r,n)&&(void 0!==n||t in e)||(e[t]=n)}function Te(e,t){for(var n=e.length;n--;)if($e(e[n][0],t))return n;return-1}function Fe(e,t,n,r,o,p,m){var F;if(r&&(F=p?r(e,o,p,m):r(e)),void 0!==F)return F;if(!We(e))return e;var _=He(e);if(_){if(F=function(e){var t=e.length,n=e.constructor(t);return t&&"string"==typeof e[0]&&Q.call(e,"index")&&(n.index=e.index,n.input=e.input),n}(e),!t)return function(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}(e,F)}else{var j=Ie(e),N=j==s||j==c;if(Ve(e))return function(e,t){if(t)return e.slice();var n=new e.constructor(e.length);return e.copy(n),n}(e,t);if(j==d||j==i||N&&!p){if(U(e))return p?e:{};if(F=function(e){return"function"!=typeof e.constructor||Me(e)?{}:We(t=ie(e))?ae(t):{};var t}(N?{}:e),!t)return function(e,t){return Pe(e,Re(e),t)}(e,function(e,t){return e&&Pe(t,Ge(t),e)}(F,e))}else{if(!P[j])return p?e:{};F=function(e,t,n,r){var o=e.constructor;switch(t){case b:return _e(e);case a:case u:return new o(+e);case w:return function(e,t){var n=t?_e(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.byteLength)}(e,r);case E:case A:case S:case C:case x:case D:case O:case k:case B:return function(e,t){var n=t?_e(e.buffer):e.buffer;return new e.constructor(n,e.byteOffset,e.length)}(e,r);case l:return function(e,t,n){return H(t?n(V(e),!0):V(e),z,new e.constructor)}(e,r,n);case f:case v:return new o(e);case h:return function(e){var t=new e.constructor(e.source,T.exec(e));return t.lastIndex=e.lastIndex,t}(e);case g:return function(e,t,n){return H(t?n(W(e),!0):W(e),$,new e.constructor)}(e,r,n);case y:return function(e){return Ce?Object(Ce.call(e)):{}}(e)}}(e,j,Fe,t)}}m||(m=new ke);var R=m.get(e);if(R)return R;if(m.set(e,F),!_)var I=n?function(e){return function(e,t,n){var r=t(e);return He(e)?r:function(e,t){for(var n=-1,r=t.length,o=e.length;++n<r;)e[o+n]=t[n];return e}(r,n(e))}(e,Ge,Re)}(e):Ge(e);return function(e,t){for(var n=-1,r=e?e.length:0;++n<r&&!1!==t(e[n],n););}(I||e,(function(o,i){I&&(o=e[i=o]),Be(F,i,Fe(o,t,n,r,i,e,m))})),F}function _e(e){var t=new e.constructor(e.byteLength);return new oe(t).set(new oe(e)),t}function Pe(e,t,n,r){n||(n={});for(var o=-1,i=t.length;++o<i;){var a=t[o],u=r?r(n[a],e[a],a,n,e):void 0;Be(n,a,void 0===u?e[a]:u)}return n}function je(e,t){var n,r,o=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?o["string"==typeof t?"string":"hash"]:o.map}function Ne(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return function(e){return!(!We(e)||function(e){return!!J&&J in e}(e))&&(qe(e)||U(e)?te:F).test(ze(e))}(n)?n:void 0}xe.prototype.clear=function(){this.__data__=ye?ye(null):{}},xe.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},xe.prototype.get=function(e){var t=this.__data__;if(ye){var r=t[e];return r===n?void 0:r}return Q.call(t,e)?t[e]:void 0},xe.prototype.has=function(e){var t=this.__data__;return ye?void 0!==t[e]:Q.call(t,e)},xe.prototype.set=function(e,t){return this.__data__[e]=ye&&void 0===t?n:t,this},De.prototype.clear=function(){this.__data__=[]},De.prototype.delete=function(e){var t=this.__data__,n=Te(t,e);return!(n<0||(n==t.length-1?t.pop():se.call(t,n,1),0))},De.prototype.get=function(e){var t=this.__data__,n=Te(t,e);return n<0?void 0:t[n][1]},De.prototype.has=function(e){return Te(this.__data__,e)>-1},De.prototype.set=function(e,t){var n=this.__data__,r=Te(n,e);return r<0?n.push([e,t]):n[r][1]=t,this},Oe.prototype.clear=function(){this.__data__={hash:new xe,map:new(pe||De),string:new xe}},Oe.prototype.delete=function(e){return je(this,e).delete(e)},Oe.prototype.get=function(e){return je(this,e).get(e)},Oe.prototype.has=function(e){return je(this,e).has(e)},Oe.prototype.set=function(e,t){return je(this,e).set(e,t),this},ke.prototype.clear=function(){this.__data__=new De},ke.prototype.delete=function(e){return this.__data__.delete(e)},ke.prototype.get=function(e){return this.__data__.get(e)},ke.prototype.has=function(e){return this.__data__.has(e)},ke.prototype.set=function(e,t){var n=this.__data__;if(n instanceof De){var r=n.__data__;if(!pe||r.length<199)return r.push([e,t]),this;n=this.__data__=new Oe(r)}return n.set(e,t),this};var Re=ce?q(ce,Object):function(){return[]},Ie=function(e){return ee.call(e)};function Le(e,t){return!!(t=null==t?o:t)&&("number"==typeof e||_.test(e))&&e>-1&&e%1==0&&e<t}function Me(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||Y)}function ze(e){if(null!=e){try{return Z.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function $e(e,t){return e===t||e!=e&&t!=t}(de&&Ie(new de(new ArrayBuffer(1)))!=w||pe&&Ie(new pe)!=l||he&&Ie(he.resolve())!=p||ge&&Ie(new ge)!=g||ve&&Ie(new ve)!=m)&&(Ie=function(e){var t=ee.call(e),n=t==d?e.constructor:void 0,r=n?ze(n):void 0;if(r)switch(r){case me:return w;case be:return l;case we:return p;case Ee:return g;case Ae:return m}return t});var He=Array.isArray;function Ue(e){return null!=e&&function(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=o}(e.length)&&!qe(e)}var Ve=le||function(){return!1};function qe(e){var t=We(e)?ee.call(e):"";return t==s||t==c}function We(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function Ge(e){return Ue(e)?function(e){var t=He(e)||function(e){return function(e){return function(e){return!!e&&"object"==typeof e}(e)&&Ue(e)}(e)&&Q.call(e,"callee")&&(!ue.call(e,"callee")||ee.call(e)==i)}(e)?function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}(e.length,String):[],n=t.length,r=!!n;for(var o in e)!Q.call(e,o)||r&&("length"==o||Le(o,n))||t.push(o);return t}(e):function(e){if(!Me(e))return fe(e);var t=[];for(var n in Object(e))Q.call(e,n)&&"constructor"!=n&&t.push(n);return t}(e)}e.exports=function(e){return Fe(e,!0,!0)}}));function Sv(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var Cv=0;function xv(e,t,n){const r=[];return e.forEach((e=>"string"!=typeof e?r.push(e):t[Symbol.split](e).forEach(((e,t,o)=>{""!==e&&r.push(e),t<o.length-1&&r.push(n)})))),r}function Dv(e,t){const n=/\$/g;let r=[e];if(null==t)return r;for(const e of Object.keys(t))if("_"!==e){let o=t[e];"string"==typeof o&&(o=n[Symbol.replace](o,"$$$$")),r=xv(r,new RegExp(`%\\{${e}\\}`,"g"),o)}return r}var Ov=(wv="__private_"+Cv+++"_apply",class{constructor(e){Object.defineProperty(this,wv,{value:kv}),this.locale={strings:{},pluralize:e=>1===e?0:1},Array.isArray(e)?e.forEach(Sv(this,wv)[wv],this):Sv(this,wv)[wv](e)}translate(e,t){return this.translateArray(e,t).join("")}translateArray(e,t){if(!function(e,t){return Object.prototype.hasOwnProperty.call(e,t)}(this.locale.strings,e))throw new Error(`missing string: ${e}`);const n=this.locale.strings[e];if("object"==typeof n){if(t&&void 0!==t.smart_count)return Dv(n[this.locale.pluralize(t.smart_count)],t);throw new Error("Attempted to use a string with plural forms, but no value was given for %{smart_count}")}return Dv(n,t)}});function kv(e){if(null==e||!e.strings)return;const t=this.locale;this.locale={...t,strings:{...t.strings,...e.strings}},this.locale.pluralize=e.pluralize||t.pluralize}var Bv=function(){var e={},t=e._fns={};return e.emit=function(e,n,r,o,i,a,u){var s=function(e){for(var n=t[e]?t[e]:[],r=e.indexOf(":"),o=-1===r?[e]:[e.substring(0,r),e.substring(r+1)],i=Object.keys(t),a=0,u=i.length;a<u;a++){var s=i[a];if("*"===s&&(n=n.concat(t[s])),2===o.length&&o[0]===s){n=n.concat(t[s]);break}}return n}(e);s.length&&function(e,t,n){for(var r=0,o=t.length;r<o&&t[r];r++)t[r].event=e,t[r].apply(t[r],n)}(e,s,[n,r,o,i,a,u])},e.on=function(e,n){t[e]||(t[e]=[]),t[e].push(n)},e.once=function(t,n){this.on(t,(function r(){n.apply(this,arguments),e.off(t,r)}))},e.off=function(e,t){var n=[];if(e&&t)for(var r=this._fns[e],o=0,i=r?r.length:0;o<i;o++)r[o]!==t&&n.push(r[o]);n.length?this._fns[e]=n:delete this._fns[e]},e};let{urlAlphabet:Tv}={urlAlphabet:"useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict"},Fv=e=>crypto.getRandomValues(new Uint8Array(e)),_v=(e,t,n)=>{let r=(2<<Math.log(e.length-1)/Math.LN2)-1,o=-~(1.6*r*t/e.length);return()=>{let i="";for(;;){let a=n(o),u=o;for(;u--;)if(i+=e[a[u]&r]||"",i.length===t)return i}}};var Pv={nanoid:(e=21)=>{let t="",n=crypto.getRandomValues(new Uint8Array(e));for(;e--;){let r=63&n[e];t+=r<36?r.toString(36):r<62?(r-26).toString(36).toUpperCase():r<63?"_":"-"}return t},customAlphabet:(e,t)=>_v(e,t,Fv),customRandom:_v,urlAlphabet:Tv,random:Fv},jv=function(e){if("number"!=typeof e||isNaN(e))throw new TypeError("Expected a number, got "+typeof e);var t=e<0,n=["B","KB","MB","GB","TB","PB","EB","ZB","YB"];if(t&&(e=-e),e<1)return(t?"-":"")+e+" B";var r=Math.min(Math.floor(Math.log(e)/Math.log(1024)),n.length-1);e=Number(e/Math.pow(1024,r));var o=n[r];return e>=10||e%1==0?(t?"-":"")+e.toFixed(0)+" "+o:(t?"-":"")+e.toFixed(1)+" "+o};function Nv(e,t){this.text=e=e||"",this.hasWild=~e.indexOf("*"),this.separator=t,this.parts=e.split(t)}Nv.prototype.match=function(e){var t,n,r=!0,o=this.parts,i=o.length;if("string"==typeof e||e instanceof String)if(this.hasWild||this.text==e){for(n=(e||"").split(this.separator),t=0;r&&t<i;t++)"*"!==o[t]&&(r=t<n.length&&o[t]===n[t]);r=r&&n}else r=!1;else if("function"==typeof e.splice)for(r=[],t=e.length;t--;)this.match(e[t])&&(r[r.length]=e[t]);else if("object"==typeof e)for(var a in r={},e)this.match(a)&&(r[a]=e[a]);return r};var Rv=/[\/\+\.]/,Iv=0,Lv="__private_"+Iv+++"_publish";class Mv{constructor(){Object.defineProperty(this,Lv,{value:zv}),this.state={},this.callbacks=[]}getState(){return this.state}setState(e){const t={...this.state},n={...this.state,...e};this.state=n,function(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}(this,Lv)[Lv](t,n,e)}subscribe(e){return this.callbacks.push(e),()=>{this.callbacks.splice(this.callbacks.indexOf(e),1)}}}function zv(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];this.callbacks.forEach((e=>{e(...t)}))}Mv.VERSION="2.0.3";var $v=function(e){const t=e.lastIndexOf(".");return-1===t||t===e.length-1?{name:e,extension:void 0}:{name:e.slice(0,t),extension:e.slice(t+1)}},Hv={md:"text/markdown",markdown:"text/markdown",mp4:"video/mp4",mp3:"audio/mp3",svg:"image/svg+xml",jpg:"image/jpeg",png:"image/png",gif:"image/gif",heic:"image/heic",heif:"image/heif",yaml:"text/yaml",yml:"text/yaml",csv:"text/csv",tsv:"text/tab-separated-values",tab:"text/tab-separated-values",avi:"video/x-msvideo",mks:"video/x-matroska",mkv:"video/x-matroska",mov:"video/quicktime",doc:"application/msword",docm:"application/vnd.ms-word.document.macroenabled.12",docx:"application/vnd.openxmlformats-officedocument.wordprocessingml.document",dot:"application/msword",dotm:"application/vnd.ms-word.template.macroenabled.12",dotx:"application/vnd.openxmlformats-officedocument.wordprocessingml.template",xla:"application/vnd.ms-excel",xlam:"application/vnd.ms-excel.addin.macroenabled.12",xlc:"application/vnd.ms-excel",xlf:"application/x-xliff+xml",xlm:"application/vnd.ms-excel",xls:"application/vnd.ms-excel",xlsb:"application/vnd.ms-excel.sheet.binary.macroenabled.12",xlsm:"application/vnd.ms-excel.sheet.macroenabled.12",xlsx:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",xlt:"application/vnd.ms-excel",xltm:"application/vnd.ms-excel.template.macroenabled.12",xltx:"application/vnd.openxmlformats-officedocument.spreadsheetml.template",xlw:"application/vnd.ms-excel",txt:"text/plain",text:"text/plain",conf:"text/plain",log:"text/plain",pdf:"application/pdf",zip:"application/zip","7z":"application/x-7z-compressed",rar:"application/x-rar-compressed",tar:"application/x-tar",gz:"application/gzip",dmg:"application/x-apple-diskimage"};function Uv(e){let t="";return e.replace(/[^A-Z0-9]/gi,(e=>(t+=`-${function(e){return e.charCodeAt(0).toString(32)}(e)}`,"/")))+t}var Vv=function(e){if(null==e&&(e="undefined"!=typeof navigator?navigator.userAgent:null),!e)return!0;const t=/Edge\/(\d+\.\d+)/.exec(e);if(!t)return!0;const n=t[1];let[r,o]=n.split(".");return r=parseInt(r,10),o=parseInt(o,10),r<15||15===r&&o<15063||r>18||18===r&&o>=18218};function qv(e){return e<10?`0${e}`:e.toString()}var Wv=function(){const e=new Date;return`${qv(e.getHours())}:${qv(e.getMinutes())}:${qv(e.getSeconds())}`},Gv={justErrorsLogger:{debug:()=>{},warn:()=>{},error:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return console.error(`[Uppy] [${Wv()}]`,...t)}},debugLogger:{debug:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return console.debug(`[Uppy] [${Wv()}]`,...t)},warn:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return console.warn(`[Uppy] [${Wv()}]`,...t)},error:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return console.error(`[Uppy] [${Wv()}]`,...t)}}},Kv={strings:{addBulkFilesFailed:{0:"Failed to add %{smart_count} file due to an internal error",1:"Failed to add %{smart_count} files due to internal errors"},youCanOnlyUploadX:{0:"You can only upload %{smart_count} file",1:"You can only upload %{smart_count} files"},youHaveToAtLeastSelectX:{0:"You have to select at least %{smart_count} file",1:"You have to select at least %{smart_count} files"},exceedsSize:"%{file} exceeds maximum allowed size of %{size}",missingRequiredMetaField:"Missing required meta fields",missingRequiredMetaFieldOnFile:"Missing required meta fields in %{fileName}",inferiorSize:"This file is smaller than the allowed size of %{size}",youCanOnlyUploadFileTypes:"You can only upload: %{types}",noMoreFilesAllowed:"Cannot add more files",noDuplicates:"Cannot add the duplicate file '%{fileName}', it already exists",companionError:"Connection with Companion failed",authAborted:"Authentication aborted",companionUnauthorizeHint:"To unauthorize to your %{provider} account, please go to %{url}",failedToUpload:"Failed to upload %{file}",noInternetConnection:"No Internet connection",connectedToInternet:"Connected to the Internet",noFilesFound:"You have no files or folders here",selectX:{0:"Select %{smart_count}",1:"Select %{smart_count}"},allFilesFromFolderNamed:"All files from folder %{name}",openFolderNamed:"Open folder %{name}",cancel:"Cancel",logOut:"Log out",filter:"Filter",resetFilter:"Reset filter",loading:"Loading...",authenticateWithTitle:"Please authenticate with %{pluginName} to select files",authenticateWith:"Connect to %{pluginName}",signInWithGoogle:"Sign in with Google",searchImages:"Search for images",enterTextToSearch:"Enter text to search for images",backToSearch:"Back to Search",emptyFolderAdded:"No files were added from empty folder",folderAlreadyAdded:'The folder "%{folder}" was already added',folderAdded:{0:"Added %{smart_count} file from %{folder}",1:"Added %{smart_count} files from %{folder}"}}},Yv=Pv;let Xv,Jv;function Zv(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var Qv=0;function ey(e){return"__private_"+Qv+++"_"+e}const{nanoid:ty}=Yv,{justErrorsLogger:ny,debugLogger:ry}=Gv;class oy extends Error{constructor(){super(...arguments),this.isRestriction=!0}}"undefined"==typeof AggregateError&&(globalThis.AggregateError=class extends Error{constructor(e,t){super(t),this.errors=e}});class iy extends AggregateError{constructor(){super(...arguments),this.isRestriction=!0}}var ay=ey("plugins"),uy=ey("storeUnsubscribe"),sy=ey("emitter"),cy=ey("preProcessors"),ly=ey("uploaders"),fy=ey("postProcessors"),dy=ey("checkRestrictions"),py=ey("checkMinNumberOfFiles"),hy=ey("checkRequiredMetaFieldsOnFile"),gy=ey("checkRequiredMetaFields"),vy=ey("showOrLogErrorAndThrow"),yy=ey("assertNewUploadAllowed"),my=ey("checkAndCreateFileStateObject"),by=ey("startIfAutoProceed"),wy=ey("addListeners"),Ey=ey("updateOnlineStatus"),Ay=ey("createUpload"),Sy=ey("getUpload"),Cy=ey("removeUpload"),xy=ey("runUpload");Xv=Symbol.for("uppy test: getPlugins"),Jv=Symbol.for("uppy test: createUpload");class Dy{constructor(e){Object.defineProperty(this,xy,{value:My}),Object.defineProperty(this,Cy,{value:Ly}),Object.defineProperty(this,Sy,{value:Iy}),Object.defineProperty(this,Ay,{value:Ry}),Object.defineProperty(this,wy,{value:Ny}),Object.defineProperty(this,by,{value:jy}),Object.defineProperty(this,my,{value:Py}),Object.defineProperty(this,yy,{value:_y}),Object.defineProperty(this,vy,{value:Fy}),Object.defineProperty(this,gy,{value:Ty}),Object.defineProperty(this,hy,{value:By}),Object.defineProperty(this,py,{value:ky}),Object.defineProperty(this,dy,{value:Oy}),Object.defineProperty(this,ay,{writable:!0,value:Object.create(null)}),Object.defineProperty(this,uy,{writable:!0,value:void 0}),Object.defineProperty(this,sy,{writable:!0,value:Bv()}),Object.defineProperty(this,cy,{writable:!0,value:new Set}),Object.defineProperty(this,ly,{writable:!0,value:new Set}),Object.defineProperty(this,fy,{writable:!0,value:new Set}),Object.defineProperty(this,Ey,{writable:!0,value:this.updateOnlineStatus.bind(this)}),this.defaultLocale=Kv;const t={id:"uppy",autoProceed:!1,allowMultipleUploads:!0,allowMultipleUploadBatches:!0,debug:!1,restrictions:{maxFileSize:null,minFileSize:null,maxTotalFileSize:null,maxNumberOfFiles:null,minNumberOfFiles:null,allowedFileTypes:null,requiredMetaFields:[]},meta:{},onBeforeFileAdded:e=>e,onBeforeUpload:e=>e,store:new Mv,logger:ny,infoTimeout:5e3};if(this.opts={...t,...e,restrictions:{...t.restrictions,...e&&e.restrictions}},e&&e.logger&&e.debug?this.log("You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.","warning"):e&&e.debug&&(this.opts.logger=ry),this.log(`Using Core v${this.constructor.VERSION}`),this.opts.restrictions.allowedFileTypes&&null!==this.opts.restrictions.allowedFileTypes&&!Array.isArray(this.opts.restrictions.allowedFileTypes))throw new TypeError("`restrictions.allowedFileTypes` must be an array");this.i18nInit(),this.calculateProgress=Fh(this.calculateProgress.bind(this),500,{leading:!0,trailing:!0}),this.store=this.opts.store,this.setState({plugins:{},files:{},currentUploads:{},allowNewUpload:!0,capabilities:{uploadProgress:Vv(),individualCancellation:!0,resumableUploads:!1},totalProgress:0,meta:{...this.opts.meta},info:[],recoveredState:null}),Zv(this,uy)[uy]=this.store.subscribe(((e,t,n)=>{this.emit("state-update",e,t,n),this.updateAll(t)})),this.opts.debug&&"undefined"!=typeof window&&(window[this.opts.id]=this),Zv(this,wy)[wy]()}emit(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];Zv(this,sy)[sy].emit(e,...n)}on(e,t){return Zv(this,sy)[sy].on(e,t),this}once(e,t){return Zv(this,sy)[sy].once(e,t),this}off(e,t){return Zv(this,sy)[sy].off(e,t),this}updateAll(e){this.iteratePlugins((t=>{t.update(e)}))}setState(e){this.store.setState(e)}getState(){return this.store.getState()}get state(){return this.getState()}setFileState(e,t){if(!this.getState().files[e])throw new Error(`Canât set state for ${e} (the file could have been removed)`);this.setState({files:{...this.getState().files,[e]:{...this.getState().files[e],...t}}})}i18nInit(){const e=new Ov([this.defaultLocale,this.opts.locale]);this.i18n=e.translate.bind(e),this.i18nArray=e.translateArray.bind(e),this.locale=e.locale}setOptions(e){this.opts={...this.opts,...e,restrictions:{...this.opts.restrictions,...e&&e.restrictions}},e.meta&&this.setMeta(e.meta),this.i18nInit(),e.locale&&this.iteratePlugins((e=>{e.setOptions()})),this.setState()}resetProgress(){const e={percentage:0,bytesUploaded:0,uploadComplete:!1,uploadStarted:null},t={...this.getState().files},n={};Object.keys(t).forEach((r=>{const o={...t[r]};o.progress={...o.progress,...e},n[r]=o})),this.setState({files:n,totalProgress:0}),this.emit("reset-progress")}addPreProcessor(e){Zv(this,cy)[cy].add(e)}removePreProcessor(e){return Zv(this,cy)[cy].delete(e)}addPostProcessor(e){Zv(this,fy)[fy].add(e)}removePostProcessor(e){return Zv(this,fy)[fy].delete(e)}addUploader(e){Zv(this,ly)[ly].add(e)}removeUploader(e){return Zv(this,ly)[ly].delete(e)}setMeta(e){const t={...this.getState().meta,...e},n={...this.getState().files};Object.keys(n).forEach((t=>{n[t]={...n[t],meta:{...n[t].meta,...e}}})),this.log("Adding metadata:"),this.log(e),this.setState({meta:t,files:n})}setFileMeta(e,t){const n={...this.getState().files};if(!n[e])return void this.log("Was trying to set metadata for a file that has been removed: ",e);const r={...n[e].meta,...t};n[e]={...n[e],meta:r},this.setState({files:n})}getFile(e){return this.getState().files[e]}getFiles(){const{files:e}=this.getState();return Object.values(e)}getObjectOfFilesPerState(){const{files:e,totalProgress:t,error:n}=this.getState(),r=Object.values(e),o=r.filter((e=>{let{progress:t}=e;return!t.uploadComplete&&t.uploadStarted})),i=r.filter((e=>!e.progress.uploadStarted)),a=r.filter((e=>e.progress.uploadStarted||e.progress.preprocess||e.progress.postprocess)),u=r.filter((e=>e.progress.uploadStarted)),s=r.filter((e=>e.isPaused)),c=r.filter((e=>e.progress.uploadComplete)),l=r.filter((e=>e.error)),f=o.filter((e=>!e.isPaused)),d=r.filter((e=>e.progress.preprocess||e.progress.postprocess));return{newFiles:i,startedFiles:a,uploadStartedFiles:u,pausedFiles:s,completeFiles:c,erroredFiles:l,inProgressFiles:o,inProgressNotPausedFiles:f,processingFiles:d,isUploadStarted:u.length>0,isAllComplete:100===t&&c.length===r.length&&0===d.length,isAllErrored:!!n&&l.length===r.length,isAllPaused:0!==o.length&&s.length===o.length,isUploadInProgress:o.length>0,isSomeGhost:r.some((e=>e.isGhost))}}validateRestrictions(e,t){try{return Zv(this,dy)[dy](e,t),{result:!0}}catch(e){return{result:!1,reason:e.message}}}checkIfFileAlreadyExists(e){const{files:t}=this.getState();return!(!t[e]||t[e].isGhost)}addFile(e){Zv(this,yy)[yy](e);const{files:t}=this.getState();let n=Zv(this,my)[my](t,e);return t[n.id]&&t[n.id].isGhost&&(n={...t[n.id],data:e.data,isGhost:!1},this.log(`Replaced the blob in the restored ghost file: ${n.name}, ${n.id}`)),this.setState({files:{...t,[n.id]:n}}),this.emit("file-added",n),this.emit("files-added",[n]),this.log(`Added file: ${n.name}, ${n.id}, mime type: ${n.type}`),Zv(this,by)[by](),n.id}addFiles(e){Zv(this,yy)[yy]();const t={...this.getState().files},n=[],r=[];for(let o=0;o<e.length;o++)try{let r=Zv(this,my)[my](t,e[o]);t[r.id]&&t[r.id].isGhost&&(r={...t[r.id],data:e[o].data,isGhost:!1},this.log(`Replaced blob in a ghost file: ${r.name}, ${r.id}`)),t[r.id]=r,n.push(r)}catch(e){e.isRestriction||r.push(e)}if(this.setState({files:t}),n.forEach((e=>{this.emit("file-added",e)})),this.emit("files-added",n),n.length>5?this.log(`Added batch of ${n.length} files`):Object.keys(n).forEach((e=>{this.log(`Added file: ${n[e].name}\n id: ${n[e].id}\n type: ${n[e].type}`)})),n.length>0&&Zv(this,by)[by](),r.length>0){let e="Multiple errors occurred while adding files:\n";if(r.forEach((t=>{e+=`\n * ${t.message}`})),this.info({message:this.i18n("addBulkFilesFailed",{smart_count:r.length}),details:e},"error",this.opts.infoTimeout),"function"==typeof AggregateError)throw new AggregateError(r,e);{const t=new Error(e);throw t.errors=r,t}}}removeFiles(e,t){const{files:n,currentUploads:r}=this.getState(),o={...n},i={...r},a=Object.create(null);function u(e){return void 0===a[e]}e.forEach((e=>{n[e]&&(a[e]=n[e],delete o[e])})),Object.keys(i).forEach((e=>{const t=r[e].fileIDs.filter(u);0!==t.length?i[e]={...r[e],fileIDs:t}:delete i[e]}));const s={currentUploads:i,files:o};0===Object.keys(o).length&&(s.allowNewUpload=!0,s.error=null,s.recoveredState=null),this.setState(s),this.calculateTotalProgress();const c=Object.keys(a);c.forEach((e=>{this.emit("file-removed",a[e],t)})),c.length>5?this.log(`Removed ${c.length} files`):this.log(`Removed files: ${c.join(", ")}`)}removeFile(e,t){void 0===t&&(t=null),this.removeFiles([e],t)}pauseResume(e){if(!this.getState().capabilities.resumableUploads||this.getFile(e).uploadComplete)return;const t=!this.getFile(e).isPaused;return this.setFileState(e,{isPaused:t}),this.emit("upload-pause",e,t),t}pauseAll(){const e={...this.getState().files};Object.keys(e).filter((t=>!e[t].progress.uploadComplete&&e[t].progress.uploadStarted)).forEach((t=>{const n={...e[t],isPaused:!0};e[t]=n})),this.setState({files:e}),this.emit("pause-all")}resumeAll(){const e={...this.getState().files};Object.keys(e).filter((t=>!e[t].progress.uploadComplete&&e[t].progress.uploadStarted)).forEach((t=>{const n={...e[t],isPaused:!1,error:null};e[t]=n})),this.setState({files:e}),this.emit("resume-all")}retryAll(){const e={...this.getState().files},t=Object.keys(e).filter((t=>e[t].error));if(t.forEach((t=>{const n={...e[t],isPaused:!1,error:null};e[t]=n})),this.setState({files:e,error:null}),this.emit("retry-all",t),0===t.length)return Promise.resolve({successful:[],failed:[]});const n=Zv(this,Ay)[Ay](t,{forceAllowNewUpload:!0});return Zv(this,xy)[xy](n)}cancelAll(){this.emit("cancel-all");const{files:e}=this.getState(),t=Object.keys(e);t.length&&this.removeFiles(t,"cancel-all"),this.setState({totalProgress:0,error:null,recoveredState:null})}retryUpload(e){this.setFileState(e,{error:null,isPaused:!1}),this.emit("upload-retry",e);const t=Zv(this,Ay)[Ay]([e],{forceAllowNewUpload:!0});return Zv(this,xy)[xy](t)}reset(){this.cancelAll()}logout(){this.iteratePlugins((e=>{e.provider&&e.provider.logout&&e.provider.logout()}))}calculateProgress(e,t){if(!this.getFile(e.id))return void this.log(`Not setting progress for a file that has been removed: ${e.id}`);const n=Number.isFinite(t.bytesTotal)&&t.bytesTotal>0;this.setFileState(e.id,{progress:{...this.getFile(e.id).progress,bytesUploaded:t.bytesUploaded,bytesTotal:t.bytesTotal,percentage:n?Math.round(t.bytesUploaded/t.bytesTotal*100):0}}),this.calculateTotalProgress()}calculateTotalProgress(){const e=this.getFiles().filter((e=>e.progress.uploadStarted||e.progress.preprocess||e.progress.postprocess));if(0===e.length)return this.emit("progress",0),void this.setState({totalProgress:0});const t=e.filter((e=>null!=e.progress.bytesTotal)),n=e.filter((e=>null==e.progress.bytesTotal));if(0===t.length){const t=100*e.length,r=n.reduce(((e,t)=>e+t.progress.percentage),0),o=Math.round(r/t*100);return void this.setState({totalProgress:o})}let r=t.reduce(((e,t)=>e+t.progress.bytesTotal),0);const o=r/t.length;r+=o*n.length;let i=0;t.forEach((e=>{i+=e.progress.bytesUploaded})),n.forEach((e=>{i+=o*(e.progress.percentage||0)/100}));let a=0===r?0:Math.round(i/r*100);a>100&&(a=100),this.setState({totalProgress:a}),this.emit("progress",a)}updateOnlineStatus(){void 0===window.navigator.onLine||window.navigator.onLine?(this.emit("is-online"),this.wasOffline&&(this.emit("back-online"),this.info(this.i18n("connectedToInternet"),"success",3e3),this.wasOffline=!1)):(this.emit("is-offline"),this.info(this.i18n("noInternetConnection"),"error",0),this.wasOffline=!0)}getID(){return this.opts.id}use(e,t){if("function"!=typeof e)throw new TypeError(`Expected a plugin class, but got ${null===e?"null":typeof e}. Please verify that the plugin was imported and spelled correctly.`);const n=new e(this,t),r=n.id;if(!r)throw new Error("Your plugin must have an id");if(!n.type)throw new Error("Your plugin must have a type");const o=this.getPlugin(r);if(o){const e=`Already found a plugin named '${o.id}'. Tried to use: '${r}'.\nUppy plugins must have unique \`id\` options. See https://uppy.io/docs/plugins/#id.`;throw new Error(e)}return e.VERSION&&this.log(`Using ${r} v${e.VERSION}`),n.type in Zv(this,ay)[ay]?Zv(this,ay)[ay][n.type].push(n):Zv(this,ay)[ay][n.type]=[n],n.install(),this}getPlugin(e){for(const t of Object.values(Zv(this,ay)[ay])){const n=t.find((t=>t.id===e));if(null!=n)return n}}[Xv](e){return Zv(this,ay)[ay][e]}iteratePlugins(e){Object.values(Zv(this,ay)[ay]).flat(1).forEach(e)}removePlugin(e){this.log(`Removing plugin ${e.id}`),this.emit("plugin-remove",e),e.uninstall&&e.uninstall();const t=Zv(this,ay)[ay][e.type],n=t.findIndex((t=>t.id===e.id));-1!==n&&t.splice(n,1);const r={plugins:{...this.getState().plugins,[e.id]:void 0}};this.setState(r)}close(){this.log(`Closing Uppy instance ${this.opts.id}: removing all files and uninstalling plugins`),this.reset(),Zv(this,uy)[uy](),this.iteratePlugins((e=>{this.removePlugin(e)})),"undefined"!=typeof window&&window.removeEventListener&&(window.removeEventListener("online",Zv(this,Ey)[Ey]),window.removeEventListener("offline",Zv(this,Ey)[Ey]))}hideInfo(){const{info:e}=this.getState();this.setState({info:e.slice(1)}),this.emit("info-hidden")}info(e,t,n){void 0===t&&(t="info"),void 0===n&&(n=3e3);const r="object"==typeof e;this.setState({info:[...this.getState().info,{type:t,message:r?e.message:e,details:r?e.details:null}]}),setTimeout((()=>this.hideInfo()),n),this.emit("info-visible")}log(e,t){const{logger:n}=this.opts;switch(t){case"error":n.error(e);break;case"warning":n.warn(e);break;default:n.debug(e)}}restore(e){return this.log(`Core: attempting to restore upload "${e}"`),this.getState().currentUploads[e]?Zv(this,xy)[xy](e):(Zv(this,Cy)[Cy](e),Promise.reject(new Error("Nonexistent upload")))}[Jv](){return Zv(this,Ay)[Ay](...arguments)}addResultData(e,t){if(!Zv(this,Sy)[Sy](e))return void this.log(`Not setting result for an upload that has been removed: ${e}`);const{currentUploads:n}=this.getState(),r={...n[e],result:{...n[e].result,...t}};this.setState({currentUploads:{...n,[e]:r}})}upload(){var e;null!=(e=Zv(this,ay)[ay].uploader)&&e.length||this.log("No uploader type plugins are used","warning");let{files:t}=this.getState();const n=this.opts.onBeforeUpload(t);return!1===n?Promise.reject(new Error("Not starting the upload because onBeforeUpload returned false")):(n&&"object"==typeof n&&(t=n,this.setState({files:t})),Promise.resolve().then((()=>{Zv(this,py)[py](t),Zv(this,gy)[gy](t)})).catch((e=>{Zv(this,vy)[vy](e)})).then((()=>{const{currentUploads:e}=this.getState(),n=Object.values(e).flatMap((e=>e.fileIDs)),r=[];Object.keys(t).forEach((e=>{const t=this.getFile(e);t.progress.uploadStarted||-1!==n.indexOf(e)||r.push(t.id)}));const o=Zv(this,Ay)[Ay](r);return Zv(this,xy)[xy](o)})).catch((e=>{Zv(this,vy)[vy](e,{showInformer:!1})})))}}function Oy(e,t){void 0===t&&(t=this.getFiles());const{maxFileSize:n,minFileSize:r,maxTotalFileSize:o,maxNumberOfFiles:i,allowedFileTypes:a}=this.opts.restrictions;if(i&&t.length+1>i)throw new oy(`${this.i18n("youCanOnlyUploadX",{smart_count:i})}`);if(a&&!a.some((t=>t.indexOf("/")>-1?!!e.type&&function(e,t){function n(t){var n=function(e,t,n){var r=new Nv(e,n||/[\/\.]/);return void 0!==t?r.match(t):r}(t,e,Rv);return n&&n.length>=2}return t?n(t.split(";")[0]):n}(e.type.replace(/;.*?$/,""),t):!("."!==t[0]||!e.extension)&&e.extension.toLowerCase()===t.substr(1).toLowerCase()))){const e=a.join(", ");throw new oy(this.i18n("youCanOnlyUploadFileTypes",{types:e}))}if(o&&null!=e.size){let n=0;if(n+=e.size,t.forEach((e=>{n+=e.size})),n>o)throw new oy(this.i18n("exceedsSize",{size:jv(o),file:e.name}))}if(n&&null!=e.size&&e.size>n)throw new oy(this.i18n("exceedsSize",{size:jv(n),file:e.name}));if(r&&null!=e.size&&e.size<r)throw new oy(this.i18n("inferiorSize",{size:jv(r)}))}function ky(e){const{minNumberOfFiles:t}=this.opts.restrictions;if(Object.keys(e).length<t)throw new oy(`${this.i18n("youHaveToAtLeastSelectX",{smart_count:t})}`)}function By(e){const{requiredMetaFields:t}=this.opts.restrictions,{hasOwnProperty:n}=Object.prototype,r=[],o=[];for(let i=0;i<t.length;i++)if(!n.call(e.meta,t[i])||""===e.meta[t[i]]){const n=new oy(`${this.i18n("missingRequiredMetaFieldOnFile",{fileName:e.name})}`);r.push(n),o.push(t[i]),Zv(this,vy)[vy](n,{file:e,showInformer:!1,throwErr:!1})}return this.setFileState(e.id,{missingRequiredMetaFields:o}),r}function Ty(e){const t=Object.keys(e).flatMap((e=>{const t=this.getFile(e);return Zv(this,hy)[hy](t)}));if(t.length)throw new iy(t,`${this.i18n("missingRequiredMetaField")}`)}function Fy(e,t){let{showInformer:n=!0,file:r=null,throwErr:o=!0}=void 0===t?{}:t;const i="object"==typeof e?e.message:e,a="object"==typeof e&&e.details?e.details:"";let u=i;if(a&&(u+=` ${a}`),e.isRestriction?(this.log(u),this.emit("restriction-failed",r,e)):this.log(u,"error"),n&&this.info({message:i,details:a},"error",this.opts.infoTimeout),o)throw"object"==typeof e?e:new Error(e)}function _y(e){const{allowNewUpload:t}=this.getState();!1===t&&Zv(this,vy)[vy](new oy(this.i18n("noMoreFilesAllowed")),{file:e})}function Py(e,t){const n=function(e){var t;if(e.type)return e.type;const n=e.name?null==(t=$v(e.name).extension)?void 0:t.toLowerCase():null;return n&&n in Hv?Hv[n]:"application/octet-stream"}(t),r=function(e,t){return t.name?t.name:"image"===e.split("/")[0]?`${e.split("/")[0]}.${e.split("/")[1]}`:"noname"}(n,t),o=$v(r).extension,i=Boolean(t.isRemote),a=function(e){let t="uppy";return"string"==typeof e.name&&(t+=`-${Uv(e.name.toLowerCase())}`),void 0!==e.type&&(t+=`-${e.type}`),e.meta&&"string"==typeof e.meta.relativePath&&(t+=`-${Uv(e.meta.relativePath.toLowerCase())}`),void 0!==e.data.size&&(t+=`-${e.data.size}`),void 0!==e.data.lastModified&&(t+=`-${e.data.lastModified}`),t}({...t,type:n});if(this.checkIfFileAlreadyExists(a)){const e=new oy(this.i18n("noDuplicates",{fileName:r}));Zv(this,vy)[vy](e,{file:t})}const u=t.meta||{};u.name=r,u.type=n;const s=Number.isFinite(t.data.size)?t.data.size:null;let c={source:t.source||"",id:a,name:r,extension:o||"",meta:{...this.getState().meta,...u},type:n,data:t.data,progress:{percentage:0,bytesUploaded:0,bytesTotal:s,uploadComplete:!1,uploadStarted:null},size:s,isRemote:i,remote:t.remote||"",preview:t.preview};const l=this.opts.onBeforeFileAdded(c,e);!1===l?Zv(this,vy)[vy](new oy("Cannot add the file because onBeforeFileAdded returned false."),{showInformer:!1,fileDescriptor:t}):"object"==typeof l&&null!==l&&(c=l);try{const t=Object.keys(e).map((t=>e[t]));Zv(this,dy)[dy](c,t)}catch(e){Zv(this,vy)[vy](e,{file:c})}return c}function jy(){this.opts.autoProceed&&!this.scheduledAutoProceed&&(this.scheduledAutoProceed=setTimeout((()=>{this.scheduledAutoProceed=null,this.upload().catch((e=>{e.isRestriction||this.log(e.stack||e.message||e)}))}),4))}function Ny(){const e=(e,t,n)=>{let r=e.message||"Unknown error";e.details&&(r+=` ${e.details}`),this.setState({error:r}),null!=t&&t.id in this.getState().files&&this.setFileState(t.id,{error:r,response:n})};this.on("error",e),this.on("upload-error",((t,n,r)=>{if(e(n,t,r),"object"==typeof n&&n.message){const e=new Error(n.message);e.details=n.message,n.details&&(e.details+=` ${n.details}`),e.message=this.i18n("failedToUpload",{file:t.name}),Zv(this,vy)[vy](e,{throwErr:!1})}else Zv(this,vy)[vy](n,{throwErr:!1})})),this.on("upload",(()=>{this.setState({error:null})})),this.on("upload-started",(e=>{this.getFile(e.id)?this.setFileState(e.id,{progress:{uploadStarted:Date.now(),uploadComplete:!1,percentage:0,bytesUploaded:0,bytesTotal:e.size}}):this.log(`Not setting progress for a file that has been removed: ${e.id}`)})),this.on("upload-progress",this.calculateProgress),this.on("upload-success",((e,t)=>{if(!this.getFile(e.id))return void this.log(`Not setting progress for a file that has been removed: ${e.id}`);const n=this.getFile(e.id).progress;this.setFileState(e.id,{progress:{...n,postprocess:Zv(this,fy)[fy].size>0?{mode:"indeterminate"}:null,uploadComplete:!0,percentage:100,bytesUploaded:n.bytesTotal},response:t,uploadURL:t.uploadURL,isPaused:!1}),null==e.size&&this.setFileState(e.id,{size:t.bytesUploaded||n.bytesTotal}),this.calculateTotalProgress()})),this.on("preprocess-progress",((e,t)=>{this.getFile(e.id)?this.setFileState(e.id,{progress:{...this.getFile(e.id).progress,preprocess:t}}):this.log(`Not setting progress for a file that has been removed: ${e.id}`)})),this.on("preprocess-complete",(e=>{if(!this.getFile(e.id))return void this.log(`Not setting progress for a file that has been removed: ${e.id}`);const t={...this.getState().files};t[e.id]={...t[e.id],progress:{...t[e.id].progress}},delete t[e.id].progress.preprocess,this.setState({files:t})})),this.on("postprocess-progress",((e,t)=>{this.getFile(e.id)?this.setFileState(e.id,{progress:{...this.getState().files[e.id].progress,postprocess:t}}):this.log(`Not setting progress for a file that has been removed: ${e.id}`)})),this.on("postprocess-complete",(e=>{if(!this.getFile(e.id))return void this.log(`Not setting progress for a file that has been removed: ${e.id}`);const t={...this.getState().files};t[e.id]={...t[e.id],progress:{...t[e.id].progress}},delete t[e.id].progress.postprocess,this.setState({files:t})})),this.on("restored",(()=>{this.calculateTotalProgress()})),this.on("dashboard:file-edit-complete",(e=>{e&&Zv(this,hy)[hy](e)})),"undefined"!=typeof window&&window.addEventListener&&(window.addEventListener("online",Zv(this,Ey)[Ey]),window.addEventListener("offline",Zv(this,Ey)[Ey]),setTimeout(Zv(this,Ey)[Ey],3e3))}function Ry(e,t){void 0===t&&(t={});const{forceAllowNewUpload:n=!1}=t,{allowNewUpload:r,currentUploads:o}=this.getState();if(!r&&!n)throw new Error("Cannot create a new upload: already uploading.");const i=ty();return this.emit("upload",{id:i,fileIDs:e}),this.setState({allowNewUpload:!1!==this.opts.allowMultipleUploadBatches&&!1!==this.opts.allowMultipleUploads,currentUploads:{...o,[i]:{fileIDs:e,step:0,result:{}}}}),i}function Iy(e){const{currentUploads:t}=this.getState();return t[e]}function Ly(e){const t={...this.getState().currentUploads};delete t[e],this.setState({currentUploads:t})}async function My(e){let{currentUploads:t}=this.getState(),n=t[e];const r=n.step||0,o=[...Zv(this,cy)[cy],...Zv(this,ly)[ly],...Zv(this,fy)[fy]];try{for(let i=r;i<o.length&&n;i++){const r=o[i],a={...n,step:i};this.setState({currentUploads:{...t,[e]:a}}),await r(a.fileIDs,e),t=this.getState().currentUploads,n=t[e]}}catch(t){throw this.emit("error",t),Zv(this,Cy)[Cy](e),t}if(n){n.fileIDs.forEach((e=>{const t=this.getFile(e);t&&t.progress.postprocess&&this.emit("postprocess-complete",t)}));const r=n.fileIDs.map((e=>this.getFile(e))),o=r.filter((e=>!e.error)),i=r.filter((e=>e.error));await this.addResultData(e,{successful:o,failed:i,uploadID:e}),t=this.getState().currentUploads,n=t[e]}let i;return n&&(i=n.result,this.emit("complete",i),Zv(this,Cy)[Cy](e)),null==i&&this.log(`Not setting result for an upload that has been removed: ${e}`),i}Dy.VERSION="2.1.3";var zy=Dy,$y=o((function(e,t){var n,r,o,i,a,u,s,c,l={},f=[],d=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function p(e,t){for(var n in t)e[n]=t[n];return e}function h(e){var t=e.parentNode;t&&t.removeChild(e)}function g(e,t,r){var o,i,a,u={};for(a in t)"key"==a?o=t[a]:"ref"==a?i=t[a]:u[a]=t[a];if(arguments.length>2&&(u.children=arguments.length>3?n.call(arguments,2):r),"function"==typeof e&&null!=e.defaultProps)for(a in e.defaultProps)void 0===u[a]&&(u[a]=e.defaultProps[a]);return v(e,u,o,i,null)}function v(e,t,n,i,a){var u={type:e,props:t,key:n,ref:i,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==a?++o:a};return null==a&&null!=r.vnode&&r.vnode(u),u}function y(e){return e.children}function m(e,t){this.props=e,this.context=t}function b(e,t){if(null==t)return e.__?b(e.__,e.__.__k.indexOf(e)+1):null;for(var n;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e)return n.__e;return"function"==typeof e.type?b(e):null}function w(e){var t,n;if(null!=(e=e.__)&&null!=e.__c){for(e.__e=e.__c.base=null,t=0;t<e.__k.length;t++)if(null!=(n=e.__k[t])&&null!=n.__e){e.__e=e.__c.base=n.__e;break}return w(e)}}function E(e){(!e.__d&&(e.__d=!0)&&a.push(e)&&!A.__r++||s!==r.debounceRendering)&&((s=r.debounceRendering)||u)(A)}function A(){for(var e;A.__r=a.length;)e=a.sort((function(e,t){return e.__v.__b-t.__v.__b})),a=[],e.some((function(e){var t,n,r,o,i,a;e.__d&&(i=(o=(t=e).__v).__e,(a=t.__P)&&(n=[],(r=p({},o)).__v=o.__v+1,T(a,o,r,t.__n,void 0!==a.ownerSVGElement,null!=o.__h?[i]:null,n,null==i?b(o):i,o.__h),F(n,o),o.__e!=i&&w(o)))}))}function S(e,t,n,r,o,i,a,u,s,c){var d,p,h,g,m,w,E,A=r&&r.__k||f,S=A.length;for(n.__k=[],d=0;d<t.length;d++)if(null!=(g=n.__k[d]=null==(g=t[d])||"boolean"==typeof g?null:"string"==typeof g||"number"==typeof g||"bigint"==typeof g?v(null,g,null,null,g):Array.isArray(g)?v(y,{children:g},null,null,null):g.__b>0?v(g.type,g.props,g.key,null,g.__v):g)){if(g.__=n,g.__b=n.__b+1,null===(h=A[d])||h&&g.key==h.key&&g.type===h.type)A[d]=void 0;else for(p=0;p<S;p++){if((h=A[p])&&g.key==h.key&&g.type===h.type){A[p]=void 0;break}h=null}T(e,g,h=h||l,o,i,a,u,s,c),m=g.__e,(p=g.ref)&&h.ref!=p&&(E||(E=[]),h.ref&&E.push(h.ref,null,g),E.push(p,g.__c||m,g)),null!=m?(null==w&&(w=m),"function"==typeof g.type&&g.__k===h.__k?g.__d=s=C(g,s,e):s=x(e,g,h,A,m,s),"function"==typeof n.type&&(n.__d=s)):s&&h.__e==s&&s.parentNode!=e&&(s=b(h))}for(n.__e=w,d=S;d--;)null!=A[d]&&("function"==typeof n.type&&null!=A[d].__e&&A[d].__e==n.__d&&(n.__d=b(r,d+1)),j(A[d],A[d]));if(E)for(d=0;d<E.length;d++)P(E[d],E[++d],E[++d])}function C(e,t,n){for(var r,o=e.__k,i=0;o&&i<o.length;i++)(r=o[i])&&(r.__=e,t="function"==typeof r.type?C(r,t,n):x(n,r,r,o,r.__e,t));return t}function x(e,t,n,r,o,i){var a,u,s;if(void 0!==t.__d)a=t.__d,t.__d=void 0;else if(null==n||o!=i||null==o.parentNode)e:if(null==i||i.parentNode!==e)e.appendChild(o),a=null;else{for(u=i,s=0;(u=u.nextSibling)&&s<r.length;s+=2)if(u==o)break e;e.insertBefore(o,i),a=i}return void 0!==a?a:o.nextSibling}function D(e,t,n){"-"===t[0]?e.setProperty(t,n):e[t]=null==n?"":"number"!=typeof n||d.test(t)?n:n+"px"}function O(e,t,n,r,o){var i;e:if("style"===t)if("string"==typeof n)e.style.cssText=n;else{if("string"==typeof r&&(e.style.cssText=r=""),r)for(t in r)n&&t in n||D(e.style,t,"");if(n)for(t in n)r&&n[t]===r[t]||D(e.style,t,n[t])}else if("o"===t[0]&&"n"===t[1])i=t!==(t=t.replace(/Capture$/,"")),t=t.toLowerCase()in e?t.toLowerCase().slice(2):t.slice(2),e.l||(e.l={}),e.l[t+i]=n,n?r||e.addEventListener(t,i?B:k,i):e.removeEventListener(t,i?B:k,i);else if("dangerouslySetInnerHTML"!==t){if(o)t=t.replace(/xlink[H:h]/,"h").replace(/sName$/,"s");else if("href"!==t&&"list"!==t&&"form"!==t&&"tabIndex"!==t&&"download"!==t&&t in e)try{e[t]=null==n?"":n;break e}catch(e){}"function"==typeof n||(null!=n&&(!1!==n||"a"===t[0]&&"r"===t[1])?e.setAttribute(t,n):e.removeAttribute(t))}}function k(e){this.l[e.type+!1](r.event?r.event(e):e)}function B(e){this.l[e.type+!0](r.event?r.event(e):e)}function T(e,t,n,o,i,a,u,s,c){var l,f,d,h,g,v,b,w,E,A,C,x=t.type;if(void 0!==t.constructor)return null;null!=n.__h&&(c=n.__h,s=t.__e=n.__e,t.__h=null,a=[s]),(l=r.__b)&&l(t);try{e:if("function"==typeof x){if(w=t.props,E=(l=x.contextType)&&o[l.__c],A=l?E?E.props.value:l.__:o,n.__c?b=(f=t.__c=n.__c).__=f.__E:("prototype"in x&&x.prototype.render?t.__c=f=new x(w,A):(t.__c=f=new m(w,A),f.constructor=x,f.render=N),E&&E.sub(f),f.props=w,f.state||(f.state={}),f.context=A,f.__n=o,d=f.__d=!0,f.__h=[]),null==f.__s&&(f.__s=f.state),null!=x.getDerivedStateFromProps&&(f.__s==f.state&&(f.__s=p({},f.__s)),p(f.__s,x.getDerivedStateFromProps(w,f.__s))),h=f.props,g=f.state,d)null==x.getDerivedStateFromProps&&null!=f.componentWillMount&&f.componentWillMount(),null!=f.componentDidMount&&f.__h.push(f.componentDidMount);else{if(null==x.getDerivedStateFromProps&&w!==h&&null!=f.componentWillReceiveProps&&f.componentWillReceiveProps(w,A),!f.__e&&null!=f.shouldComponentUpdate&&!1===f.shouldComponentUpdate(w,f.__s,A)||t.__v===n.__v){f.props=w,f.state=f.__s,t.__v!==n.__v&&(f.__d=!1),f.__v=t,t.__e=n.__e,t.__k=n.__k,t.__k.forEach((function(e){e&&(e.__=t)})),f.__h.length&&u.push(f);break e}null!=f.componentWillUpdate&&f.componentWillUpdate(w,f.__s,A),null!=f.componentDidUpdate&&f.__h.push((function(){f.componentDidUpdate(h,g,v)}))}f.context=A,f.props=w,f.state=f.__s,(l=r.__r)&&l(t),f.__d=!1,f.__v=t,f.__P=e,l=f.render(f.props,f.state,f.context),f.state=f.__s,null!=f.getChildContext&&(o=p(p({},o),f.getChildContext())),d||null==f.getSnapshotBeforeUpdate||(v=f.getSnapshotBeforeUpdate(h,g)),C=null!=l&&l.type===y&&null==l.key?l.props.children:l,S(e,Array.isArray(C)?C:[C],t,n,o,i,a,u,s,c),f.base=t.__e,t.__h=null,f.__h.length&&u.push(f),b&&(f.__E=f.__=null),f.__e=!1}else null==a&&t.__v===n.__v?(t.__k=n.__k,t.__e=n.__e):t.__e=_(n.__e,t,n,o,i,a,u,c);(l=r.diffed)&&l(t)}catch(e){t.__v=null,(c||null!=a)&&(t.__e=s,t.__h=!!c,a[a.indexOf(s)]=null),r.__e(e,t,n)}}function F(e,t){r.__c&&r.__c(t,e),e.some((function(t){try{e=t.__h,t.__h=[],e.some((function(e){e.call(t)}))}catch(e){r.__e(e,t.__v)}}))}function _(e,t,r,o,i,a,u,s){var c,f,d,p=r.props,g=t.props,v=t.type,y=0;if("svg"===v&&(i=!0),null!=a)for(;y<a.length;y++)if((c=a[y])&&"setAttribute"in c==!!v&&(v?c.localName===v:3===c.nodeType)){e=c,a[y]=null;break}if(null==e){if(null===v)return document.createTextNode(g);e=i?document.createElementNS("http://www.w3.org/2000/svg",v):document.createElement(v,g.is&&g),a=null,s=!1}if(null===v)p===g||s&&e.data===g||(e.data=g);else{if(a=a&&n.call(e.childNodes),f=(p=r.props||l).dangerouslySetInnerHTML,d=g.dangerouslySetInnerHTML,!s){if(null!=a)for(p={},y=0;y<e.attributes.length;y++)p[e.attributes[y].name]=e.attributes[y].value;(d||f)&&(d&&(f&&d.__html==f.__html||d.__html===e.innerHTML)||(e.innerHTML=d&&d.__html||""))}if(function(e,t,n,r,o){var i;for(i in n)"children"===i||"key"===i||i in t||O(e,i,null,n[i],r);for(i in t)o&&"function"!=typeof t[i]||"children"===i||"key"===i||"value"===i||"checked"===i||n[i]===t[i]||O(e,i,t[i],n[i],r)}(e,g,p,i,s),d)t.__k=[];else if(y=t.props.children,S(e,Array.isArray(y)?y:[y],t,r,o,i&&"foreignObject"!==v,a,u,a?a[0]:r.__k&&b(r,0),s),null!=a)for(y=a.length;y--;)null!=a[y]&&h(a[y]);s||("value"in g&&void 0!==(y=g.value)&&(y!==p.value||y!==e.value||"progress"===v&&!y)&&O(e,"value",y,p.value,!1),"checked"in g&&void 0!==(y=g.checked)&&y!==e.checked&&O(e,"checked",y,p.checked,!1))}return e}function P(e,t,n){try{"function"==typeof e?e(t):e.current=t}catch(e){r.__e(e,n)}}function j(e,t,n){var o,i;if(r.unmount&&r.unmount(e),(o=e.ref)&&(o.current&&o.current!==e.__e||P(o,null,t)),null!=(o=e.__c)){if(o.componentWillUnmount)try{o.componentWillUnmount()}catch(e){r.__e(e,t)}o.base=o.__P=null}if(o=e.__k)for(i=0;i<o.length;i++)o[i]&&j(o[i],t,"function"!=typeof e.type);n||null==e.__e||h(e.__e),e.__e=e.__d=void 0}function N(e,t,n){return this.constructor(e,n)}function R(e,t,o){var i,a,u;r.__&&r.__(e,t),a=(i="function"==typeof o)?null:o&&o.__k||t.__k,u=[],T(t,e=(!i&&o||t).__k=g(y,null,[e]),a||l,l,void 0!==t.ownerSVGElement,!i&&o?[o]:a?null:t.firstChild?n.call(t.childNodes):null,u,!i&&o?o:a?a.__e:t.firstChild,i),F(u,e)}n=f.slice,r={__e:function(e,t){for(var n,r,o;t=t.__;)if((n=t.__c)&&!n.__)try{if((r=n.constructor)&&null!=r.getDerivedStateFromError&&(n.setState(r.getDerivedStateFromError(e)),o=n.__d),null!=n.componentDidCatch&&(n.componentDidCatch(e),o=n.__d),o)return n.__E=n}catch(t){e=t}throw e}},o=0,i=function(e){return null!=e&&void 0===e.constructor},m.prototype.setState=function(e,t){var n;n=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=p({},this.state),"function"==typeof e&&(e=e(p({},n),this.props)),e&&p(n,e),null!=e&&this.__v&&(t&&this.__h.push(t),E(this))},m.prototype.forceUpdate=function(e){this.__v&&(this.__e=!0,e&&this.__h.push(e),E(this))},m.prototype.render=y,a=[],u="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,A.__r=0,c=0,t.Component=m,t.Fragment=y,t.cloneElement=function(e,t,r){var o,i,a,u=p({},e.props);for(a in t)"key"==a?o=t[a]:"ref"==a?i=t[a]:u[a]=t[a];return arguments.length>2&&(u.children=arguments.length>3?n.call(arguments,2):r),v(e.type,u,o||e.key,i||e.ref,null)},t.createContext=function(e,t){var n={__c:t="__cC"+c++,__:e,Consumer:function(e,t){return e.children(t)},Provider:function(e){var n,r;return this.getChildContext||(n=[],(r={})[t]=this,this.getChildContext=function(){return r},this.shouldComponentUpdate=function(e){this.props.value!==e.value&&n.some(E)},this.sub=function(e){n.push(e);var t=e.componentWillUnmount;e.componentWillUnmount=function(){n.splice(n.indexOf(e),1),t&&t.call(e)}}),e.children}};return n.Provider.__=n.Consumer.contextType=n},t.createElement=g,t.createRef=function(){return{current:null}},t.h=g,t.hydrate=function e(t,n){R(t,n,e)},t.isValidElement=i,t.options=r,t.render=R,t.toChildArray=function e(t,n){return n=n||[],null==t||"boolean"==typeof t||(Array.isArray(t)?t.some((function(t){e(t,n)})):n.push(t)),n}})),Hy=class{constructor(e,t){void 0===t&&(t={}),this.uppy=e,this.opts=t}getPluginState(){const{plugins:e}=this.uppy.getState();return e[this.id]||{}}setPluginState(e){const{plugins:t}=this.uppy.getState();this.uppy.setState({plugins:{...t,[this.id]:{...t[this.id],...e}}})}setOptions(e){this.opts={...this.opts,...e},this.setPluginState(),this.i18nInit()}i18nInit(){const e=new Ov([this.defaultLocale,this.uppy.locale,this.opts.locale]);this.i18n=e.translate.bind(e),this.i18nArray=e.translateArray.bind(e),this.setPluginState()}addTarget(){throw new Error("Extend the addTarget method to add your plugin to another plugin's target")}install(){}uninstall(){}render(){throw new Error("Extend the render method to add your plugin to a DOM element")}update(){}afterUpdate(){}};function Uy(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var Vy=0;const{render:qy}=$y;var Wy="__private_"+Vy+++"_updateUI";class Gy extends Hy{constructor(){super(...arguments),Object.defineProperty(this,Wy,{writable:!0,value:void 0})}mount(e,t){const n=t.id,r=function(e,t){return void 0===t&&(t=document),"string"==typeof e?t.querySelector(e):(null==(n=e)?void 0:n.nodeType)===Node.ELEMENT_NODE?e:null;var n}(e);if(r){this.isTargetDOMEl=!0;const t=document.createDocumentFragment();return Uy(this,Wy)[Wy]=function(e){let t=null,n=null;return function(){for(var r=arguments.length,o=new Array(r),i=0;i<r;i++)o[i]=arguments[i];return n=o,t||(t=Promise.resolve().then((()=>(t=null,e(...n))))),t}}((e=>{this.uppy.getPlugin(this.id)&&(qy(this.render(e),t),this.afterUpdate())})),this.uppy.log(`Installing ${n} to a DOM element '${e}'`),this.opts.replaceTargetContent&&(r.innerHTML=""),qy(this.render(this.uppy.getState()),t),this.el=t.firstElementChild,r.appendChild(t),this.onMount(),this.el}let o;if("object"==typeof e&&e instanceof Gy)o=e;else if("function"==typeof e){const t=e;this.uppy.iteratePlugins((e=>{if(e instanceof t)return o=e,!1}))}if(o)return this.uppy.log(`Installing ${n} to ${o.id}`),this.parent=o,this.el=o.addTarget(t),this.onMount(),this.el;this.uppy.log(`Not installing ${n}`);let i=`Invalid target option given to ${n}.`;throw i+="function"==typeof e?" The given target is not a Plugin class. Please check that you're not specifying a React Component instead of a plugin. If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly.":"If you meant to target an HTML element, please make sure that the element exists. Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. (see https://github.com/transloadit/uppy/issues/1042)\n\nIf you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.",new Error(i)}update(e){var t,n;null!=this.el&&(null==(t=(n=Uy(this,Wy))[Wy])||t.call(n,e))}unmount(){var e;this.isTargetDOMEl&&(null==(e=this.el)||e.remove()),this.onUnmount()}onMount(){}onUnmount(){}}var Ky=Gy;const{debugLogger:Yy}=Gv;var Xy=zy,Jy=zy,Zy=Ky,Qy=Hy,em=Yy;Xy.Uppy=Jy,Xy.UIPlugin=Zy,Xy.BasePlugin=Qy,Xy.debugLogger=em;class tm extends Error{constructor(e,t){void 0===t&&(t=null),super("This looks like a network error, the endpoint might be blocked by an internet provider or a firewall."),this.cause=e,this.isNetworkError=!0,this.request=t}}var nm=tm,rm=function(){return fetch(...arguments).catch((e=>{throw"AbortError"===e.name?e:new nm(e)}))};class om extends Error{constructor(){super("Authorization required"),this.name="AuthError",this.isAuthError=!0}}var im,am,um,sm,cm,lm=om;function fm(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var dm=0;function pm(e){return"__private_"+dm+++"_"+e}async function hm(e){if(401===e.status)throw new lm;const t=e.json();if(e.status<200||e.status>300){let n=`Failed request with status: ${e.status}. ${e.statusText}`;try{const e=await t;n=e.message?`${n} message: ${e.message}`:n,n=e.requestId?`${n} request-Id: ${e.requestId}`:n}finally{throw new Error(n)}}return t}var gm=(am=pm("getPostResponseFunc"),um=pm("getUrl"),sm=pm("errorHandler"),cm=im=class e{constructor(e,t){Object.defineProperty(this,sm,{value:ym}),Object.defineProperty(this,um,{value:vm}),Object.defineProperty(this,am,{writable:!0,value:e=>t=>e?t:this.onReceiveResponse(t)}),this.uppy=e,this.opts=t,this.onReceiveResponse=this.onReceiveResponse.bind(this),this.allowedHeaders=["accept","content-type","uppy-auth-token"],this.preflightDone=!1}get hostname(){const{companion:e}=this.uppy.getState(),t=this.opts.companionUrl;return(e&&e[t]?e[t]:t).replace(/\/$/,"")}headers(){const t=this.opts.companionHeaders||{};return Promise.resolve({...e.defaultHeaders,...t})}onReceiveResponse(e){const t=this.uppy.getState().companion||{},n=this.opts.companionUrl,{headers:r}=e;return r.has("i-am")&&r.get("i-am")!==t[n]&&this.uppy.setState({companion:{...t,[n]:r.get("i-am")}}),e}preflight(e){return this.preflightDone?Promise.resolve(this.allowedHeaders.slice()):fetch(fm(this,um)[um](e),{method:"OPTIONS"}).then((e=>(e.headers.has("access-control-allow-headers")&&(this.allowedHeaders=e.headers.get("access-control-allow-headers").split(",").map((e=>e.trim().toLowerCase()))),this.preflightDone=!0,this.allowedHeaders.slice()))).catch((e=>(this.uppy.log(`[CompanionClient] unable to make preflight request ${e}`,"warning"),this.preflightDone=!0,this.allowedHeaders.slice())))}preflightAndHeaders(e){return Promise.all([this.preflight(e),this.headers()]).then((e=>{let[t,n]=e;return Object.keys(n).forEach((e=>{t.includes(e.toLowerCase())||(this.uppy.log(`[CompanionClient] excluding disallowed header ${e}`),delete n[e])})),n}))}get(e,t){return this.preflightAndHeaders(e).then((t=>rm(fm(this,um)[um](e),{method:"get",headers:t,credentials:this.opts.companionCookiesRule||"same-origin"}))).then(fm(this,am)[am](t)).then(hm).catch(fm(this,sm)[sm]("get",e))}post(e,t,n){const r="post";return this.preflightAndHeaders(e).then((n=>rm(fm(this,um)[um](e),{method:r,headers:n,credentials:this.opts.companionCookiesRule||"same-origin",body:JSON.stringify(t)}))).then(fm(this,am)[am](n)).then(hm).catch(fm(this,sm)[sm](r,e))}delete(e,t,n){const r="delete";return this.preflightAndHeaders(e).then((n=>rm(`${this.hostname}/${e}`,{method:r,headers:n,credentials:this.opts.companionCookiesRule||"same-origin",body:t?JSON.stringify(t):null}))).then(fm(this,am)[am](n)).then(hm).catch(fm(this,sm)[sm](r,e))}},im.VERSION="2.0.4",im.defaultHeaders={Accept:"application/json","Content-Type":"application/json","Uppy-Versions":`@uppy/companion-client=${im.VERSION}`},cm);function vm(e){return/^(https?:|)\/\//.test(e)?e:`${this.hostname}/${e}`}function ym(e,t){return n=>{var r;if(null==(r=n)||!r.isAuthError){const r=new Error(`Could not ${e} ${fm(this,um)[um](t)}`);r.cause=n,n=r}return Promise.reject(n)}}var mm,bm,wm,Em,Am,Sm={setItem:(e,t)=>new Promise((n=>{localStorage.setItem(e,t),n()})),getItem:e=>Promise.resolve(localStorage.getItem(e)),removeItem:e=>new Promise((t=>{localStorage.removeItem(e),t()}))};let Cm,xm;function Dm(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var Om=0;function km(e){return"__private_"+Om+++"_"+e}var Bm,Tm,Fm=(mm=km("queued"),bm=km("emitter"),wm=km("isOpen"),Em=km("socket"),Am=km("handleMessage"),Cm=Symbol.for("uppy test: getSocket"),xm=Symbol.for("uppy test: getQueued"),class{constructor(e){Object.defineProperty(this,mm,{writable:!0,value:[]}),Object.defineProperty(this,bm,{writable:!0,value:Bv()}),Object.defineProperty(this,wm,{writable:!0,value:!1}),Object.defineProperty(this,Em,{writable:!0,value:void 0}),Object.defineProperty(this,Am,{writable:!0,value:e=>{try{const t=JSON.parse(e.data);this.emit(t.action,t.payload)}catch(e){console.log(e)}}}),this.opts=e,e&&!1===e.autoOpen||this.open()}get isOpen(){return Dm(this,wm)[wm]}[Cm](){return Dm(this,Em)[Em]}[xm](){return Dm(this,mm)[mm]}open(){Dm(this,Em)[Em]=new WebSocket(this.opts.target),Dm(this,Em)[Em].onopen=()=>{for(Dm(this,wm)[wm]=!0;Dm(this,mm)[mm].length>0&&Dm(this,wm)[wm];){const e=Dm(this,mm)[mm].shift();this.send(e.action,e.payload)}},Dm(this,Em)[Em].onclose=()=>{Dm(this,wm)[wm]=!1},Dm(this,Em)[Em].onmessage=Dm(this,Am)[Am]}close(){var e;null==(e=Dm(this,Em)[Em])||e.close()}send(e,t){Dm(this,wm)[wm]?Dm(this,Em)[Em].send(JSON.stringify({action:e,payload:t})):Dm(this,mm)[mm].push({action:e,payload:t})}on(e,t){Dm(this,bm)[bm].on(e,t)}emit(e,t){Dm(this,bm)[bm].emit(e,t)}once(e,t){Dm(this,bm)[bm].once(e,t)}}),_m={RequestClient:gm,Provider:class extends gm{constructor(e,t){super(e,t),this.provider=t.provider,this.id=this.provider,this.name=this.opts.name||(()=>this.id.split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" "))(),this.pluginId=this.opts.pluginId,this.tokenKey=`companion-${this.pluginId}-auth-token`,this.companionKeysParams=this.opts.companionKeysParams,this.preAuthToken=null}headers(){return Promise.all([super.headers(),this.getAuthToken()]).then((e=>{let[t,n]=e;const r={};return n&&(r["uppy-auth-token"]=n),this.companionKeysParams&&(r["uppy-credentials-params"]=btoa(JSON.stringify({params:this.companionKeysParams}))),{...t,...r}}))}onReceiveResponse(e){e=super.onReceiveResponse(e);const t=this.uppy.getPlugin(this.pluginId),n=t.getPluginState().authenticated?401!==e.status:e.status<400;return t.setPluginState({authenticated:n}),e}setAuthToken(e){return this.uppy.getPlugin(this.pluginId).storage.setItem(this.tokenKey,e)}getAuthToken(){return this.uppy.getPlugin(this.pluginId).storage.getItem(this.tokenKey)}authUrl(e){return void 0===e&&(e={}),this.preAuthToken&&(e.uppyPreAuthToken=this.preAuthToken),`${this.hostname}/${this.id}/connect?${new URLSearchParams(e)}`}fileUrl(e){return`${this.hostname}/${this.id}/get/${e}`}fetchPreAuthToken(){return this.companionKeysParams?this.post(`${this.id}/preauth/`,{params:this.companionKeysParams}).then((e=>{this.preAuthToken=e.token})).catch((e=>{this.uppy.log(`[CompanionClient] unable to fetch preAuthToken ${e}`,"warning")})):Promise.resolve()}list(e){return this.get(`${this.id}/list/${e||""}`)}logout(){return this.get(`${this.id}/logout`).then((e=>Promise.all([e,this.uppy.getPlugin(this.pluginId).storage.removeItem(this.tokenKey)]))).then((e=>{let[t]=e;return t}))}static initPlugin(e,t,n){if(e.type="acquirer",e.files=[],n&&(e.opts={...n,...t}),t.serverUrl||t.serverPattern)throw new Error("`serverUrl` and `serverPattern` have been renamed to `companionUrl` and `companionAllowedHosts` respectively in the 0.30.5 release. Please consult the docs (for example, https://uppy.io/docs/instagram/ for the Instagram plugin) and use the updated options.`");if(t.companionAllowedHosts){const n=t.companionAllowedHosts;if(!("string"==typeof n||Array.isArray(n)||n instanceof RegExp))throw new TypeError(`${e.id}: the option "companionAllowedHosts" must be one of string, Array, RegExp`);e.opts.companionAllowedHosts=n}else/^(?!https?:\/\/).*$/i.test(t.companionUrl)?e.opts.companionAllowedHosts=`https://${t.companionUrl.replace(/^\/\//,"")}`:e.opts.companionAllowedHosts=new URL(t.companionUrl).origin;e.storage=e.opts.storage||Sm}},SearchProvider:class extends gm{constructor(e,t){super(e,t),this.provider=t.provider,this.id=this.provider,this.name=this.opts.name||(()=>this.id.split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" "))(),this.pluginId=this.opts.pluginId}fileUrl(e){return`${this.hostname}/search/${this.id}/get/${e}`}search(e,t){return t=t?`&${t}`:"",this.get(`search/${this.id}/list?q=${encodeURIComponent(e)}${t}`)}},Socket:Fm},Pm=Fh((function(e,t,n){const{progress:r,bytesUploaded:o,bytesTotal:i}=t;r&&(e.uppy.log(`Upload progress: ${r}`),e.uppy.emit("upload-progress",n,{uploader:e,bytesUploaded:o,bytesTotal:i}))}),300,{leading:!0,trailing:!0});function jm(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var Nm=0;function Rm(e){return"__private_"+Nm+++"_"+e}var Im=(Bm=Rm("emitter"),Tm=Rm("events"),class{constructor(e){Object.defineProperty(this,Bm,{writable:!0,value:void 0}),Object.defineProperty(this,Tm,{writable:!0,value:[]}),jm(this,Bm)[Bm]=e}on(e,t){return jm(this,Tm)[Tm].push([e,t]),jm(this,Bm)[Bm].on(e,t)}remove(){for(const[e,t]of jm(this,Tm)[Tm].splice(0))jm(this,Bm)[Bm].off(e,t)}});function Lm(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var Mm=0;function zm(e){return"__private_"+Mm+++"_"+e}var $m=zm("aliveTimer"),Hm=zm("isDone"),Um=zm("onTimedOut"),Vm=zm("timeout"),qm=class{constructor(e,t){Object.defineProperty(this,$m,{writable:!0,value:void 0}),Object.defineProperty(this,Hm,{writable:!0,value:!1}),Object.defineProperty(this,Um,{writable:!0,value:void 0}),Object.defineProperty(this,Vm,{writable:!0,value:void 0}),Lm(this,Vm)[Vm]=e,Lm(this,Um)[Um]=t}progress(){Lm(this,Hm)[Hm]||Lm(this,Vm)[Vm]>0&&(clearTimeout(Lm(this,$m)[$m]),Lm(this,$m)[$m]=setTimeout(Lm(this,Um)[Um],Lm(this,Vm)[Vm]))}done(){Lm(this,Hm)[Hm]||(clearTimeout(Lm(this,$m)[$m]),Lm(this,$m)[$m]=null,Lm(this,Hm)[Hm]=!0)}};function Wm(e,t){if(!Object.prototype.hasOwnProperty.call(e,t))throw new TypeError("attempted to use private field on non-instance");return e}var Gm=0;function Km(e){return"__private_"+Gm+++"_"+e}var Ym=Km("activeRequests"),Xm=Km("queuedHandlers"),Jm=Km("call"),Zm=Km("queueNext"),Qm=Km("next"),eb=Km("queue"),tb=Km("dequeue");function nb(e){Wm(this,Ym)[Ym]+=1;let t,n=!1;try{t=e()}catch(e){throw Wm(this,Ym)[Ym]-=1,e}return{abort:()=>{n||(n=!0,Wm(this,Ym)[Ym]-=1,t(),Wm(this,Zm)[Zm]())},done:()=>{n||(n=!0,Wm(this,Ym)[Ym]-=1,Wm(this,Zm)[Zm]())}}}function rb(){queueMicrotask((()=>Wm(this,Qm)[Qm]()))}function ob(){if(Wm(this,Ym)[Ym]>=this.limit)return;if(0===Wm(this,Xm)[Xm].length)return;const e=Wm(this,Xm)[Xm].shift(),t=Wm(this,Jm)[Jm](e.fn);e.abort=t.abort,e.done=t.done}function ib(e,t){void 0===t&&(t={});const n={fn:e,priority:t.priority||0,abort:()=>{Wm(this,tb)[tb](n)},done:()=>{throw new Error("Cannot mark a queued request as done: this indicates a bug")}},r=Wm(this,Xm)[Xm].findIndex((e=>n.priority>e.priority));return-1===r?Wm(this,Xm)[Xm].push(n):Wm(this,Xm)[Xm].splice(r,0,n),n}function ab(e){const t=Wm(this,Xm)[Xm].indexOf(e);-1!==t&&Wm(this,Xm)[Xm].splice(t,1)}var ub,sb,cb={RateLimitedQueue:class{constructor(e){Object.defineProperty(this,tb,{value:ab}),Object.defineProperty(this,eb,{value:ib}),Object.defineProperty(this,Qm,{value:ob}),Object.defineProperty(this,Zm,{value:rb}),Object.defineProperty(this,Jm,{value:nb}),Object.defineProperty(this,Ym,{writable:!0,value:0}),Object.defineProperty(this,Xm,{writable:!0,value:[]}),this.limit="number"!=typeof e||0===e?1/0:e}run(e,t){return Wm(this,Ym)[Ym]<this.limit?Wm(this,Jm)[Jm](e):Wm(this,eb)[eb](e,t)}wrapPromiseFunction(e,t){var n=this;return function(){for(var r=arguments.length,o=new Array(r),i=0;i<r;i++)o[i]=arguments[i];let a;const u=new Promise(((r,i)=>{a=n.run((()=>{let t,n;try{n=Promise.resolve(e(...o))}catch(e){n=Promise.reject(e)}return n.then((e=>{t?i(t):(a.done(),r(e))}),(e=>{t?i(t):(a.done(),i(e))})),()=>{t=new Error("Cancelled")}}),t)}));return u.abort=()=>{a.abort()},u}}},internalRateLimitedQueue:Symbol("__queue")},lb=function(e){return!!e&&(0!==e.readyState&&4!==e.readyState||0===e.status)},fb={strings:{timedOut:"Upload stalled for %{seconds} seconds, aborting."}};const{nanoid:db}=Yv,{Provider:pb,RequestClient:hb,Socket:gb}=_m,{RateLimitedQueue:vb,internalRateLimitedQueue:yb}=cb;function mb(e,t){let n=t;return n||(n=new Error("Upload error")),"string"==typeof n&&(n=new Error(n)),n instanceof Error||(n=Object.assign(new Error("Upload error"),{data:n})),lb(e)?(n=new nm(n,e),n):(n.request=e,n)}function bb(e){return e.data.slice(0,e.data.size,e.meta.type)}var wb=(sb=ub=class extends Hy{constructor(e,t){super(e,t),this.type="uploader",this.id=this.opts.id||"XHRUpload",this.title="XHRUpload",this.defaultLocale=fb;const n={formData:!0,fieldName:t.bundle?"files[]":"file",method:"post",metaFields:null,responseUrlFieldName:"url",bundle:!1,headers:{},timeout:3e4,limit:5,withCredentials:!1,responseType:"",getResponseData(t){let n={};try{n=JSON.parse(t)}catch(t){e.log(t)}return n},getResponseError(e,t){let n=new Error("Upload error");return lb(t)&&(n=new nm(n,t)),n},validateStatus:e=>e>=200&&e<300};if(this.opts={...n,...t},this.i18nInit(),this.handleUpload=this.handleUpload.bind(this),yb in this.opts?this.requests=this.opts[yb]:this.requests=new vb(this.opts.limit),this.opts.bundle&&!this.opts.formData)throw new Error("`opts.formData` must be true when `opts.bundle` is enabled.");this.uploaderEvents=Object.create(null)}getOptions(e){const t=this.uppy.getState().xhrUpload,{headers:n}=this.opts,r={...this.opts,...t||{},...e.xhrUpload||{},headers:{}};return"function"==typeof n?r.headers=n(e):Object.assign(r.headers,this.opts.headers),t&&Object.assign(r.headers,t.headers),e.xhrUpload&&Object.assign(r.headers,e.xhrUpload.headers),r}addMetadata(e,t,n){(Array.isArray(n.metaFields)?n.metaFields:Object.keys(t)).forEach((n=>{e.append(n,t[n])}))}createFormDataUpload(e,t){const n=new FormData;this.addMetadata(n,e.meta,t);const r=bb(e);return e.name?n.append(t.fieldName,r,e.meta.name):n.append(t.fieldName,r),n}createBundledUpload(e,t){const n=new FormData,{meta:r}=this.uppy.getState();return this.addMetadata(n,r,t),e.forEach((e=>{const t=this.getOptions(e),r=bb(e);e.name?n.append(t.fieldName,r,e.name):n.append(t.fieldName,r)})),n}upload(e,t,n){const r=this.getOptions(e);return this.uppy.log(`uploading ${t} of ${n}`),new Promise(((t,n)=>{this.uppy.emit("upload-started",e);const o=r.formData?this.createFormDataUpload(e,r):e.data,i=new XMLHttpRequest;this.uploaderEvents[e.id]=new Im(this.uppy);const a=new qm(r.timeout,(()=>{i.abort(),s.done();const t=new Error(this.i18n("timedOut",{seconds:Math.ceil(r.timeout/1e3)}));this.uppy.emit("upload-error",e,t),n(t)})),u=db();i.upload.addEventListener("loadstart",(()=>{this.uppy.log(`[XHRUpload] ${u} started`)})),i.upload.addEventListener("progress",(t=>{this.uppy.log(`[XHRUpload] ${u} progress: ${t.loaded} / ${t.total}`),a.progress(),t.lengthComputable&&this.uppy.emit("upload-progress",e,{uploader:this,bytesUploaded:t.loaded,bytesTotal:t.total})})),i.addEventListener("load",(o=>{if(this.uppy.log(`[XHRUpload] ${u} finished`),a.done(),s.done(),this.uploaderEvents[e.id]&&(this.uploaderEvents[e.id].remove(),this.uploaderEvents[e.id]=null),r.validateStatus(o.target.status,i.responseText,i)){const n=r.getResponseData(i.responseText,i),a=n[r.responseUrlFieldName],u={status:o.target.status,body:n,uploadURL:a};return this.uppy.emit("upload-success",e,u),a&&this.uppy.log(`Download ${e.name} from ${a}`),t(e)}const c=r.getResponseData(i.responseText,i),l=mb(i,r.getResponseError(i.responseText,i)),f={status:o.target.status,body:c};return this.uppy.emit("upload-error",e,l,f),n(l)})),i.addEventListener("error",(()=>{this.uppy.log(`[XHRUpload] ${u} errored`),a.done(),s.done(),this.uploaderEvents[e.id]&&(this.uploaderEvents[e.id].remove(),this.uploaderEvents[e.id]=null);const t=mb(i,r.getResponseError(i.responseText,i));return this.uppy.emit("upload-error",e,t),n(t)})),i.open(r.method.toUpperCase(),r.endpoint,!0),i.withCredentials=r.withCredentials,""!==r.responseType&&(i.responseType=r.responseType);const s=this.requests.run((()=>{this.uppy.emit("upload-started",e);const t=this.getOptions(e);return Object.keys(t.headers).forEach((e=>{i.setRequestHeader(e,t.headers[e])})),i.send(o),()=>{a.done(),i.abort()}}));this.onFileRemove(e.id,(()=>{s.abort(),n(new Error("File removed"))})),this.onCancelAll(e.id,(()=>{s.abort(),n(new Error("Upload cancelled"))}))}))}uploadRemote(e){const t=this.getOptions(e);return new Promise(((n,r)=>{this.uppy.emit("upload-started",e);const o={};(Array.isArray(t.metaFields)?t.metaFields:Object.keys(e.meta)).forEach((t=>{o[t]=e.meta[t]})),new(e.remote.providerOptions.provider?pb:hb)(this.uppy,e.remote.providerOptions).post(e.remote.url,{...e.remote.body,endpoint:t.endpoint,size:e.data.size,fieldname:t.fieldName,metadata:o,httpMethod:t.method,useFormData:t.formData,headers:t.headers}).then((o=>{const{token:i}=o,a=function(e){const t=/^(?:https?:\/\/|\/\/)?(?:[^@\n]+@)?(?:www\.)?([^\n]+)/i.exec(e)[1];return`${/^http:\/\//i.test(e)?"ws":"wss"}://${t}`}(e.remote.companionUrl),u=new gb({target:`${a}/api/${i}`,autoOpen:!1});this.uploaderEvents[e.id]=new Im(this.uppy),this.onFileRemove(e.id,(()=>{u.send("cancel",{}),s.abort(),n(`upload ${e.id} was removed`)})),this.onCancelAll(e.id,(()=>{u.send("cancel",{}),s.abort(),n(`upload ${e.id} was canceled`)})),this.onRetry(e.id,(()=>{u.send("pause",{}),u.send("resume",{})})),this.onRetryAll(e.id,(()=>{u.send("pause",{}),u.send("resume",{})})),u.on("progress",(t=>Pm(this,t,e))),u.on("success",(r=>{const o=t.getResponseData(r.response.responseText,r.response),i=o[t.responseUrlFieldName],a={status:r.response.status,body:o,uploadURL:i};return this.uppy.emit("upload-success",e,a),s.done(),this.uploaderEvents[e.id]&&(this.uploaderEvents[e.id].remove(),this.uploaderEvents[e.id]=null),n()})),u.on("error",(n=>{const o=n.response,i=o?t.getResponseError(o.responseText,o):Object.assign(new Error(n.error.message),{cause:n.error});this.uppy.emit("upload-error",e,i),s.done(),this.uploaderEvents[e.id]&&(this.uploaderEvents[e.id].remove(),this.uploaderEvents[e.id]=null),r(i)}));const s=this.requests.run((()=>(u.open(),e.isPaused&&u.send("pause",{}),()=>u.close())))})).catch((t=>{this.uppy.emit("upload-error",e,t),r(t)}))}))}uploadBundle(e){return new Promise(((t,n)=>{const{endpoint:r}=this.opts,{method:o}=this.opts,i=this.uppy.getState().xhrUpload,a=this.createBundledUpload(e,{...this.opts,...i||{}}),u=new XMLHttpRequest,s=new qm(this.opts.timeout,(()=>{u.abort();const e=new Error(this.i18n("timedOut",{seconds:Math.ceil(this.opts.timeout/1e3)}));c(e),n(e)})),c=t=>{e.forEach((e=>{this.uppy.emit("upload-error",e,t)}))};u.upload.addEventListener("loadstart",(()=>{this.uppy.log("[XHRUpload] started uploading bundle"),s.progress()})),u.upload.addEventListener("progress",(t=>{s.progress(),t.lengthComputable&&e.forEach((e=>{this.uppy.emit("upload-progress",e,{uploader:this,bytesUploaded:t.loaded/t.total*e.size,bytesTotal:e.size})}))})),u.addEventListener("load",(r=>{if(s.done(),this.opts.validateStatus(r.target.status,u.responseText,u)){const n=this.opts.getResponseData(u.responseText,u),o={status:r.target.status,body:n};return e.forEach((e=>{this.uppy.emit("upload-success",e,o)})),t()}const o=this.opts.getResponseError(u.responseText,u)||new Error("Upload error");return o.request=u,c(o),n(o)})),u.addEventListener("error",(()=>{s.done();const e=this.opts.getResponseError(u.responseText,u)||new Error("Upload error");return c(e),n(e)})),this.uppy.on("cancel-all",(()=>{s.done(),u.abort()})),u.open(o.toUpperCase(),r,!0),u.withCredentials=this.opts.withCredentials,""!==this.opts.responseType&&(u.responseType=this.opts.responseType),Object.keys(this.opts.headers).forEach((e=>{u.setRequestHeader(e,this.opts.headers[e])})),u.send(a),e.forEach((e=>{this.uppy.emit("upload-started",e)}))}))}uploadFiles(e){const t=e.map(((t,n)=>{const r=parseInt(n,10)+1,o=e.length;return t.error?Promise.reject(new Error(t.error)):t.isRemote?this.uploadRemote(t,r,o):this.upload(t,r,o)}));return function(e){const t=[],n=[];function r(e){t.push(e)}function o(e){n.push(e)}return Promise.all(e.map((e=>e.then(r,o)))).then((()=>({successful:t,failed:n})))}(t)}onFileRemove(e,t){this.uploaderEvents[e].on("file-removed",(n=>{e===n.id&&t(n.id)}))}onRetry(e,t){this.uploaderEvents[e].on("upload-retry",(n=>{e===n&&t()}))}onRetryAll(e,t){this.uploaderEvents[e].on("retry-all",(()=>{this.uppy.getFile(e)&&t()}))}onCancelAll(e,t){this.uploaderEvents[e].on("cancel-all",(()=>{this.uppy.getFile(e)&&t()}))}handleUpload(e){if(0===e.length)return this.uppy.log("[XHRUpload] No files to upload!"),Promise.resolve();0!==this.opts.limit||this.opts[yb]||this.uppy.log("[XHRUpload] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/xhr-upload/#limit-0","warning"),this.uppy.log("[XHRUpload] Uploading...");const t=e.map((e=>this.uppy.getFile(e)));if(this.opts.bundle){if(t.some((e=>e.isRemote)))throw new Error("Canât upload remote files when the `bundle: true` option is set");if("function"==typeof this.opts.headers)throw new TypeError("`headers` may not be a function when the `bundle: true` option is set");return this.uploadBundle(t)}return this.uploadFiles(t).then((()=>null))}install(){if(this.opts.bundle){const{capabilities:e}=this.uppy.getState();this.uppy.setState({capabilities:{...e,individualCancellation:!1}})}this.uppy.addUploader(this.handleUpload)}uninstall(){if(this.opts.bundle){const{capabilities:e}=this.uppy.getState();this.uppy.setState({capabilities:{...e,individualCancellation:!0}})}this.uppy.removeUploader(this.handleUpload)}},ub.VERSION="2.0.6",sb),Eb="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function Ab(e){var t={exports:{}};return e(t,t.exports),t.exports}var Sb,Cb,xb=function(e){return e&&e.Math==Math&&e},Db=xb("object"==typeof globalThis&&globalThis)||xb("object"==typeof window&&window)||xb("object"==typeof self&&self)||xb("object"==typeof Eb&&Eb)||function(){return this}()||Function("return this")(),Ob=Object.defineProperty,kb=function(e,t){try{Ob(Db,e,{value:t,configurable:!0,writable:!0})}catch(n){Db[e]=t}return t},Bb=Db["__core-js_shared__"]||kb("__core-js_shared__",{}),Tb=Ab((function(e){(e.exports=function(e,t){return Bb[e]||(Bb[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"global",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),Fb=Function.prototype,_b=Fb.bind,Pb=Fb.call,jb=_b&&_b.bind(Pb),Nb=_b?function(e){return e&&jb(Pb,e)}:function(e){return e&&function(){return Pb.apply(e,arguments)}},Rb=Db.TypeError,Ib=function(e){if(null==e)throw Rb("Can't call method on "+e);return e},Lb=Db.Object,Mb=function(e){return Lb(Ib(e))},zb=Nb({}.hasOwnProperty),$b=Object.hasOwn||function(e,t){return zb(Mb(e),t)},Hb=0,Ub=Math.random(),Vb=Nb(1..toString),qb=function(e){return"Symbol("+(void 0===e?"":e)+")_"+Vb(++Hb+Ub,36)},Wb=function(e){return"function"==typeof e},Gb=function(e,t){return arguments.length<2?function(e){return Wb(e)?e:void 0}(Db[e]):Db[e]&&Db[e][t]},Kb=Gb("navigator","userAgent")||"",Yb=Db.process,Xb=Db.Deno,Jb=Yb&&Yb.versions||Xb&&Xb.version,Zb=Jb&&Jb.v8;Zb&&(Cb=(Sb=Zb.split("."))[0]>0&&Sb[0]<4?1:+(Sb[0]+Sb[1])),!Cb&&Kb&&(!(Sb=Kb.match(/Edge\/(\d+)/))||Sb[1]>=74)&&(Sb=Kb.match(/Chrome\/(\d+)/))&&(Cb=+Sb[1]);var Qb=Cb,ew=function(e){try{return!!e()}catch(e){return!0}},tw=!!Object.getOwnPropertySymbols&&!ew((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&Qb&&Qb<41})),nw=tw&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,rw=Tb("wks"),ow=Db.Symbol,iw=ow&&ow.for,aw=nw?ow:ow&&ow.withoutSetter||qb,uw=function(e){if(!$b(rw,e)||!tw&&"string"!=typeof rw[e]){var t="Symbol."+e;tw&&$b(ow,e)?rw[e]=ow[e]:rw[e]=nw&&iw?iw(t):aw(t)}return rw[e]},sw={};sw[uw("toStringTag")]="z";var cw="[object z]"===String(sw),lw=!ew((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),fw=function(e){return"object"==typeof e?null!==e:Wb(e)},dw=Db.document,pw=fw(dw)&&fw(dw.createElement),hw=function(e){return pw?dw.createElement(e):{}},gw=!lw&&!ew((function(){return 7!=Object.defineProperty(hw("div"),"a",{get:function(){return 7}}).a})),vw=Db.String,yw=Db.TypeError,mw=function(e){if(fw(e))return e;throw yw(vw(e)+" is not an object")},bw=Function.prototype.call,ww=bw.bind?bw.bind(bw):function(){return bw.apply(bw,arguments)},Ew=Nb({}.isPrototypeOf),Aw=Db.Object,Sw=nw?function(e){return"symbol"==typeof e}:function(e){var t=Gb("Symbol");return Wb(t)&&Ew(t.prototype,Aw(e))},Cw=Db.String,xw=function(e){try{return Cw(e)}catch(e){return"Object"}},Dw=Db.TypeError,Ow=function(e){if(Wb(e))return e;throw Dw(xw(e)+" is not a function")},kw=function(e,t){var n=e[t];return null==n?void 0:Ow(n)},Bw=Db.TypeError,Tw=Db.TypeError,Fw=uw("toPrimitive"),_w=function(e){var t=function(e,t){if(!fw(e)||Sw(e))return e;var n,r=kw(e,Fw);if(r){if(void 0===t&&(t="default"),n=ww(r,e,t),!fw(n)||Sw(n))return n;throw Tw("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&Wb(n=e.toString)&&!fw(r=ww(n,e)))return r;if(Wb(n=e.valueOf)&&!fw(r=ww(n,e)))return r;if("string"!==t&&Wb(n=e.toString)&&!fw(r=ww(n,e)))return r;throw Bw("Can't convert object to primitive value")}(e,t)}(e,"string");return Sw(t)?t:t+""},Pw=Db.TypeError,jw=Object.defineProperty,Nw={f:lw?jw:function(e,t,n){if(mw(e),t=_w(t),mw(n),gw)try{return jw(e,t,n)}catch(e){}if("get"in n||"set"in n)throw Pw("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},Rw=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},Iw=lw?function(e,t,n){return Nw.f(e,t,Rw(1,n))}:function(e,t,n){return e[t]=n,e},Lw=Nb(Function.toString);Wb(Bb.inspectSource)||(Bb.inspectSource=function(e){return Lw(e)});var Mw,zw,$w,Hw=Bb.inspectSource,Uw=Db.WeakMap,Vw=Wb(Uw)&&/native code/.test(Hw(Uw)),qw=Tb("keys"),Ww=function(e){return qw[e]||(qw[e]=qb(e))},Gw={},Kw=Db.TypeError,Yw=Db.WeakMap;if(Vw||Bb.state){var Xw=Bb.state||(Bb.state=new Yw),Jw=Nb(Xw.get),Zw=Nb(Xw.has),Qw=Nb(Xw.set);Mw=function(e,t){if(Zw(Xw,e))throw new Kw("Object already initialized");return t.facade=e,Qw(Xw,e,t),t},zw=function(e){return Jw(Xw,e)||{}},$w=function(e){return Zw(Xw,e)}}else{var eE=Ww("state");Gw[eE]=!0,Mw=function(e,t){if($b(e,eE))throw new Kw("Object already initialized");return t.facade=e,Iw(e,eE,t),t},zw=function(e){return $b(e,eE)?e[eE]:{}},$w=function(e){return $b(e,eE)}}var tE={set:Mw,get:zw,has:$w,enforce:function(e){return $w(e)?zw(e):Mw(e,{})},getterFor:function(e){return function(t){var n;if(!fw(t)||(n=zw(t)).type!==e)throw Kw("Incompatible receiver, "+e+" required");return n}}},nE=Function.prototype,rE=lw&&Object.getOwnPropertyDescriptor,oE=$b(nE,"name"),iE={EXISTS:oE,PROPER:oE&&"something"===function(){}.name,CONFIGURABLE:oE&&(!lw||lw&&rE(nE,"name").configurable)},aE=Ab((function(e){var t=iE.CONFIGURABLE,n=tE.get,r=tE.enforce,o=String(String).split("String");(e.exports=function(e,n,i,a){var u,s=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,l=!!a&&!!a.noTargetGet,f=a&&void 0!==a.name?a.name:n;Wb(i)&&("Symbol("===String(f).slice(0,7)&&(f="["+String(f).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!$b(i,"name")||t&&i.name!==f)&&Iw(i,"name",f),(u=r(i)).source||(u.source=o.join("string"==typeof f?f:""))),e!==Db?(s?!l&&e[n]&&(c=!0):delete e[n],c?e[n]=i:Iw(e,n,i)):c?e[n]=i:kb(n,i)})(Function.prototype,"toString",(function(){return Wb(this)&&n(this).source||Hw(this)}))})),uE=Nb({}.toString),sE=Nb("".slice),cE=function(e){return sE(uE(e),8,-1)},lE=uw("toStringTag"),fE=Db.Object,dE="Arguments"==cE(function(){return arguments}()),pE=cw?cE:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=fE(e),lE))?n:dE?cE(t):"Object"==(r=cE(t))&&Wb(t.callee)?"Arguments":r},hE=cw?{}.toString:function(){return"[object "+pE(this)+"]"};cw||aE(Object.prototype,"toString",hE,{unsafe:!0});var gE={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},vE=hw("span").classList,yE=vE&&vE.constructor&&vE.constructor.prototype,mE=yE===Object.prototype?void 0:yE,bE=Nb(Nb.bind),wE=function(e,t){return Ow(e),void 0===t?e:bE?bE(e,t):function(){return e.apply(t,arguments)}},EE=Db.Object,AE=Nb("".split),SE=ew((function(){return!EE("z").propertyIsEnumerable(0)}))?function(e){return"String"==cE(e)?AE(e,""):EE(e)}:EE,CE=Math.ceil,xE=Math.floor,DE=function(e){var t=+e;return t!=t||0===t?0:(t>0?xE:CE)(t)},OE=Math.min,kE=function(e){return e>0?OE(DE(e),9007199254740991):0},BE=function(e){return kE(e.length)},TE=Array.isArray||function(e){return"Array"==cE(e)},FE=function(){},_E=[],PE=Gb("Reflect","construct"),jE=/^\s*(?:class|function)\b/,NE=Nb(jE.exec),RE=!jE.exec(FE),IE=function(e){if(!Wb(e))return!1;try{return PE(FE,_E,e),!0}catch(e){return!1}},LE=!PE||ew((function(){var e;return IE(IE.call)||!IE(Object)||!IE((function(){e=!0}))||e}))?function(e){if(!Wb(e))return!1;switch(pE(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return RE||!!NE(jE,Hw(e))}:IE,ME=uw("species"),zE=Db.Array,$E=function(e,t){return new(function(e){var t;return TE(e)&&(t=e.constructor,(LE(t)&&(t===zE||TE(t.prototype))||fw(t)&&null===(t=t[ME]))&&(t=void 0)),void 0===t?zE:t}(e))(0===t?0:t)},HE=Nb([].push),UE=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=Mb(s),g=SE(h),v=wE(c,l),y=BE(g),m=0,b=f||$E,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:HE(w,d)}else switch(e){case 4:return!1;case 7:HE(w,d)}return i?-1:r||o?o:w}},VE={forEach:UE(0),map:UE(1),filter:UE(2),some:UE(3),every:UE(4),find:UE(5),findIndex:UE(6),filterReject:UE(7)},qE=function(e,t){var n=[][e];return!!n&&ew((function(){n.call(null,t||function(){throw 1},1)}))},WE=VE.forEach,GE=qE("forEach")?[].forEach:function(e){return WE(this,e,arguments.length>1?arguments[1]:void 0)},KE=function(e){if(e&&e.forEach!==GE)try{Iw(e,"forEach",GE)}catch(t){e.forEach=GE}};for(var YE in gE)gE[YE]&&KE(Db[YE]&&Db[YE].prototype);KE(mE);var XE={}.propertyIsEnumerable,JE=Object.getOwnPropertyDescriptor,ZE=JE&&!XE.call({1:2},1)?function(e){var t=JE(this,e);return!!t&&t.enumerable}:XE,QE={f:ZE},eA=function(e){return SE(Ib(e))},tA=Object.getOwnPropertyDescriptor,nA={f:lw?tA:function(e,t){if(e=eA(e),t=_w(t),gw)try{return tA(e,t)}catch(e){}if($b(e,t))return Rw(!ww(QE.f,e,t),e[t])}},rA=Math.max,oA=Math.min,iA=function(e,t){var n=DE(e);return n<0?rA(n+t,0):oA(n,t)},aA=function(e){return function(t,n,r){var o,i=eA(t),a=BE(i),u=iA(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},uA={includes:aA(!0),indexOf:aA(!1)},sA=uA.indexOf,cA=Nb([].push),lA=function(e,t){var n,r=eA(e),o=0,i=[];for(n in r)!$b(Gw,n)&&$b(r,n)&&cA(i,n);for(;t.length>o;)$b(r,n=t[o++])&&(~sA(i,n)||cA(i,n));return i},fA=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],dA=fA.concat("length","prototype"),pA={f:Object.getOwnPropertyNames||function(e){return lA(e,dA)}},hA={f:Object.getOwnPropertySymbols},gA=Nb([].concat),vA=Gb("Reflect","ownKeys")||function(e){var t=pA.f(mw(e)),n=hA.f;return n?gA(t,n(e)):t},yA=function(e,t){for(var n=vA(t),r=Nw.f,o=nA.f,i=0;i<n.length;i++){var a=n[i];$b(e,a)||r(e,a,o(t,a))}},mA=/#|\.prototype\./,bA=function(e,t){var n=EA[wA(e)];return n==SA||n!=AA&&(Wb(t)?ew(t):!!t)},wA=bA.normalize=function(e){return String(e).replace(mA,".").toLowerCase()},EA=bA.data={},AA=bA.NATIVE="N",SA=bA.POLYFILL="P",CA=bA,xA=nA.f,DA=function(e,t){var n,r,o,i,a,u=e.target,s=e.global,c=e.stat;if(n=s?Db:c?Db[u]||kb(u,{}):(Db[u]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(a=xA(n,r))&&a.value:n[r],!CA(s?r:u+(c?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;yA(i,o)}(e.sham||o&&o.sham)&&Iw(i,"sham",!0),aE(n,r,i,e)}},OA=Object.keys||function(e){return lA(e,fA)},kA=ew((function(){OA(1)}));function BA(e){return"[object Object]"===Object.prototype.toString.call(e)}DA({target:"Object",stat:!0,forced:kA},{keys:function(e){return OA(Mb(e))}});var TA={isHistory(e){return!1!==BA(t=e)&&(void 0===(n=t.constructor)||!1!==BA(r=n.prototype)&&!1!==r.hasOwnProperty("isPrototypeOf"))&&Array.isArray(e.redos)&&Array.isArray(e.undos)&&(0===e.redos.length||Df.isOperationList(e.redos[0]))&&(0===e.undos.length||Df.isOperationList(e.undos[0]));var t,n,r}},FA=new WeakMap,_A=new WeakMap,PA={isHistoryEditor:e=>TA.isHistory(e.history)&&yf.isEditor(e),isMerging:e=>_A.get(e),isSaving:e=>FA.get(e),redo(e){e.redo()},undo(e){e.undo()},withoutMerging(e,t){var n=PA.isMerging(e);_A.set(e,!1),t(),_A.set(e,n)},withoutSaving(e,t){var n=PA.isSaving(e);FA.set(e,!1),t(),FA.set(e,n)}},jA=Db.String,NA=function(e){if("Symbol"===pE(e))throw TypeError("Cannot convert a Symbol value to a string");return jA(e)},RA=function(){var e=mw(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},IA=iE.PROPER,LA=RegExp.prototype,MA=LA.toString,zA=Nb(RA),$A=ew((function(){return"/a/b"!=MA.call({source:"a",flags:"b"})})),HA=IA&&"toString"!=MA.name;($A||HA)&&aE(RegExp.prototype,"toString",(function(){var e=mw(this),t=NA(e.source),n=e.flags;return"/"+t+"/"+NA(void 0===n&&Ew(LA,e)&&!("flags"in LA)?zA(e):n)}),{unsafe:!0});var UA,VA=lw?Object.defineProperties:function(e,t){mw(e);for(var n,r=eA(t),o=OA(t),i=o.length,a=0;i>a;)Nw.f(e,n=o[a++],r[n]);return e},qA=Gb("document","documentElement"),WA=Ww("IE_PROTO"),GA=function(){},KA=function(e){return"<script>"+e+"<\/script>"},YA=function(e){e.write(KA("")),e.close();var t=e.parentWindow.Object;return e=null,t},XA=function(){try{UA=new ActiveXObject("htmlfile")}catch(e){}var e,t;XA="undefined"!=typeof document?document.domain&&UA?YA(UA):((t=hw("iframe")).style.display="none",qA.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(KA("document.F=Object")),e.close(),e.F):YA(UA);for(var n=fA.length;n--;)delete XA.prototype[fA[n]];return XA()};Gw[WA]=!0;var JA=Object.create||function(e,t){var n;return null!==e?(GA.prototype=mw(e),n=new GA,GA.prototype=null,n[WA]=e):n=XA(),void 0===t?n:VA(n,t)},ZA=uw("unscopables"),QA=Array.prototype;null==QA[ZA]&&Nw.f(QA,ZA,{configurable:!0,value:JA(null)});var eS=function(e){QA[ZA][e]=!0},tS=uA.includes;DA({target:"Array",proto:!0},{includes:function(e){return tS(this,e,arguments.length>1?arguments[1]:void 0)}}),eS("includes");var nS=uw("match"),rS=function(e){var t;return fw(e)&&(void 0!==(t=e[nS])?!!t:"RegExp"==cE(e))},oS=Db.TypeError,iS=function(e){if(rS(e))throw oS("The method doesn't accept regular expressions");return e},aS=uw("match"),uS=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[aS]=!1,"/./"[e](t)}catch(e){}}return!1},sS=Nb("".indexOf);DA({target:"String",proto:!0,forced:!uS("includes")},{includes:function(e){return!!~sS(NA(Ib(this)),NA(iS(e)),arguments.length>1?arguments[1]:void 0)}});var cS=/"/g,lS=Nb("".replace);DA({target:"String",proto:!0,forced:ew((function(){var e="".anchor('"');return e!==e.toLowerCase()||e.split('"').length>3}))},{anchor:function(e){return t=e,n=NA(Ib(this)),r="<a",(r+=' name="'+lS(NA(t),cS,"&quot;")+'"')+">"+n+"</a>";var t,n,r}});var fS=function(e,t,n){var r,o;mw(e);try{if(!(r=kw(e,"return"))){if("throw"===t)throw n;return n}r=ww(r,e)}catch(e){o=!0,r=e}if("throw"===t)throw n;if(o)throw r;return mw(r),n},dS=function(e,t,n,r){try{return r?t(mw(n)[0],n[1]):t(n)}catch(t){fS(e,"throw",t)}},pS={},hS=uw("iterator"),gS=Array.prototype,vS=function(e){return void 0!==e&&(pS.Array===e||gS[hS]===e)},yS=function(e,t,n){var r=_w(t);r in e?Nw.f(e,r,Rw(0,n)):e[r]=n},mS=uw("iterator"),bS=function(e){if(null!=e)return kw(e,mS)||kw(e,"@@iterator")||pS[pE(e)]},wS=Db.TypeError,ES=function(e,t){var n=arguments.length<2?bS(e):t;if(Ow(n))return mw(ww(n,e));throw wS(xw(e)+" is not iterable")},AS=Db.Array,SS=uw("iterator"),CS=!1;try{var xS=0,DS={next:function(){return{done:!!xS++}},return:function(){CS=!0}};DS[SS]=function(){return this},Array.from(DS,(function(){throw 2}))}catch(XD){}var OS=function(e,t){if(!t&&!CS)return!1;var n=!1;try{var r={};r[SS]=function(){return{next:function(){return{done:n=!0}}}},e(r)}catch(e){}return n},kS=!OS((function(e){Array.from(e)}));DA({target:"Array",stat:!0,forced:kS},{from:function(e){var t=Mb(e),n=LE(this),r=arguments.length,o=r>1?arguments[1]:void 0,i=void 0!==o;i&&(o=wE(o,r>2?arguments[2]:void 0));var a,u,s,c,l,f,d=bS(t),p=0;if(!d||this==AS&&vS(d))for(a=BE(t),u=n?new this(a):AS(a);a>p;p++)f=i?o(t[p],p):t[p],yS(u,p,f);else for(l=(c=ES(t,d)).next,u=n?new this:[];!(s=ww(l,c)).done;p++)f=i?dS(c,o,[s.value,p],!0):s.value,yS(u,p,f);return u.length=p,u}});var BS,TS,FS,_S=Nb("".charAt),PS=Nb("".charCodeAt),jS=Nb("".slice),NS=function(e){return function(t,n){var r,o,i=NA(Ib(t)),a=DE(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=PS(i,a))<55296||r>56319||a+1===u||(o=PS(i,a+1))<56320||o>57343?e?_S(i,a):r:e?jS(i,a,a+2):o-56320+(r-55296<<10)+65536}},RS={codeAt:NS(!1),charAt:NS(!0)},IS=!ew((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),LS=Ww("IE_PROTO"),MS=Db.Object,zS=MS.prototype,$S=IS?MS.getPrototypeOf:function(e){var t=Mb(e);if($b(t,LS))return t[LS];var n=t.constructor;return Wb(n)&&t instanceof n?n.prototype:t instanceof MS?zS:null},HS=uw("iterator"),US=!1;[].keys&&("next"in(FS=[].keys())?(TS=$S($S(FS)))!==Object.prototype&&(BS=TS):US=!0);var VS=null==BS||ew((function(){var e={};return BS[HS].call(e)!==e}));VS&&(BS={}),Wb(BS[HS])||aE(BS,HS,(function(){return this}));var qS={IteratorPrototype:BS,BUGGY_SAFARI_ITERATORS:US},WS=Nw.f,GS=uw("toStringTag"),KS=function(e,t,n){e&&!$b(e=n?e:e.prototype,GS)&&WS(e,GS,{configurable:!0,value:t})},YS=qS.IteratorPrototype,XS=function(){return this},JS=Db.String,ZS=Db.TypeError,QS=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Nb(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return mw(n),function(e){if("object"==typeof e||Wb(e))return e;throw ZS("Can't set "+JS(e)+" as a prototype")}(r),t?e(n,r):n.__proto__=r,n}}():void 0),eC=iE.PROPER,tC=iE.CONFIGURABLE,nC=qS.IteratorPrototype,rC=qS.BUGGY_SAFARI_ITERATORS,oC=uw("iterator"),iC=function(){return this},aC=function(e,t,n,r,o,i,a){!function(e,t,n){var r=t+" Iterator";e.prototype=JA(YS,{next:Rw(1,n)}),KS(e,r,!1),pS[r]=XS}(n,t,r);var u,s,c,l=function(e){if(e===o&&g)return g;if(!rC&&e in p)return p[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},f=t+" Iterator",d=!1,p=e.prototype,h=p[oC]||p["@@iterator"]||o&&p[o],g=!rC&&h||l(o),v="Array"==t&&p.entries||h;if(v&&(u=$S(v.call(new e)))!==Object.prototype&&u.next&&($S(u)!==nC&&(QS?QS(u,nC):Wb(u[oC])||aE(u,oC,iC)),KS(u,f,!0)),eC&&"values"==o&&h&&"values"!==h.name&&(tC?Iw(p,"name","values"):(d=!0,g=function(){return ww(h,this)})),o)if(s={values:l("values"),keys:i?g:l("keys"),entries:l("entries")},a)for(c in s)(rC||d||!(c in p))&&aE(p,c,s[c]);else DA({target:t,proto:!0,forced:rC||d},s);return p[oC]!==g&&aE(p,oC,g,{name:o}),pS[t]=g,s},uC=RS.charAt,sC=tE.set,cC=tE.getterFor("String Iterator");aC(String,"String",(function(e){sC(this,{type:"String Iterator",string:NA(e),index:0})}),(function(){var e,t=cC(this),n=t.string,r=t.index;return r>=n.length?{value:void 0,done:!0}:(e=uC(n,r),t.index+=e.length,{value:e,done:!1})}));var lC,fC=nA.f,dC=Nb("".endsWith),pC=Nb("".slice),hC=Math.min,gC=uS("endsWith"),vC=!(gC||(lC=fC(String.prototype,"endsWith"),!lC||lC.writable));DA({target:"String",proto:!0,forced:!vC&&!gC},{endsWith:function(e){var t=NA(Ib(this));iS(e);var n=arguments.length>1?arguments[1]:void 0,r=t.length,o=void 0===n?r:hC(kE(n),r),i=NA(e);return dC?dC(t,i,o):pC(t,o-i.length,o)===i}});var yC=Nb([].join),mC=SE!=Object,bC=qE("join",",");DA({target:"Array",proto:!0,forced:mC||!bC},{join:function(e){return yC(eA(this),void 0===e?",":e)}});var wC=uw("species"),EC=function(e){return Qb>=51||!ew((function(){var t=[];return(t.constructor={})[wC]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},AC=VE.map,SC=EC("map");DA({target:"Array",proto:!0,forced:!SC},{map:function(e){return AC(this,e,arguments.length>1?arguments[1]:void 0)}});var CC=Db.RegExp,xC=ew((function(){var e=CC("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),DC=xC||ew((function(){return!CC("a","y").sticky})),OC={BROKEN_CARET:xC||ew((function(){var e=CC("^r","gy");return e.lastIndex=2,null!=e.exec("str")})),MISSED_STICKY:DC,UNSUPPORTED_Y:xC},kC=Db.RegExp,BC=ew((function(){var e=kC(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)})),TC=Db.RegExp,FC=ew((function(){var e=TC("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")})),_C=tE.get,PC=Tb("native-string-replace",String.prototype.replace),jC=RegExp.prototype.exec,NC=jC,RC=Nb("".charAt),IC=Nb("".indexOf),LC=Nb("".replace),MC=Nb("".slice),zC=function(){var e=/a/,t=/b*/g;return ww(jC,e,"a"),ww(jC,t,"a"),0!==e.lastIndex||0!==t.lastIndex}(),$C=OC.BROKEN_CARET,HC=void 0!==/()??/.exec("")[1];(zC||HC||$C||BC||FC)&&(NC=function(e){var t,n,r,o,i,a,u,s=this,c=_C(s),l=NA(e),f=c.raw;if(f)return f.lastIndex=s.lastIndex,t=ww(NC,f,l),s.lastIndex=f.lastIndex,t;var d=c.groups,p=$C&&s.sticky,h=ww(RA,s),g=s.source,v=0,y=l;if(p&&(h=LC(h,"y",""),-1===IC(h,"g")&&(h+="g"),y=MC(l,s.lastIndex),s.lastIndex>0&&(!s.multiline||s.multiline&&"\n"!==RC(l,s.lastIndex-1))&&(g="(?: "+g+")",y=" "+y,v++),n=new RegExp("^(?:"+g+")",h)),HC&&(n=new RegExp("^"+g+"$(?!\\s)",h)),zC&&(r=s.lastIndex),o=ww(jC,p?n:s,y),p?o?(o.input=MC(o.input,v),o[0]=MC(o[0],v),o.index=s.lastIndex,s.lastIndex+=o[0].length):s.lastIndex=0:zC&&o&&(s.lastIndex=s.global?o.index+o[0].length:r),HC&&o&&o.length>1&&ww(PC,o[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&d)for(o.groups=a=JA(null),i=0;i<d.length;i++)a[(u=d[i])[0]]=o[u[1]];return o});var UC=NC;DA({target:"RegExp",proto:!0,forced:/./.exec!==UC},{exec:UC});var VC=Function.prototype,qC=VC.apply,WC=VC.bind,GC=VC.call,KC="object"==typeof Reflect&&Reflect.apply||(WC?GC.bind(qC):function(){return GC.apply(qC,arguments)}),YC=uw("species"),XC=RegExp.prototype,JC=function(e,t,n,r){var o=uw(e),i=!ew((function(){var t={};return t[o]=function(){return 7},7!=""[e](t)})),a=i&&!ew((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[YC]=function(){return n},n.flags="",n[o]=/./[o]),n.exec=function(){return t=!0,null},n[o](""),!t}));if(!i||!a||n){var u=Nb(/./[o]),s=t(o,""[e],(function(e,t,n,r,o){var a=Nb(e),s=t.exec;return s===UC||s===XC.exec?i&&!o?{done:!0,value:u(t,n,r)}:{done:!0,value:a(n,t,r)}:{done:!1}}));aE(String.prototype,e,s[0]),aE(XC,o,s[1])}r&&Iw(XC[o],"sham",!0)},ZC=RS.charAt,QC=function(e,t,n){return t+(n?ZC(e,t).length:1)},ex=Math.floor,tx=Nb("".charAt),nx=Nb("".replace),rx=Nb("".slice),ox=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,ix=/\$([$&'`]|\d{1,2})/g,ax=function(e,t,n,r,o,i){var a=n+e.length,u=r.length,s=ix;return void 0!==o&&(o=Mb(o),s=ox),nx(i,s,(function(i,s){var c;switch(tx(s,0)){case"$":return"$";case"&":return e;case"`":return rx(t,0,n);case"'":return rx(t,a);case"<":c=o[rx(s,1,-1)];break;default:var l=+s;if(0===l)return i;if(l>u){var f=ex(l/10);return 0===f?i:f<=u?void 0===r[f-1]?tx(s,1):r[f-1]+tx(s,1):i}c=r[l-1]}return void 0===c?"":c}))},ux=Db.TypeError,sx=function(e,t){var n=e.exec;if(Wb(n)){var r=ww(n,e,t);return null!==r&&mw(r),r}if("RegExp"===cE(e))return ww(UC,e,t);throw ux("RegExp#exec called on incompatible receiver")},cx=uw("replace"),lx=Math.max,fx=Math.min,dx=Nb([].concat),px=Nb([].push),hx=Nb("".indexOf),gx=Nb("".slice),vx="$0"==="a".replace(/./,"$0"),yx=!!/./[cx]&&""===/./[cx]("a","$0");JC("replace",(function(e,t,n){var r=yx?"$":"$0";return[function(e,n){var r=Ib(this),o=null==e?void 0:kw(e,cx);return o?ww(o,e,r,n):ww(t,NA(r),e,n)},function(e,o){var i=mw(this),a=NA(e);if("string"==typeof o&&-1===hx(o,r)&&-1===hx(o,"$<")){var u=n(t,i,a,o);if(u.done)return u.value}var s=Wb(o);s||(o=NA(o));var c=i.global;if(c){var l=i.unicode;i.lastIndex=0}for(var f=[];;){var d=sx(i,a);if(null===d)break;if(px(f,d),!c)break;""===NA(d[0])&&(i.lastIndex=QC(a,kE(i.lastIndex),l))}for(var p,h="",g=0,v=0;v<f.length;v++){for(var y=NA((d=f[v])[0]),m=lx(fx(DE(d.index),a.length),0),b=[],w=1;w<d.length;w++)px(b,void 0===(p=d[w])?p:String(p));var E=d.groups;if(s){var A=dx([y],b,m,a);void 0!==E&&px(A,E);var S=NA(KC(o,void 0,A))}else S=ax(y,a,m,b,E,o);m>=g&&(h+=gx(a,g,m)+S,g=m+y.length)}return h+gx(a,g)}]}),!!ew((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!vx||yx);var mx=function(e,t){return mx=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},mx(e,t)};function bx(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}mx(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var wx=function(){return wx=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},wx.apply(this,arguments)};function Ex(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function Ax(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}function Sx(e,t){for(var n=0,r=t.length,o=e.length;n<r;n++,o++)e[o]=t[n];return e}var Cx=0,xx=function(){this.id=""+Cx++},Dx=tE.set,Ox=tE.getterFor("Array Iterator"),kx=aC(Array,"Array",(function(e,t){Dx(this,{type:"Array Iterator",target:eA(e),index:0,kind:t})}),(function(){var e=Ox(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values");pS.Arguments=pS.Array,eS("keys"),eS("values"),eS("entries");var Bx=function(e,t,n){for(var r in t)aE(e,r,t[r],n);return e},Tx=Db.Array,Fx=Math.max,_x=function(e,t,n){for(var r=BE(e),o=iA(t,r),i=iA(void 0===n?r:n,r),a=Tx(Fx(i-o,0)),u=0;o<i;o++,u++)yS(a,u,e[o]);return a.length=u,a},Px=pA.f,jx="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],Nx={f:function(e){return jx&&"Window"==cE(e)?function(e){try{return Px(e)}catch(e){return _x(jx)}}(e):Px(eA(e))}},Rx=ew((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}})),Ix=Object.isExtensible,Lx=ew((function(){Ix(1)}))||Rx?function(e){return!!fw(e)&&(!Rx||"ArrayBuffer"!=cE(e))&&(!Ix||Ix(e))}:Ix,Mx=!ew((function(){return Object.isExtensible(Object.preventExtensions({}))})),zx=Ab((function(e){var t=Nw.f,n=!1,r=qb("meta"),o=0,i=function(e){t(e,r,{value:{objectID:"O"+o++,weakData:{}}})},a=e.exports={enable:function(){a.enable=function(){},n=!0;var e=pA.f,t=Nb([].splice),o={};o[r]=1,e(o).length&&(pA.f=function(n){for(var o=e(n),i=0,a=o.length;i<a;i++)if(o[i]===r){t(o,i,1);break}return o},DA({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:Nx.f}))},fastKey:function(e,t){if(!fw(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!$b(e,r)){if(!Lx(e))return"F";if(!t)return"E";i(e)}return e[r].objectID},getWeakData:function(e,t){if(!$b(e,r)){if(!Lx(e))return!0;if(!t)return!1;i(e)}return e[r].weakData},onFreeze:function(e){return Mx&&n&&Lx(e)&&!$b(e,r)&&i(e),e}};Gw[r]=!0})),$x=Db.TypeError,Hx=function(e,t){this.stopped=e,this.result=t},Ux=Hx.prototype,Vx=function(e,t,n){var r,o,i,a,u,s,c,l=n&&n.that,f=!(!n||!n.AS_ENTRIES),d=!(!n||!n.IS_ITERATOR),p=!(!n||!n.INTERRUPTED),h=wE(t,l),g=function(e){return r&&fS(r,"normal",e),new Hx(!0,e)},v=function(e){return f?(mw(e),p?h(e[0],e[1],g):h(e[0],e[1])):p?h(e,g):h(e)};if(d)r=e;else{if(!(o=bS(e)))throw $x(xw(e)+" is not iterable");if(vS(o)){for(i=0,a=BE(e);a>i;i++)if((u=v(e[i]))&&Ew(Ux,u))return u;return new Hx(!1)}r=ES(e,o)}for(s=r.next;!(c=ww(s,r)).done;){try{u=v(c.value)}catch(e){fS(r,"throw",e)}if("object"==typeof u&&u&&Ew(Ux,u))return u}return new Hx(!1)},qx=Db.TypeError,Wx=function(e,t){if(Ew(t,e))return e;throw qx("Incorrect invocation")},Gx=function(e,t,n){var r,o;return QS&&Wb(r=t.constructor)&&r!==n&&fw(o=r.prototype)&&o!==n.prototype&&QS(e,o),e},Kx=function(e,t,n){var r=-1!==e.indexOf("Map"),o=-1!==e.indexOf("Weak"),i=r?"set":"add",a=Db[e],u=a&&a.prototype,s=a,c={},l=function(e){var t=Nb(u[e]);aE(u,e,"add"==e?function(e){return t(this,0===e?0:e),this}:"delete"==e?function(e){return!(o&&!fw(e))&&t(this,0===e?0:e)}:"get"==e?function(e){return o&&!fw(e)?void 0:t(this,0===e?0:e)}:"has"==e?function(e){return!(o&&!fw(e))&&t(this,0===e?0:e)}:function(e,n){return t(this,0===e?0:e,n),this})};if(CA(e,!Wb(a)||!(o||u.forEach&&!ew((function(){(new a).entries().next()})))))s=n.getConstructor(t,e,r,i),zx.enable();else if(CA(e,!0)){var f=new s,d=f[i](o?{}:-0,1)!=f,p=ew((function(){f.has(1)})),h=OS((function(e){new a(e)})),g=!o&&ew((function(){for(var e=new a,t=5;t--;)e[i](t,t);return!e.has(-0)}));h||((s=t((function(e,t){Wx(e,u);var n=Gx(new a,e,s);return null!=t&&Vx(t,n[i],{that:n,AS_ENTRIES:r}),n}))).prototype=u,u.constructor=s),(p||g)&&(l("delete"),l("has"),r&&l("get")),(g||d)&&l(i),o&&u.clear&&delete u.clear}return c[e]=s,DA({global:!0,forced:s!=a},c),KS(s,e),o||n.setStrong(s,e,r),s},Yx=zx.getWeakData,Xx=tE.set,Jx=tE.getterFor,Zx=VE.find,Qx=VE.findIndex,eD=Nb([].splice),tD=0,nD=function(e){return e.frozen||(e.frozen=new rD)},rD=function(){this.entries=[]},oD=function(e,t){return Zx(e.entries,(function(e){return e[0]===t}))};rD.prototype={get:function(e){var t=oD(this,e);if(t)return t[1]},has:function(e){return!!oD(this,e)},set:function(e,t){var n=oD(this,e);n?n[1]=t:this.entries.push([e,t])},delete:function(e){var t=Qx(this.entries,(function(t){return t[0]===e}));return~t&&eD(this.entries,t,1),!!~t}};var iD,aD={getConstructor:function(e,t,n,r){var o=e((function(e,o){Wx(e,i),Xx(e,{type:t,id:tD++,frozen:void 0}),null!=o&&Vx(o,e[r],{that:e,AS_ENTRIES:n})})),i=o.prototype,a=Jx(t),u=function(e,t,n){var r=a(e),o=Yx(mw(t),!0);return!0===o?nD(r).set(t,n):o[r.id]=n,e};return Bx(i,{delete:function(e){var t=a(this);if(!fw(e))return!1;var n=Yx(e);return!0===n?nD(t).delete(e):n&&$b(n,t.id)&&delete n[t.id]},has:function(e){var t=a(this);if(!fw(e))return!1;var n=Yx(e);return!0===n?nD(t).has(e):n&&$b(n,t.id)}}),Bx(i,n?{get:function(e){var t=a(this);if(fw(e)){var n=Yx(e);return!0===n?nD(t).get(e):n?n[t.id]:void 0}},set:function(e,t){return u(this,e,t)}}:{add:function(e){return u(this,e,!0)}}),o}},uD=tE.enforce,sD=!Db.ActiveXObject&&"ActiveXObject"in Db,cD=function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}},lD=Kx("WeakMap",cD,aD);if(Vw&&sD){iD=aD.getConstructor(cD,"WeakMap",!0),zx.enable();var fD=lD.prototype,dD=Nb(fD.delete),pD=Nb(fD.has),hD=Nb(fD.get),gD=Nb(fD.set);Bx(fD,{delete:function(e){if(fw(e)&&!Lx(e)){var t=uD(this);return t.frozen||(t.frozen=new iD),dD(this,e)||t.frozen.delete(e)}return dD(this,e)},has:function(e){if(fw(e)&&!Lx(e)){var t=uD(this);return t.frozen||(t.frozen=new iD),pD(this,e)||t.frozen.has(e)}return pD(this,e)},get:function(e){if(fw(e)&&!Lx(e)){var t=uD(this);return t.frozen||(t.frozen=new iD),pD(this,e)?hD(this,e):t.frozen.get(e)}return hD(this,e)},set:function(e,t){if(fw(e)&&!Lx(e)){var n=uD(this);n.frozen||(n.frozen=new iD),pD(this,e)?gD(this,e,t):n.frozen.set(e,t)}else gD(this,e,t);return this}})}var vD=uw("iterator"),yD=uw("toStringTag"),mD=kx.values,bD=function(e,t){if(e){if(e[vD]!==mD)try{Iw(e,vD,mD)}catch(t){e[vD]=mD}if(e[yD]||Iw(e,yD,t),gE[t])for(var n in kx)if(e[n]!==kx[n])try{Iw(e,n,kx[n])}catch(t){e[n]=kx[n]}}};for(var wD in gE)bD(Db[wD]&&Db[wD].prototype,wD);bD(mE,"DOMTokenList");var ED=new WeakMap,AD=new WeakMap,SD=new WeakMap,CD=new WeakMap,xD=new WeakMap,DD=new WeakMap,OD=new WeakMap,kD=new WeakMap,BD=new WeakMap,TD=new WeakMap,FD=new WeakMap,_D=new WeakMap,PD=new WeakMap,jD=new WeakMap,ND=new WeakMap,RD=new WeakMap,ID=new WeakMap,LD=new WeakMap,MD=new WeakMap,zD=new WeakMap,$D=new WeakMap,HD=new WeakMap,UD=new WeakMap,VD=new WeakMap,qD=new WeakMap,WD=VE.find,GD=!0;"find"in[]&&Array(1).find((function(){GD=!1})),DA({target:"Array",proto:!0,forced:GD},{find:function(e){return WD(this,e,arguments.length>1?arguments[1]:void 0)}}),eS("find"),DA({global:!0},{globalThis:Db});const KD=["area","base","basefont","bgsound","br","col","command","embed","frame","hr","image","img","input","isindex","keygen","link","menuitem","meta","nextid","param","source","track","wbr"];Np&&(wp.fn.css=Np),$p&&(wp.fn.append=$p),Ep&&(wp.fn.addClass=Ep),Ap&&(wp.fn.removeClass=Ap),Sp&&(wp.fn.hasClass=Sp),kp&&(wp.fn.on=kp),Zp&&(wp.fn.focus=Zp),Cp&&(wp.fn.attr=Cp),xp&&(wp.fn.removeAttr=xp),Pp&&(wp.fn.hide=Pp),jp&&(wp.fn.show=jp),_p&&(wp.fn.offset=_p),Tp&&(wp.fn.width=Tp),Fp&&(wp.fn.height=Fp),Up&&(wp.fn.parent=Up),Vp&&(wp.fn.parents=Vp),zp&&(wp.fn.is=zp),Dp&&(wp.fn.dataset=Dp),Op&&(wp.fn.val=Op),Mp&&(wp.fn.text=Mp),Lp&&(wp.fn.html=Lp),Wp&&(wp.fn.children=Wp),Gp&&(wp.fn.remove=Gp),qp&&(wp.fn.find=qp),Rp&&(wp.fn.each=Rp),Kp&&(wp.fn.empty=Kp);var YD,XD,JD=function(e){return e&&e.ownerDocument&&e.ownerDocument.defaultView||null},ZD=function(e){return QD(e)&&1===e.nodeType},QD=function(e){var t=JD(e);return!!t&&e instanceof t.Node},eO=function(e){var t=e&&e.anchorNode&&JD(e.anchorNode);return!!t&&e instanceof t.Selection},tO=function(e){return QD(e)&&3===e.nodeType},nO=function(e){var t,n,r;return null!==(t=window.document.getElementById(e))&&void 0!==t?t:(null===(r=null===(n=window.document.activeElement)||void 0===n?void 0:n.shadowRoot)||void 0===r?void 0:r.getElementById(e))||null},rO=function(e,t,n){for(var r,o=e.childNodes,i=o[t],a=t,u=!1,s=!1;(QD(r=i)&&8===r.nodeType||ZD(i)&&0===i.childNodes.length||ZD(i)&&"false"===i.getAttribute("contenteditable"))&&(!u||!s);)a>=o.length?(u=!0,a=t-1,n="backward"):a<0?(s=!0,a=t+1,n="forward"):(i=o[a],t=a,a+="forward"===n?1:-1);return[i,t]},oO=function(e,t,n){return Ax(rO(e,t,n),1)[0]},iO=function e(t){var n,r,o="";if(tO(t)&&t.nodeValue)return t.nodeValue;if(ZD(t)){try{for(var i=Ex(Array.from(t.childNodes)),a=i.next();!a.done;a=i.next())o+=e(a.value)}catch(e){n={error:e}}finally{try{a&&!a.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}var u=getComputedStyle(t).getPropertyValue("display");"block"!==u&&"list"!==u&&"table-row"!==u&&"BR"!==t.tagName||(o+="\n")}return o};function aO(e,t){if(!(e instanceof HTMLElement&&"true"===e.dataset.slateVoid))for(var n=e.childNodes,r=n.length;r--;){var o=n[r],i=o.nodeType;3==i?t(o,e):1!=i&&9!=i&&11!=i||aO(o,t)}}function uO(e){if(0===e.length)return"";var t=e[0];return t.nodeType!==YD.ELEMENT_NODE?"":t.tagName.toLowerCase()}(XD=YD||(YD={}))[XD.ELEMENT_NODE=1]="ELEMENT_NODE",XD[XD.TEXT_NODE=3]="TEXT_NODE",XD[XD.CDATA_SECTION_NODE=4]="CDATA_SECTION_NODE",XD[XD.PROCESSING_INSTRUCTION_NODE=7]="PROCESSING_INSTRUCTION_NODE",XD[XD.COMMENT_NODE=8]="COMMENT_NODE",XD[XD.DOCUMENT_NODE=9]="DOCUMENT_NODE",XD[XD.DOCUMENT_TYPE_NODE=10]="DOCUMENT_TYPE_NODE",XD[XD.DOCUMENT_FRAGMENT_NODE=11]="DOCUMENT_FRAGMENT_NODE",void 0!==globalThis.navigator&&void 0!==globalThis.window&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&globalThis.window.MSStream;var sO="undefined"!=typeof navigator&&/Mac OS X/.test(navigator.userAgent),cO="undefined"!=typeof navigator&&/^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);"undefined"!=typeof navigator&&/^(?!.*Seamonkey)(?=.*Firefox\/(?:[0-7][0-9]|[0-8][0-6])(?:\.)).*/i.test(navigator.userAgent);var lO="undefined"!=typeof navigator&&/Version\/[\d\.]+.*Safari/.test(navigator.userAgent),fO="undefined"!=typeof navigator&&/Edge?\/(?:[0-6][0-9]|[0-7][0-8])(?:\.)/i.test(navigator.userAgent),dO="undefined"!=typeof navigator&&/Chrome?\/(?:[0-7][0-5]|[0-6][0-9])(?:\.)/i.test(navigator.userAgent),pO="undefined"!=typeof navigator&&/Chrome/i.test(navigator.userAgent);"undefined"!=typeof navigator&&/.*QQBrowser/.test(navigator.userAgent);var hO=!dO&&!fO&&"undefined"!=typeof globalThis&&globalThis.InputEvent&&"function"==typeof globalThis.InputEvent.prototype.getTargetRanges,gO={getWindow:function(e){var t=$D.get(e);if(!t)throw new Error("Unable to find a host window element for this editor");return t},findKey:function(e,t){var n=zD.get(t);return n||(n=new xx,zD.set(t,n)),n},setNewKey:function(e){var t=new xx;zD.set(e,t)},findPath:function(e,t){for(var n=[],r=t;;){var o=ND.get(r);if(null==o){if(yf.isEditor(r))return n;break}var i=jD.get(r);if(null==i)break;n.unshift(i),r=o}throw new Error("Unable to find the path for Slate node: "+JSON.stringify(t))},findDocumentOrShadowRoot:function(e){if(e.isDestroyed)return window.document;var t=gO.toDOMNode(e,e),n=t.getRootNode();return(n instanceof Document||n instanceof ShadowRoot)&&null!=n.getSelection?n:t.ownerDocument},getParentNode:function(e,t){return ND.get(t)||null},getParentsNodes:function(e,t){for(var n=[],r=t;r!==e&&null!=r;){var o=gO.getParentNode(e,r);if(null==o)break;n.push(o),r=o}return n},getTopNode:function(e,t){var n=[gO.findPath(e,t)[0]];return Sf.get(e,n)},toDOMNode:function(e,t){var n;if(yf.isEditor(t))n=RD.get(e);else{var r=gO.findKey(e,t);n=LD.get(r)}if(!n)throw new Error("Cannot resolve a DOM node from Slate node: "+JSON.stringify(t));return n},hasDOMNode:function(e,t,n){void 0===n&&(n={});var r,o=n.editable,i=void 0!==o&&o,a=gO.toDOMNode(e,e);try{r=ZD(t)?t:t.parentElement}catch(e){if(!e.message.includes('Permission denied to access property "nodeType"'))throw e}return!!r&&r.closest("[data-slate-editor]")===a&&(!i||r.isContentEditable||!!r.getAttribute("data-slate-zero-width"))},toDOMRange:function(e,t){var n=t.anchor,r=t.focus,o=Nf.isBackward(t),i=gO.toDOMPoint(e,n),a=Nf.isCollapsed(t)?i:gO.toDOMPoint(e,r),u=gO.getWindow(e).document.createRange(),s=Ax(o?a:i,2),c=s[0],l=s[1],f=Ax(o?i:a,2),d=f[0],p=f[1],h=!!(ZD(c)?c:c.parentElement).getAttribute("data-slate-zero-width"),g=!!(ZD(d)?d:d.parentElement).getAttribute("data-slate-zero-width");return u.setStart(c,h?1:l),u.setEnd(d,g?1:p),u},toDOMPoint:function(e,t){var n,r,o,i=Ax(yf.node(e,t.path),1)[0],a=gO.toDOMNode(e,i);yf.void(e,{at:t})&&(t={path:t.path,offset:0});var u=Array.from(a.querySelectorAll("[data-slate-string], [data-slate-zero-width]")),s=0;try{for(var c=Ex(u),l=c.next();!l.done;l=c.next()){var f=l.value,d=f.childNodes[0];if(null!=d&&null!=d.textContent){var p=d.textContent.length,h=f.getAttribute("data-slate-length"),g=s+(null==h?p:parseInt(h,10));if(t.offset<=g){o=[d,Math.min(p,Math.max(0,t.offset-s))];break}s=g}}}catch(e){n={error:e}}finally{try{l&&!l.done&&(r=c.return)&&r.call(c)}finally{if(n)throw n.error}}if(!o)throw new Error("Cannot resolve a DOM point from Slate point: "+JSON.stringify(t));return o},toSlateNode:function(e,t){var n=ZD(t)?t:t.parentElement;n&&!n.hasAttribute("data-slate-node")&&(n=n.closest("[data-slate-node]"));var r=n?ID.get(n):null;if(!r)throw new Error("Cannot resolve a Slate node from DOM node: "+n);return r},findEventRange:function(e,t){"nativeEvent"in t&&(t=t.nativeEvent);var n=t.clientX,r=t.clientY,o=t.target;if(null==n||null==r)throw new Error("Cannot resolve a Slate range from a DOM event: "+t);var i,a=gO.toSlateNode(e,t.target),u=gO.findPath(e,a);if(yf.isVoid(e,a)){var s=o.getBoundingClientRect(),c=e.isInline(a)?n-s.left<s.left+s.width-n:r-s.top<s.top+s.height-r,l=yf.point(e,u,{edge:c?"start":"end"}),f=c?yf.before(e,l):yf.after(e,l);if(f)return yf.range(e,f)}var d=this.getWindow(e).document;if(d.caretRangeFromPoint)i=d.caretRangeFromPoint(n,r);else{var p=d.caretPositionFromPoint(n,r);p&&((i=d.createRange()).setStart(p.offsetNode,p.offset),i.setEnd(p.offsetNode,p.offset))}if(!i)throw new Error("Cannot resolve a Slate range from a DOM event: "+t);return gO.toSlateRange(e,i,{exactMatch:!1,suppressThrow:!1})},toSlateRange:function(e,t,n){var r,o,i,a,u,s=n.exactMatch,c=n.suppressThrow;if((eO(t)?t.anchorNode:t.startContainer)&&(eO(t)?(r=t.anchorNode,o=t.anchorOffset,i=t.focusNode,a=t.focusOffset,u=pO&&window.document.activeElement&&window.document.activeElement.shadowRoot?t.anchorNode===t.focusNode&&t.anchorOffset===t.focusOffset:t.isCollapsed):(r=t.startContainer,o=t.startOffset,i=t.endContainer,a=t.endOffset,u=t.collapsed)),null==r||null==i||null==o||null==a)throw new Error("Cannot resolve a Slate range from DOM range: "+t);var l=gO.toSlatePoint(e,[r,o],{exactMatch:s,suppressThrow:c});if(!l)return null;var f=u?l:gO.toSlatePoint(e,[i,a],{exactMatch:s,suppressThrow:c});if(!f)return null;var d={anchor:l,focus:f};return Nf.isExpanded(d)&&Nf.isForward(d)&&ZD(i)&&yf.void(e,{at:d.focus,mode:"highest"})&&(d=yf.unhangRange(e,d,{voids:!0})),d},toSlatePoint:function(e,t,n){var r,o=n.exactMatch,i=n.suppressThrow,a=Ax(o?t:function(e){var t,n=Ax(e,2),r=n[0],o=n[1];if(ZD(r)&&r.childNodes.length){var i=o===r.childNodes.length,a=i?o-1:o;for(r=(t=Ax(rO(r,a,i?"backward":"forward"),2))[0],i=(a=t[1])<o;ZD(r)&&r.childNodes.length;){var u=i?r.childNodes.length-1:0;r=oO(r,u,i?"backward":"forward")}o=i&&null!=r.textContent?r.textContent.length:0}return[r,o]}(t),2),u=a[0],s=a[1],c=u.parentNode,l=null,f=0;if(c){var d=c.closest('[data-slate-void="true"]'),p=c.closest("[data-slate-leaf]"),h=null;if(p){l=p.closest('[data-slate-node="text"]');var g=gO.getWindow(e).document.createRange();g.setStart(l,0),g.setEnd(u,s);var v=g.cloneContents();Sx(Sx([],Ax(ap(v.querySelectorAll("[data-slate-zero-width]")))),Ax(ap(v.querySelectorAll("[contenteditable=false]")))).forEach((function(e){e.parentNode.removeChild(e)})),f=v.textContent.length,h=l}else d&&((p=d.querySelector("[data-slate-leaf]"))?(l=p.closest('[data-slate-node="text"]'),f=(h=p).textContent.length,h.querySelectorAll("[data-slate-zero-width]").forEach((function(e){f-=e.textContent.length}))):f=1);h&&f===h.textContent.length&&(c.hasAttribute("data-slate-zero-width")||cO&&(null===(r=h.textContent)||void 0===r?void 0:r.endsWith("\n")))&&f--}if(!l){if(i)return null;throw new Error("Cannot resolve a Slate point from DOM point: "+t)}var y=gO.toSlateNode(e,l);return{path:gO.findPath(e,y),offset:f}},hasRange:function(e,t){var n=t.anchor,r=t.focus;return yf.hasPath(e,n.path)&&yf.hasPath(e,r.path)},getNodeType:function(e){return ff.isElement(e)?e.type:""},checkNodeType:function(e,t){return this.getNodeType(e)===t},getNodesStr:function(e){return e.map((function(e){return Sf.string(e)})).join("")},getSelectedElems:function(e){var t,n,r=[],o=yf.nodes(e,{universal:!0});try{for(var i=Ex(o),a=i.next();!a.done;a=i.next()){var u=Ax(a.value,1)[0];ff.isElement(u)&&r.push(u)}}catch(e){t={error:e}}finally{try{a&&!a.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}return r},getSelectedNodeByType:function(e,t){var n=this,r=Ax(yf.nodes(e,{match:function(e){return n.checkNodeType(e,t)},universal:!0}),1),o=r[0];return null==o?null:o[0]},getSelectedTextNode:function(e){var t=Ax(yf.nodes(e,{match:function(e){return Hf.isText(e)},universal:!0}),1),n=t[0];return null==n?null:n[0]},isNodeSelected:function(e,t){var n=Ax(yf.nodes(e,{match:function(e){return e===t},universal:!0}),1),r=n[0];return null!=r&&Ax(r,1)[0]===t},isSelectionAtLineEnd:function(e,t){var n=e.selection;return!!n&&(yf.isEnd(e,n.anchor,t)||yf.isEnd(e,n.focus,t))},getTextarea:function(e){var t=ED.get(e);if(null==t)throw new Error("Cannot find textarea instance by editor");return t},getToolbar:function(e){return CD.get(e)||null},getHoverbar:function(e){return DD.get(e)||null},normalizeContent:function(e){e.children.forEach((function(t,n){e.normalizeNode([t,[n]])}))},getLeftLengthOfMaxLength:function(e){var t=e.getConfig(),n=t.maxLength,r=t.onMaxLength;if("number"!=typeof n||n<=0)return 1/0;var o=n-e.getText().replace(/\r|\n|(\r\n)/g,"").length;return o<=0&&r&&r(e),o},cleanExposedTexNodeInSelectionBlock:function(e){var t,n,r,o,i=gO.getTextarea(e).$textArea,a=null==i?void 0:i[0].childNodes;if(a)try{for(var u=Ex(Array.from(a)),s=u.next();!s.done;s=u.next()){var c=s.value;if(3!==c.nodeType)break;c.remove()}}catch(e){t={error:e}}finally{try{s&&!s.done&&(n=u.return)&&n.call(u)}finally{if(t)throw t.error}}var l=yf.nodes(e,{match:function(t){return!(!ff.isElement(t)||e.isInline(t))},universal:!0});try{for(var f=Ex(l),d=f.next();!d.done;d=f.next()){var p=d.value;if(null!=p){var h=p[0];aO(gO.toDOMNode(e,h),(function(e,t){var n=wp(t);n.attr("data-slate-string")||n.attr("data-slate-zero-width")||n.attr("data-w-e-reserve")||t.removeChild(e)}))}}}catch(e){r={error:e}}finally{try{d&&!d.done&&(o=f.return)&&o.call(f)}finally{if(r)throw r.error}}},isLastNode:function(e,t){var n=e.children||[];return n[n.length-1]===t},genEmptyParagraph:function(){return{type:"paragraph",children:[{text:""}]}},isSelectedVoidNode:function(e){var t,n,r=yf.nodes(e,{match:function(t){return e.isVoid(t)}}),o=0;try{for(var i=Ex(r),a=i.next();!a.done;a=i.next())a.value,o++}catch(e){t={error:e}}finally{try{a&&!a.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}return o>0},isSelectedEmptyParagraph:function(e){var t=e.selection;if(null==t)return!1;if(Nf.isExpanded(t))return!1;var n=gO.getSelectedNodeByType(e,"paragraph");if(null===n)return!1;var r=n.children;return 1===r.length&&(""===r[0].text||void 0)},isEmptyPath:function(e,t){var n=yf.node(e,t);if(null==n)return!1;var r=Ax(n,1)[0].children;return 1===r.length&&""===r[0].text}},vO=1,yO={},mO={},bO=VE.filter,wO=EC("filter");DA({target:"Array",proto:!0,forced:!wO},{filter:function(e){return bO(this,e,arguments.length>1?arguments[1]:void 0)}});var EO="\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff",AO=Nb("".replace),SO="["+EO+"]",CO=RegExp("^"+SO+SO+"*"),xO=RegExp(SO+SO+"*$"),DO=function(e){return function(t){var n=NA(Ib(t));return 1&e&&(n=AO(n,CO,"")),2&e&&(n=AO(n,xO,"")),n}},OO={start:DO(1),end:DO(2),trim:DO(3)},kO=iE.PROPER,BO=OO.trim;DA({target:"String",proto:!0,forced:function(e){return ew((function(){return!!EO[e]()||"âÂá "!=="âÂá "[e]()||kO&&EO[e].name!==e}))}("trim")},{trim:function(){return BO(this)}});var TO=[],FO={};function _O(e,t,n){var r=n.isInline(e)?"span":"div";return"<"+r+">"+t+"</"+r+">"}var PO,jO,NO,RO,IO=Db.Promise,LO=uw("species"),MO=function(e){var t=Gb(e),n=Nw.f;lw&&t&&!t[LO]&&n(t,LO,{configurable:!0,get:function(){return this}})},zO=Db.TypeError,$O=uw("species"),HO=function(e,t){var n,r=mw(e).constructor;return void 0===r||null==(n=mw(r)[$O])?t:function(e){if(LE(e))return e;throw zO(xw(e)+" is not a constructor")}(n)},UO=Nb([].slice),VO=/(?:ipad|iphone|ipod).*applewebkit/i.test(Kb),qO="process"==cE(Db.process),WO=Db.setImmediate,GO=Db.clearImmediate,KO=Db.process,YO=Db.Dispatch,XO=Db.Function,JO=Db.MessageChannel,ZO=Db.String,QO=0,ek={};try{PO=Db.location}catch(XD){}var tk=function(e){if($b(ek,e)){var t=ek[e];delete ek[e],t()}},nk=function(e){return function(){tk(e)}},rk=function(e){tk(e.data)},ok=function(e){Db.postMessage(ZO(e),PO.protocol+"//"+PO.host)};WO&&GO||(WO=function(e){var t=UO(arguments,1);return ek[++QO]=function(){KC(Wb(e)?e:XO(e),void 0,t)},jO(QO),QO},GO=function(e){delete ek[e]},qO?jO=function(e){KO.nextTick(nk(e))}:YO&&YO.now?jO=function(e){YO.now(nk(e))}:JO&&!VO?(RO=(NO=new JO).port2,NO.port1.onmessage=rk,jO=wE(RO.postMessage,RO)):Db.addEventListener&&Wb(Db.postMessage)&&!Db.importScripts&&PO&&"file:"!==PO.protocol&&!ew(ok)?(jO=ok,Db.addEventListener("message",rk,!1)):jO="onreadystatechange"in hw("script")?function(e){qA.appendChild(hw("script")).onreadystatechange=function(){qA.removeChild(this),tk(e)}}:function(e){setTimeout(nk(e),0)});var ik,ak,uk,sk,ck,lk,fk,dk,pk={set:WO,clear:GO},hk=/ipad|iphone|ipod/i.test(Kb)&&void 0!==Db.Pebble,gk=/web0s(?!.*chrome)/i.test(Kb),vk=nA.f,yk=pk.set,mk=Db.MutationObserver||Db.WebKitMutationObserver,bk=Db.document,wk=Db.process,Ek=Db.Promise,Ak=vk(Db,"queueMicrotask"),Sk=Ak&&Ak.value;Sk||(ik=function(){var e,t;for(qO&&(e=wk.domain)&&e.exit();ak;){t=ak.fn,ak=ak.next;try{t()}catch(e){throw ak?sk():uk=void 0,e}}uk=void 0,e&&e.enter()},VO||qO||gk||!mk||!bk?!hk&&Ek&&Ek.resolve?((fk=Ek.resolve(void 0)).constructor=Ek,dk=wE(fk.then,fk),sk=function(){dk(ik)}):qO?sk=function(){wk.nextTick(ik)}:(yk=wE(yk,Db),sk=function(){yk(ik)}):(ck=!0,lk=bk.createTextNode(""),new mk(ik).observe(lk,{characterData:!0}),sk=function(){lk.data=ck=!ck}));var Ck,xk,Dk,Ok,kk=Sk||function(e){var t={fn:e,next:void 0};uk&&(uk.next=t),ak||(ak=t,sk()),uk=t},Bk=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=Ow(t),this.reject=Ow(n)},Tk={f:function(e){return new Bk(e)}},Fk=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},_k="object"==typeof window,Pk=pk.set,jk=uw("species"),Nk="Promise",Rk=tE.getterFor(Nk),Ik=tE.set,Lk=tE.getterFor(Nk),Mk=IO&&IO.prototype,zk=IO,$k=Mk,Hk=Db.TypeError,Uk=Db.document,Vk=Db.process,qk=Tk.f,Wk=qk,Gk=!!(Uk&&Uk.createEvent&&Db.dispatchEvent),Kk=Wb(Db.PromiseRejectionEvent),Yk=!1,Xk=CA(Nk,(function(){var e=Hw(zk),t=e!==String(zk);if(!t&&66===Qb)return!0;if(Qb>=51&&/native code/.test(e))return!1;var n=new zk((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};return(n.constructor={})[jk]=r,!(Yk=n.then((function(){}))instanceof r)||!t&&_k&&!Kk})),Jk=Xk||!OS((function(e){zk.all(e).catch((function(){}))})),Zk=function(e){var t;return!(!fw(e)||!Wb(t=e.then))&&t},Qk=function(e,t){if(!e.notified){e.notified=!0;var n=e.reactions;kk((function(){for(var r=e.value,o=1==e.state,i=0;n.length>i;){var a,u,s,c=n[i++],l=o?c.ok:c.fail,f=c.resolve,d=c.reject,p=c.domain;try{l?(o||(2===e.rejection&&rB(e),e.rejection=1),!0===l?a=r:(p&&p.enter(),a=l(r),p&&(p.exit(),s=!0)),a===c.promise?d(Hk("Promise-chain cycle")):(u=Zk(a))?ww(u,a,f,d):f(a)):d(r)}catch(e){p&&!s&&p.exit(),d(e)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&tB(e)}))}},eB=function(e,t,n){var r,o;Gk?((r=Uk.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),Db.dispatchEvent(r)):r={promise:t,reason:n},!Kk&&(o=Db["on"+e])?o(r):"unhandledrejection"===e&&function(e,t){var n=Db.console;n&&n.error&&(1==arguments.length?n.error(e):n.error(e,t))}("Unhandled promise rejection",n)},tB=function(e){ww(Pk,Db,(function(){var t,n=e.facade,r=e.value;if(nB(e)&&(t=Fk((function(){qO?Vk.emit("unhandledRejection",r,n):eB("unhandledrejection",n,r)})),e.rejection=qO||nB(e)?2:1,t.error))throw t.value}))},nB=function(e){return 1!==e.rejection&&!e.parent},rB=function(e){ww(Pk,Db,(function(){var t=e.facade;qO?Vk.emit("rejectionHandled",t):eB("rejectionhandled",t,e.value)}))},oB=function(e,t,n){return function(r){e(t,r,n)}},iB=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,Qk(e,!0))},aB=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw Hk("Promise can't be resolved itself");var r=Zk(t);r?kk((function(){var n={done:!1};try{ww(r,t,oB(aB,n,e),oB(iB,n,e))}catch(t){iB(n,t,e)}})):(e.value=t,e.state=1,Qk(e,!1))}catch(t){iB({done:!1},t,e)}}};if(Xk&&($k=(zk=function(e){Wx(this,$k),Ow(e),ww(Ck,this);var t=Rk(this);try{e(oB(aB,t),oB(iB,t))}catch(e){iB(t,e)}}).prototype,(Ck=function(e){Ik(this,{type:Nk,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=Bx($k,{then:function(e,t){var n=Lk(this),r=n.reactions,o=qk(HO(this,zk));return o.ok=!Wb(e)||e,o.fail=Wb(t)&&t,o.domain=qO?Vk.domain:void 0,n.parent=!0,r[r.length]=o,0!=n.state&&Qk(n,!1),o.promise},catch:function(e){return this.then(void 0,e)}}),xk=function(){var e=new Ck,t=Rk(e);this.promise=e,this.resolve=oB(aB,t),this.reject=oB(iB,t)},Tk.f=qk=function(e){return e===zk||e===Dk?new xk(e):Wk(e)},Wb(IO)&&Mk!==Object.prototype)){Ok=Mk.then,Yk||(aE(Mk,"then",(function(e,t){var n=this;return new zk((function(e,t){ww(Ok,n,e,t)})).then(e,t)}),{unsafe:!0}),aE(Mk,"catch",$k.catch,{unsafe:!0}));try{delete Mk.constructor}catch(XD){}QS&&QS(Mk,$k)}DA({global:!0,wrap:!0,forced:Xk},{Promise:zk}),KS(zk,Nk,!1),MO(Nk),Dk=Gb(Nk),DA({target:Nk,stat:!0,forced:Xk},{reject:function(e){var t=qk(this);return ww(t.reject,void 0,e),t.promise}}),DA({target:Nk,stat:!0,forced:Xk},{resolve:function(e){return function(e,t){if(mw(e),fw(t)&&t.constructor===e)return t;var n=Tk.f(e);return(0,n.resolve)(t),n.promise}(this,e)}}),DA({target:Nk,stat:!0,forced:Jk},{all:function(e){var t=this,n=qk(t),r=n.resolve,o=n.reject,i=Fk((function(){var n=Ow(t.resolve),i=[],a=0,u=1;Vx(e,(function(e){var s=a++,c=!1;u++,ww(n,t,e).then((function(e){c||(c=!0,i[s]=e,--u||r(i))}),o)})),--u||r(i)}));return i.error&&o(i.value),n.promise},race:function(e){var t=this,n=qk(t),r=n.reject,o=Fk((function(){var o=Ow(t.resolve);Vx(e,(function(e){ww(o,t,e).then(n.resolve,r)}))}));return o.error&&r(o.value),n.promise}});var uB=OC.UNSUPPORTED_Y,sB=Math.min,cB=[].push,lB=Nb(/./.exec),fB=Nb(cB),dB=Nb("".slice);function pB(e){Promise.resolve().then(e)}function hB(e,t){return ff.isElement(e)?function(e,t){var n=e.type,r=void 0===n?"":n,o=e.children,i=void 0===o?[]:o,a=yf.isVoid(t,e),u="";a||(u=i.map((function(e){return hB(e,t)})).join(""));var s=function(e){return FO[e]||_O}(r),c=s(e,u,t),l="";if(l="string"==typeof c?c:c.html||"",a||TO.forEach((function(t){return l=t(e,l)})),"string"==typeof c)return l;var f=c.prefix,d=void 0===f?"":f,p=c.suffix,h=void 0===p?"":p;return d&&(l=d+l),h&&(l+=h),l}(e,t):function(e,t){var n=e.text;if(null==n)throw new Error("Current node is not slate Text "+JSON.stringify(e));var r=n;r=function(e){return e.replace(/ {2}/g," &nbsp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/Â®/g,"&reg;").replace(/Â©/g,"&copy;").replace(/â¢/g,"&trade;")}(r);var o=gO.getParentsNodes(t,e).some((function(e){return"pre"===gO.getNodeType(e)}));if(o||(r=r.replace(/\r\n|\r|\n/g,"<br>")),o&&(r=r.replace(/&nbsp;/g," ")),""===r){var i=gO.getParentNode(null,e);if(!i||0!==i.children.length)return r;r="<br>"}return TO.forEach((function(t){return r=t(e,r)})),r}(e,t)}function gB(e){return"w-e-element-"+e}JC("split",(function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r=NA(Ib(this)),o=void 0===n?4294967295:n>>>0;if(0===o)return[];if(void 0===e)return[r];if(!rS(e))return ww(t,r,e,o);for(var i,a,u,s=[],c=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),l=0,f=new RegExp(e.source,c+"g");(i=ww(UC,f,r))&&!((a=f.lastIndex)>l&&(fB(s,dB(r,l,i.index)),i.length>1&&i.index<r.length&&KC(cB,s,_x(i,1)),u=i[0].length,l=a,s.length>=o));)f.lastIndex===i.index&&f.lastIndex++;return l===r.length?!u&&lB(f,"")||fB(s,""):fB(s,dB(r,l)),s.length>o?_x(s,0,o):s}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:ww(t,this,e,n)}:t,[function(t,n){var o=Ib(this),i=null==t?void 0:kw(t,e);return i?ww(i,t,o,n):ww(r,NA(o),t,n)},function(e,o){var i=mw(this),a=NA(e),u=n(r,i,a,o,r!==t);if(u.done)return u.value;var s=HO(i,RegExp),c=i.unicode,l=(i.ignoreCase?"i":"")+(i.multiline?"m":"")+(i.unicode?"u":"")+(uB?"g":"y"),f=new s(uB?"^(?:"+i.source+")":i,l),d=void 0===o?4294967295:o>>>0;if(0===d)return[];if(0===a.length)return null===sx(f,a)?[a]:[];for(var p=0,h=0,g=[];h<a.length;){f.lastIndex=uB?0:h;var v,y=sx(f,uB?dB(a,h):a);if(null===y||(v=sB(kE(f.lastIndex+(uB?h:0)),a.length))===p)h=QC(a,h,c);else{if(fB(g,dB(a,p,h)),g.length===d)return g;for(var m=1;m<=y.length-1;m++)if(fB(g,y[m]),g.length===d)return g;h=p=v}}return fB(g,dB(a,p)),g}]}),!!ew((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),uB);var vB=function(e,t){var n=(t.top+t.bottom)/2;return e.top<=n&&e.bottom>=n},yB=function(e,t,n){var r=gO.toDOMRange(e,t).getBoundingClientRect(),o=gO.toDOMRange(e,n).getBoundingClientRect();return vB(r,o)&&vB(o,r)},mB=["span","b","strong","i","em","s","strike","u","font","sub","sup"],bB=[],wB=[],EB={},AB=Nw.f,SB=pA.f,CB=tE.enforce,xB=uw("match"),DB=Db.RegExp,OB=DB.prototype,kB=Db.SyntaxError,BB=Nb(RA),TB=Nb(OB.exec),FB=Nb("".charAt),_B=Nb("".replace),PB=Nb("".indexOf),jB=Nb("".slice),NB=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,RB=/a/g,IB=/a/g,LB=new DB(RB)!==RB,MB=OC.MISSED_STICKY,zB=OC.UNSUPPORTED_Y,$B=lw&&(!LB||MB||BC||FC||ew((function(){return IB[xB]=!1,DB(RB)!=RB||DB(IB)==IB||"/a/i"!=DB(RB,"i")})));if(CA("RegExp",$B)){for(var HB=function(e,t){var n,r,o,i,a,u,s=Ew(OB,this),c=rS(e),l=void 0===t,f=[],d=e;if(!s&&c&&l&&e.constructor===HB)return e;if((c||Ew(OB,e))&&(e=e.source,l&&(t="flags"in d?d.flags:BB(d))),e=void 0===e?"":NA(e),t=void 0===t?"":NA(t),d=e,BC&&"dotAll"in RB&&(r=!!t&&PB(t,"s")>-1)&&(t=_B(t,/s/g,"")),n=t,MB&&"sticky"in RB&&(o=!!t&&PB(t,"y")>-1)&&zB&&(t=_B(t,/y/g,"")),FC&&(i=function(e){for(var t,n=e.length,r=0,o="",i=[],a={},u=!1,s=!1,c=0,l="";r<=n;r++){if("\\"===(t=FB(e,r)))t+=FB(e,++r);else if("]"===t)u=!1;else if(!u)switch(!0){case"["===t:u=!0;break;case"("===t:TB(NB,jB(e,r+1))&&(r+=2,s=!0),o+=t,c++;continue;case">"===t&&s:if(""===l||$b(a,l))throw new kB("Invalid capture group name");a[l]=!0,i[i.length]=[l,c],s=!1,l="";continue}s?l+=t:o+=t}return[o,i]}(e),e=i[0],f=i[1]),a=Gx(DB(e,t),s?this:OB,HB),(r||o||f.length)&&(u=CB(a),r&&(u.dotAll=!0,u.raw=HB(function(e){for(var t,n=e.length,r=0,o="",i=!1;r<=n;r++)"\\"!==(t=FB(e,r))?i||"."!==t?("["===t?i=!0:"]"===t&&(i=!1),o+=t):o+="[\\s\\S]":o+=t+FB(e,++r);return o}(e),n)),o&&(u.sticky=!0),f.length&&(u.groups=f)),e!==d)try{Iw(a,"source",""===d?"(?:)":d)}catch(e){}return a},UB=function(e){e in HB||AB(HB,e,{configurable:!0,get:function(){return DB[e]},set:function(t){DB[e]=t}})},VB=SB(DB),qB=0;VB.length>qB;)UB(VB[qB++]);OB.constructor=HB,HB.prototype=OB,aE(Db,"RegExp",HB)}MO("RegExp");var WB=new RegExp(String.fromCharCode(160),"g");function GB(e){return e.replace(WB," ")}function KB(e,t){var n=e.length;if(n){var r=e[n-1];if(Hf.isText(r)){var o=Object.keys(r);if(1===o.length&&"text"===o[0])return r.text=r.text+t,!0}}return!1}function YB(e,t,n){return{type:"paragraph",children:[{text:wp(e).text().replace(/\s+/gm," ")}]}}function XB(e,t){var n=function(e,t){var n=[];if(null!=e.attr("data-w-e-is-void"))return n;var r=e[0].childNodes;return 1===r.length&&"BR"===r[0].nodeName?(n.push({text:""}),n):(r.forEach((function(e){if(e.nodeType!==YD.ELEMENT_NODE)if(e.nodeType!==YD.TEXT_NODE);else{var r=e.textContent||"";if(""===r.trim()&&r.indexOf("\n")>=0)return;r&&(r=GB(r),KB(n,r)||n.push({text:r}))}else{if("BR"===e.nodeName)return void(KB(n,"\n")||n.push({text:"\n"}));var o=ZB(wp(e),t);Array.isArray(o)?o.forEach((function(e){return n.push(e)})):n.push(o)}})),n)}(e,t),r=function(e){for(var t in EB)if(e[0].matches(t))return EB[t];return YB}(e),o=r(e[0],n,t);return Array.isArray(o)||(o=[o]),o.forEach((function(r){yf.isVoid(t,r)||(0===n.length&&(r.children=[{text:e.text().replace(/\s+/gm," ")}]),wB.forEach((function(n){r=n(e[0],r,t)})))})),o}function JB(e,t){0===e.parents("pre").length&&(e[0].innerHTML=e[0].innerHTML.replace(/\s+/gm," ").replace(/<br>/g,"\n"));var n=e[0].textContent||"";n=function(e){return e.replace(/&nbsp;/g," ").replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/&reg;/g,"Â®").replace(/&copy;/g,"Â©").replace(/&trade;/g,"â¢").replace(/&quot;/g,'"')}(n);var r={text:n=GB(n)};return wB.forEach((function(n){r=n(e[0],r,t)})),r}function ZB(e,t){bB.forEach((function(t){var n=t.selector,r=t.preParseHtml;e[0].matches(n)&&(e=wp(r(e[0])))}));var n=uO(e);return"span"===n?e.attr("data-w-e-type")?XB(e,t):JB(e,t):"code"===n?"pre"===uO(e.parent())?XB(e,t):JB(e,t):mB.includes(n)?JB(e,t):XB(e,t)}function QB(e,t,n){var r=wp(n);return!!r.attr(t)||(r.attr(t,"true"),e.on("destroyed",(function(){r.removeAttr(t)})),!1)}function eT(e,t){void 0===t&&(t="");var n=[];""===t&&(t="<p><br></p>"),0!==t.indexOf("<")&&(t=t.split(/\n/).map((function(e){return"<p>"+e+"</p>"})).join(""));var r=wp("<div>"+t+"</div>");return Array.from(r.children()).forEach((function(t){var r=ZB(wp(t),e);Array.isArray(r)?r.forEach((function(e){return n.push(e)})):n.push(r)})),n}var tT=Nw.f,nT=zx.fastKey,rT=tE.set,oT=tE.getterFor,iT={getConstructor:function(e,t,n,r){var o=e((function(e,o){Wx(e,i),rT(e,{type:t,index:JA(null),first:void 0,last:void 0,size:0}),lw||(e.size=0),null!=o&&Vx(o,e[r],{that:e,AS_ENTRIES:n})})),i=o.prototype,a=oT(t),u=function(e,t,n){var r,o,i=a(e),u=s(e,t);return u?u.value=n:(i.last=u={index:o=nT(t,!0),key:t,value:n,previous:r=i.last,next:void 0,removed:!1},i.first||(i.first=u),r&&(r.next=u),lw?i.size++:e.size++,"F"!==o&&(i.index[o]=u)),e},s=function(e,t){var n,r=a(e),o=nT(t);if("F"!==o)return r.index[o];for(n=r.first;n;n=n.next)if(n.key==t)return n};return Bx(i,{clear:function(){for(var e=a(this),t=e.index,n=e.first;n;)n.removed=!0,n.previous&&(n.previous=n.previous.next=void 0),delete t[n.index],n=n.next;e.first=e.last=void 0,lw?e.size=0:this.size=0},delete:function(e){var t=this,n=a(t),r=s(t,e);if(r){var o=r.next,i=r.previous;delete n.index[r.index],r.removed=!0,i&&(i.next=o),o&&(o.previous=i),n.first==r&&(n.first=o),n.last==r&&(n.last=i),lw?n.size--:t.size--}return!!r},forEach:function(e){for(var t,n=a(this),r=wE(e,arguments.length>1?arguments[1]:void 0);t=t?t.next:n.first;)for(r(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!s(this,e)}}),Bx(i,n?{get:function(e){var t=s(this,e);return t&&t.value},set:function(e,t){return u(this,0===e?0:e,t)}}:{add:function(e){return u(this,e=0===e?0:e,e)}}),lw&&tT(i,"size",{get:function(){return a(this).size}}),o},setStrong:function(e,t,n){var r=t+" Iterator",o=oT(t),i=oT(r);aC(e,t,(function(e,t){rT(this,{type:r,target:e,state:o(e),kind:t,last:void 0})}),(function(){for(var e=i(this),t=e.kind,n=e.last;n&&n.removed;)n=n.previous;return e.target&&(e.last=n=n?n.next:e.state.first)?"keys"==t?{value:n.key,done:!1}:"values"==t?{value:n.value,done:!1}:{value:[n.key,n.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),n?"entries":"values",!n,!0),MO(t)}};Kx("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),iT);var aT=new Set(["doctype","!doctype","meta","script","style","link","frame","iframe","title","svg"]);function uT(e,t){e.isInline(t)?(e.insertNode(t),"link"===t.type&&e.insertFragment([{text:""}])):ad.insertNodes(e,t,{mode:"highest"})}var sT=function(e){var t=e,n=t.insertText;return t.insertFragment,t.setFragmentData=function(e){var n=t.selection;if(n){var r=Ax(Nf.edges(n),2),o=r[0],i=r[1],a=yf.void(t,{at:o.path}),u=yf.void(t,{at:i.path});if(!Nf.isCollapsed(n)||a){var s=gO.toDOMRange(t,n),c=s.cloneContents(),l=c.childNodes[0];if(c.childNodes.forEach((function(e){e.textContent&&""!==e.textContent.trim()&&(l=e)})),u){var f=Ax(u,1)[0],d=s.cloneRange(),p=gO.toDOMNode(t,f);d.setEndAfter(p),c=d.cloneContents()}if(a&&(l=c.querySelector("[data-slate-spacer]")),Array.from(c.querySelectorAll("[data-slate-zero-width]")).forEach((function(e){var t="n"===e.getAttribute("data-slate-zero-width");e.textContent=t?"\n":""})),tO(l)){var h=l.ownerDocument.createElement("span");h.style.whiteSpace="pre",h.appendChild(l),c.appendChild(h),l=h}var g=t.getFragment(),v=JSON.stringify(g),y=window.btoa(encodeURIComponent(v));l.setAttribute("data-slate-fragment",y),e.setData("application/x-slate-fragment",y);var m=c.ownerDocument.createElement("div");return m.appendChild(c),m.setAttribute("hidden","true"),c.ownerDocument.body.appendChild(m),e.setData("text/html",m.innerHTML),e.setData("text/plain",iO(m)),c.ownerDocument.body.removeChild(m),e}}},t.insertData=function(e){var r,o,i=e.getData("application/x-slate-fragment");if(i){var a=decodeURIComponent(window.atob(i)),u=JSON.parse(a);t.insertFragment(u)}else{var s=e.getData("text/plain"),c=e.getData("text/html");if(c)t.dangerouslyInsertHtml(c);else if(s){var l=s.split(/\r\n|\r|\n/),f=!1;try{for(var d=Ex(l),p=d.next();!p.done;p=d.next()){var h=p.value;f&&ad.splitNodes(t,{always:!0}),n(h),f=!0}}catch(e){r={error:e}}finally{try{p&&!p.done&&(o=d.return)&&o.call(d)}finally{if(r)throw r.error}}}}},t},cT=function(e){return null!=e},lT={object:!0,function:!0,undefined:!0},fT=/^\s*class[\s{/}]/,dT=Function.prototype.toString,pT=function(e){return!!function(e){if("function"!=typeof e)return!1;if(!hasOwnProperty.call(e,"length"))return!1;try{if("number"!=typeof e.length)return!1;if("function"!=typeof e.call)return!1;if("function"!=typeof e.apply)return!1}catch(e){return!1}return!function(e){if(!function(e){return!!cT(e)&&hasOwnProperty.call(lT,typeof e)}(e))return!1;try{return!!e.constructor&&e.constructor.prototype===e}catch(e){return!1}}(e)}(e)&&!fT.test(dT.call(e))},hT=function(e){return null!=e},gT=Object.keys,vT=function(){try{return Object.keys("primitive"),!0}catch(e){return!1}}()?Object.keys:function(e){return gT(hT(e)?Object(e):e)},yT=Math.max,mT=function(){var e,t=Object.assign;return"function"==typeof t&&(t(e={foo:"raz"},{bar:"dwa"},{trzy:"trzy"}),e.foo+e.bar+e.trzy==="razdwatrzy")}()?Object.assign:function(e,t){var n,r,o,i=yT(arguments.length,2);for(e=Object(function(e){if(!hT(e))throw new TypeError("Cannot use null or undefined");return e}(e)),o=function(r){try{e[r]=t[r]}catch(e){n||(n=e)}},r=1;r<i;++r)vT(t=arguments[r]).forEach(o);if(void 0!==n)throw n;return e},bT=Array.prototype.forEach,wT=Object.create,ET=function(e){var t=wT(null);return bT.call(arguments,(function(e){hT(e)&&function(e,t){var n;for(n in e)t[n]=e[n]}(Object(e),t)})),t},AT="razdwatrzy",ST=String.prototype.indexOf,CT="function"==typeof AT.contains&&!0===AT.contains("dwa")&&!1===AT.contains("foo")?String.prototype.contains:function(e){return ST.call(this,e,arguments[1])>-1},xT=Ab((function(e){var t=e.exports=function(e,t){var n,r,o,i,a;return arguments.length<2||"string"!=typeof e?(i=t,t=e,e=null):i=arguments[2],cT(e)?(n=CT.call(e,"c"),r=CT.call(e,"e"),o=CT.call(e,"w")):(n=o=!0,r=!1),a={value:t,configurable:n,enumerable:r,writable:o},i?mT(ET(i),a):a};t.gs=function(e,t,n){var r,o,i,a;return"string"!=typeof e?(i=n,n=t,t=e,e=null):i=arguments[3],cT(t)?pT(t)?cT(n)?pT(n)||(i=n,n=void 0):n=void 0:(i=t,t=n=void 0):t=void 0,cT(e)?(r=CT.call(e,"c"),o=CT.call(e,"e")):(r=!0,o=!1),a={get:t,set:n,configurable:r,enumerable:o},i?mT(ET(i),a):a}})),DT=function(e){if("function"!=typeof e)throw new TypeError(e+" is not a function");return e},OT=Ab((function(e,t){var n,r,o,i,a,u,s,c=Function.prototype.apply,l=Function.prototype.call,f=Object.create,d=Object.defineProperty,p=Object.defineProperties,h=Object.prototype.hasOwnProperty,g={configurable:!0,enumerable:!1,writable:!0};n=function(e,t){var n;return DT(t),h.call(this,"__ee__")?n=this.__ee__:(n=g.value=f(null),d(this,"__ee__",g),g.value=null),n[e]?"object"==typeof n[e]?n[e].push(t):n[e]=[n[e],t]:n[e]=t,this},r=function(e,t){var r,i;return DT(t),i=this,n.call(this,e,r=function(){o.call(i,e,r),c.call(t,this,arguments)}),r.__eeOnceListener__=t,this},o=function(e,t){var n,r,o,i;if(DT(t),!h.call(this,"__ee__"))return this;if(!(n=this.__ee__)[e])return this;if("object"==typeof(r=n[e]))for(i=0;o=r[i];++i)o!==t&&o.__eeOnceListener__!==t||(2===r.length?n[e]=r[i?0:1]:r.splice(i,1));else r!==t&&r.__eeOnceListener__!==t||delete n[e];return this},i=function(e){var t,n,r,o,i;if(h.call(this,"__ee__")&&(o=this.__ee__[e]))if("object"==typeof o){for(n=arguments.length,i=new Array(n-1),t=1;t<n;++t)i[t-1]=arguments[t];for(o=o.slice(),t=0;r=o[t];++t)c.call(r,this,i)}else switch(arguments.length){case 1:l.call(o,this);break;case 2:l.call(o,this,arguments[1]);break;case 3:l.call(o,this,arguments[1],arguments[2]);break;default:for(n=arguments.length,i=new Array(n-1),t=1;t<n;++t)i[t-1]=arguments[t];c.call(o,this,i)}},a={on:n,once:r,off:o,emit:i},u={on:xT(n),once:xT(r),off:xT(o),emit:xT(i)},s=p({},u),e.exports=t=function(e){return null==e?f(s):p(Object(e),u)},t.methods=a}));function kT(e){var t=VD.get(e);return null==t&&(t=OT(),VD.set(e,t)),t}var BT=new WeakMap;function TT(e,t){var n=BT.get(e);null==n&&(n=new Set,BT.set(e,n)),n.add(t)}function FT(e){var t=gO.getTextarea(e).$textAreaContainer,n=t.width(),r=t.height(),o=t.offset();return{top:o.top,left:o.left,width:n,height:r}}function _T(e){var t={top:"0",left:"0"},n=e.selection;if(null==n)return t;var r=FT(e);if(null==r)return t;var o=r.top,i=r.left,a=r.width,u=r.height,s=gO.toDOMRange(e,n).getClientRects()[0];if(null==s)return t;s.width;var c=s.height,l={},f=s.top-o,d=s.left-i;if(d>a/2){var p=a-d;l.right=p+5+"px"}else l.left=d+5+"px";if(f>u/2){var h=u-f;l.bottom=h+5+"px"}else{var g=f+c;g<0&&(g=0),l.top=g+5+"px"}return l}function PT(e,t,n){void 0===n&&(n="modal");var r={top:"0",left:"0"};if(null==e.selection)return r;var o=ff.isElement(t)&&e.isVoid(t),i=ff.isElement(t)&&e.isInline(t),a=MD.get(t);if(null==a)return r;var u=a.getBoundingClientRect(),s=u.top,c=u.left,l=u.height,f=u.width;if(o){var d=function(e){var t=[];t.push(e);for(var n=0;t.length>0;){var r=t.pop();if(null==r)break;if(++n>1e4)break;var o=r.nodeName;if(1===r.nodeType){var i=o.toLowerCase();if(KD.includes(i)||"iframe"===i||"video"===i)return r;var a=r.children||[],u=a.length;if(u)for(var s=u-1;s>=0;s--)t.push(a[s])}}return null}(a);if(null!=d){var p=d.getBoundingClientRect();s=p.top,l=p.height}}var h=FT(e);if(null==h)return r;var g,v=h.top,y=h.left,m=h.width,b=h.height,w={},E=s-v,A=c-y;if("bar"===n)return w.left=A+"px",E>40?w.bottom=b-E+5+"px":w.top=E+l+5+"px",w;if("modal"===n)return o?i?A>(m-f)/2?w.right=m-A+5+"px":w.left=A+f+5+"px":w.left="20px":w.left=A+"px",o?((g=E)<0&&(g=0),w.top=g+"px"):E>(b-l)/2?w.bottom=b-E+5+"px":((g=E+l)<0&&(g=0),w.top=g+5+"px"),w;throw new Error("type '"+n+"' is invalid")}function jT(e,t){pB((function(){var n=FT(e);if(null!=n){var r,o=n.top,i=n.left,a=n.width,u=n.height,s=t.offset(),c=s.top,l=s.left,f=t.width(),d=t.height(),p=c-o,h=l-i,g=t.attr("style");if(g.indexOf("top")>=0&&(r=p+d-u)>0){var v=t.css("top"),y=parseInt(v.toString())-r;y<0&&(y=0),t.css("top",y+"px")}if(g.indexOf("bottom")>=0&&c<0){var m=t.css("bottom"),b=parseInt(m.toString())-Math.abs(c);t.css("bottom",b+"px")}if(g.indexOf("left")>=0&&(r=h+f-a)>0){var w=t.css("left"),E=parseInt(w.toString())-r;E<0&&(E=0),t.css("left",E+"px")}if(g.indexOf("right")>=0&&l<0){var A=t.css("right"),S=parseInt(A.toString())-Math.abs(l);t.css("right",S+"px")}}}))}var NT=EC("slice"),RT=uw("species"),IT=Db.Array,LT=Math.max;DA({target:"Array",proto:!0,forced:!NT},{slice:function(e,t){var n,r,o,i=eA(this),a=BE(i),u=iA(e,a),s=iA(void 0===t?a:t,a);if(TE(i)&&(n=i.constructor,(LE(n)&&(n===IT||TE(n.prototype))||fw(n)&&null===(n=n[RT]))&&(n=void 0),n===IT||void 0===n))return UO(i,u,s);for(r=new(void 0===n?IT:n)(LT(s-u,0)),o=0;u<s;u++,o++)u in i&&yS(r,o,i[u]);return r.length=o,r}});var MT=nA.f,zT=Nb("".startsWith),$T=Nb("".slice),HT=Math.min,UT=uS("startsWith"),VT=!UT&&!!function(){var e=MT(String.prototype,"startsWith");return e&&!e.writable}();DA({target:"String",proto:!0,forced:!VT&&!UT},{startsWith:function(e){var t=NA(Ib(this));iS(e);var n=kE(HT(arguments.length>1?arguments[1]:void 0,t.length)),r=NA(e);return zT?zT(t,r,n):$T(t,n,n+r.length)===r}});var qT=Object.assign,WT=Object.defineProperty,GT=Nb([].concat),KT=!qT||ew((function(){if(lw&&1!==qT({b:1},qT(WT({},"a",{enumerable:!0,get:function(){WT(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=qT({},e)[n]||OA(qT({},t)).join("")!=r}))?function(e,t){for(var n=Mb(e),r=arguments.length,o=1,i=hA.f,a=QE.f;r>o;)for(var u,s=SE(arguments[o++]),c=i?GT(OA(s),i(s)):OA(s),l=c.length,f=0;l>f;)u=c[f++],lw&&!ww(a,s,u)||(n[u]=s[u]);return n}:qT;DA({target:"Object",stat:!0,forced:Object.assign!==KT},{assign:KT});var YT=["props","attrs","style","dataset","on","hook"];function XT(e){var t=e.data,n=void 0===t?{}:t,r=e.children,o=void 0===r?[]:r;Object.keys(n).forEach((function(t){var r,o,i=n[t];if("key"!==t){if(!YT.includes(t)){if(t.startsWith("data-")){var a=t.slice(5);return a=Yg(a),function(e,t){null==e.data&&(e.data={});var n=e.data;null==n.dataset&&(n.dataset={}),Object.assign(n.dataset,t)}(e,((r={})[a]=i,r)),void delete n[t]}!function(e,t){null==e.data&&(e.data={});var n=e.data;null==n.props&&(n.props={}),Object.assign(n.props,t)}(e,(o={},o[t]=i,o)),delete n[t]}}else e.key=i})),o.length>0&&o.forEach((function(e){"string"!=typeof e&&XT(e)}))}var JT=[],ZT={};function QT(e,t,n){return cg(n.isInline(e)?"span":"div",null,t)}function eF(e,t){return void 0===t&&(t=!1),cg("span",{"data-slate-string":!0},t?e+"\n":e)}function tF(e,t){return void 0===e&&(e=0),void 0===t&&(t=!1),cg("span",{"data-slate-zero-width":t?"n":"z","data-slate-length":e},"\ufeff",t?cg("br",null):null)}function nF(e,t,n,r){return jD.set(e,t),ND.set(e,n),ff.isElement(e)?function(e,t){var n,r=gO.findKey(t,e),o=t.isInline(e),i=yf.isVoid(t,e),a=gB(r.id),u={id:a,key:r.id,"data-slate-node":"element","data-slate-inline":o},s=e.type,c=e.children,l=void 0===c?[]:c,f=function(e){return ZT[e]||QT}(s);n=i?null:l.map((function(n,r){return nF(n,r,e,t)}));var d=f(e,n,t);if(i){u["data-slate-void"]=!0;var p=o?"span":"div",h=Ax(Sf.texts(e),1),g=Ax(h[0],1)[0],v=cg(p,{"data-slate-spacer":!0,style:{height:"0",color:"transparent",outline:"none",position:"absolute"}},nF(g,0,e,t));d=cg(p,{style:{position:"relative"}},d,v),jD.set(g,0),ND.set(g,e)}return null==d.data&&(d.data={}),Object.assign(d.data,u),i||o||(d=function(e,t){var n=t;return JT.forEach((function(r){n=r(e,t)})),n}(e,d)),pB((function(){var t=nO(a);null!=t&&(LD.set(r,t),MD.set(e,t),ID.set(t,e))})),d}(e,r):function(e,t,n){if(null==e.text)throw new Error("Current node is not slate Text "+JSON.stringify(e));var r=gO.findKey(n,e),o=n.getConfig().decorate;if(null==o)throw new Error("Can not get config.decorate");var i=gO.findPath(n,e),a=o([e,i]),u=Hf.decorations(e,a),s=u.map((function(r,o){var i=function(e,t,n,r,o){void 0===t&&(t=!1);var i=e.text,a=gO.findPath(o,n),u=Of.parent(a);if(yf.isEditor(r))throw new Error("Text node "+JSON.stringify(n)+" parent is Editor");return o.isVoid(r)?tF(Sf.string(r).length):""!==i||r.children[r.children.length-1]!==n||o.isInline(r)||""!==yf.string(o,u)?""===i?tF():t&&"\n"===i.slice(-1)?eF(i,!0):eF(i):tF(0,!0)}(r,o===u.length-1,e,t,n);return i=function(e,t){var n=t;return JT.forEach((function(t){n=t(e,n)})),n}(r,i),cg("span",{"data-slate-leaf":!0},i)})),c=function(e){return"w-e-text-"+e}(r.id),l=cg("span",{"data-slate-node":"text",id:c,key:r.id},s);return pB((function(){var t=nO(c);null!=t&&(LD.set(r,t),MD.set(e,t),ID.set(t,e))})),l}(e,n,r)}function rF(e,t){var n,r=e.$scroll,o=function(e){return"w-e-textarea-"+e}(e.id),i=t.getConfig(),a=i.readOnly,u=i.autoFocus,s=function(e,t){return void 0===t&&(t=!1),Uh("div#"+e,{props:{contentEditable:!t}})}(o,a),c=t.children||[];s.children=c.map((function(e,n){var r=nF(e,n,t,t);return XT(r),r}));var l=FD.get(e);if(null==l&&(l=!0),l){var f=function(e){return wp('<div\n        id="'+e+'"\n        data-slate-editor\n        data-slate-node="value"\n        suppressContentEditableWarning\n        role="textarea"\n        spellCheck="true"\n        autoCorrect="true"\n        autoCapitalize="true"\n    ></div>')}(o);r.append(f),e.$textArea=f,n=f[0],(p=function(e,t){const n={create:[],update:[],remove:[],destroy:[],pre:[],post:[]},r=void 0!==t?t:_h;for(const t of $h)for(const r of e){const e=r[t];void 0!==e&&n[t].push(e)}function o(e,t){return function(){if(0==--t){const t=r.parentNode(e);r.removeChild(t,e)}}}function i(e,t){var o,a;let u,s=e.data;if(void 0!==s){const t=null===(o=s.hook)||void 0===o?void 0:o.init;Ih(t)&&(t(e),s=e.data)}const c=e.children,l=e.sel;if("!"===l)Rh(e.text)&&(e.text=""),e.elm=r.createComment(e.text);else if(void 0!==l){const o=l.indexOf("#"),f=l.indexOf(".",o),d=o>0?o:l.length,p=f>0?f:l.length,h=-1!==o||-1!==f?l.slice(0,Math.min(d,p)):l,g=e.elm=Ih(s)&&Ih(u=s.ns)?r.createElementNS(u,h,s):r.createElement(h,s);for(d<p&&g.setAttribute("id",l.slice(d+1,p)),f>0&&g.setAttribute("class",l.slice(p+1).replace(/\./g," ")),u=0;u<n.create.length;++u)n.create[u](Lh,e);if(jh(c))for(u=0;u<c.length;++u){const e=c[u];null!=e&&r.appendChild(g,i(e,t))}else Nh(e.text)&&r.appendChild(g,r.createTextNode(e.text));const v=e.data.hook;Ih(v)&&(null===(a=v.create)||void 0===a||a.call(v,Lh,e),v.insert&&t.push(e))}else e.elm=r.createTextNode(e.text);return e.elm}function a(e,t,n,o,a,u){for(;o<=a;++o){const a=n[o];null!=a&&r.insertBefore(e,i(a,u),t)}}function u(e){var t,r;const o=e.data;if(void 0!==o){null===(r=null===(t=null==o?void 0:o.hook)||void 0===t?void 0:t.destroy)||void 0===r||r.call(t,e);for(let t=0;t<n.destroy.length;++t)n.destroy[t](e);if(void 0!==e.children)for(let t=0;t<e.children.length;++t){const n=e.children[t];null!=n&&"string"!=typeof n&&u(n)}}}function s(e,t,i,a){for(var s,c;i<=a;++i){let a,l;const f=t[i];if(null!=f)if(Ih(f.sel)){u(f),a=n.remove.length+1,l=o(f.elm,a);for(let e=0;e<n.remove.length;++e)n.remove[e](f,l);const e=null===(c=null===(s=null==f?void 0:f.data)||void 0===s?void 0:s.hook)||void 0===c?void 0:c.remove;Ih(e)?e(f,l):l()}else r.removeChild(e,f.elm)}}function c(e,t,o){var u,l,f,d,p;const h=null===(u=t.data)||void 0===u?void 0:u.hook;null===(l=null==h?void 0:h.prepatch)||void 0===l||l.call(h,e,t);const g=t.elm=e.elm,v=e.children,y=t.children;if(e!==t){if(void 0!==t.data){for(let r=0;r<n.update.length;++r)n.update[r](e,t);null===(d=null===(f=t.data.hook)||void 0===f?void 0:f.update)||void 0===d||d.call(f,e,t)}Rh(t.text)?Ih(v)&&Ih(y)?v!==y&&function(e,t,n,o){let u,l,f,d,p=0,h=0,g=t.length-1,v=t[0],y=t[g],m=n.length-1,b=n[0],w=n[m];for(;p<=g&&h<=m;)null==v?v=t[++p]:null==y?y=t[--g]:null==b?b=n[++h]:null==w?w=n[--m]:Mh(v,b)?(c(v,b,o),v=t[++p],b=n[++h]):Mh(y,w)?(c(y,w,o),y=t[--g],w=n[--m]):Mh(v,w)?(c(v,w,o),r.insertBefore(e,v.elm,r.nextSibling(y.elm)),v=t[++p],w=n[--m]):Mh(y,b)?(c(y,b,o),r.insertBefore(e,y.elm,v.elm),y=t[--g],b=n[++h]):(void 0===u&&(u=zh(t,p,g)),l=u[b.key],Rh(l)?r.insertBefore(e,i(b,o),v.elm):(f=t[l],f.sel!==b.sel?r.insertBefore(e,i(b,o),v.elm):(c(f,b,o),t[l]=void 0,r.insertBefore(e,f.elm,v.elm))),b=n[++h]);(p<=g||h<=m)&&(p>g?(d=null==n[m+1]?null:n[m+1].elm,a(e,d,n,h,m,o)):s(e,t,p,g))}(g,v,y,o):Ih(y)?(Ih(e.text)&&r.setTextContent(g,""),a(g,null,y,0,y.length-1,o)):Ih(v)?s(g,v,0,v.length-1):Ih(e.text)&&r.setTextContent(g,""):e.text!==t.text&&(Ih(v)&&s(g,v,0,v.length-1),r.setTextContent(g,t.text)),null===(p=null==h?void 0:h.postpatch)||void 0===p||p.call(h,e,t)}}return function(e,t){let o,a,u;const l=[];for(o=0;o<n.pre.length;++o)n.pre[o]();for(function(e){return void 0!==e.sel}(e)||(e=function(e){const t=e.id?"#"+e.id:"",n=e.getAttribute("class"),o=n?"."+n.split(" ").join("."):"";return Ph(r.tagName(e).toLowerCase()+t+o,{},[],void 0,e)}(e)),Mh(e,t)?c(e,t,l):(a=e.elm,u=r.parentNode(a),i(t,l),null!==u&&(r.insertBefore(u,t.elm,r.nextSibling(a)),s(u,[e],0,0))),o=0;o<l.length;++o)l[o].data.hook.insert(l[o]);for(o=0;o<n.post.length;++o)n.post[o]();return t}}([Gh,ng,ug,Xh,eg,qh]))(n,s),FD.set(e,!1),_D.set(e,p)}else{var d=PD.get(e),p=_D.get(e);if(null==d||null==p)return;n=d.elm,p(d,s)}if(null!=n||null!=(n=nO(o))){if((l?u:t.isFocused())&&n.focus({preventScroll:!0}),l){var h=JD(n);h&&$D.set(t,h)}RD.set(t,n),MD.set(t,n),ID.set(n,t),PD.set(e,s)}}function oF(e){return"object"==typeof e&&null!=e&&1===e.nodeType}function iF(e,t){return(!t||"hidden"!==e)&&"visible"!==e&&"clip"!==e}function aF(e,t){if(e.clientHeight<e.scrollHeight||e.clientWidth<e.scrollWidth){var n=getComputedStyle(e,null);return iF(n.overflowY,t)||iF(n.overflowX,t)||function(e){var t=function(e){if(!e.ownerDocument||!e.ownerDocument.defaultView)return null;try{return e.ownerDocument.defaultView.frameElement}catch(e){return null}}(e);return!!t&&(t.clientHeight<e.scrollHeight||t.clientWidth<e.scrollWidth)}(e)}return!1}function uF(e,t,n,r,o,i,a,u){return i<e&&a>t||i>e&&a<t?0:i<=e&&u<=n||a>=t&&u>=n?i-e-r:a>t&&u<n||i<e&&u>n?a-t+o:0}function sF(e,t){var n=window,r=t.scrollMode,o=t.block,i=t.inline,a=t.boundary,u=t.skipOverflowHiddenElements,s="function"==typeof a?a:function(e){return e!==a};if(!oF(e))throw new TypeError("Invalid target");for(var c=document.scrollingElement||document.documentElement,l=[],f=e;oF(f)&&s(f);){if((f=f.parentElement)===c){l.push(f);break}null!=f&&f===document.body&&aF(f)&&!aF(document.documentElement)||null!=f&&aF(f,u)&&l.push(f)}for(var d=n.visualViewport?n.visualViewport.width:innerWidth,p=n.visualViewport?n.visualViewport.height:innerHeight,h=window.scrollX||pageXOffset,g=window.scrollY||pageYOffset,v=e.getBoundingClientRect(),y=v.height,m=v.width,b=v.top,w=v.right,E=v.bottom,A=v.left,S="start"===o||"nearest"===o?b:"end"===o?E:b+y/2,C="center"===i?A+m/2:"end"===i?w:A,x=[],D=0;D<l.length;D++){var O=l[D],k=O.getBoundingClientRect(),B=k.height,T=k.width,F=k.top,_=k.right,P=k.bottom,j=k.left;if("if-needed"===r&&b>=0&&A>=0&&E<=p&&w<=d&&b>=F&&E<=P&&A>=j&&w<=_)return x;var N=getComputedStyle(O),R=parseInt(N.borderLeftWidth,10),I=parseInt(N.borderTopWidth,10),L=parseInt(N.borderRightWidth,10),M=parseInt(N.borderBottomWidth,10),z=0,$=0,H="offsetWidth"in O?O.offsetWidth-O.clientWidth-R-L:0,U="offsetHeight"in O?O.offsetHeight-O.clientHeight-I-M:0;if(c===O)z="start"===o?S:"end"===o?S-p:"nearest"===o?uF(g,g+p,p,I,M,g+S,g+S+y,y):S-p/2,$="start"===i?C:"center"===i?C-d/2:"end"===i?C-d:uF(h,h+d,d,R,L,h+C,h+C+m,m),z=Math.max(0,z+g),$=Math.max(0,$+h);else{z="start"===o?S-F-I:"end"===o?S-P+M+U:"nearest"===o?uF(F,P,B,I,M+U,S,S+y,y):S-(F+B/2)+U/2,$="start"===i?C-j-R:"center"===i?C-(j+T/2)+H/2:"end"===i?C-_+L+H:uF(j,_,T,R,L+H,C,C+m,m);var V=O.scrollLeft,q=O.scrollTop;S+=q-(z=Math.max(0,Math.min(q+z,O.scrollHeight-B+U))),C+=V-($=Math.max(0,Math.min(V+$,O.scrollWidth-T+H)))}x.push({el:O,top:z,left:$})}return x}function cF(e){return e===Object(e)&&0!==Object.keys(e).length}function lF(e,t){return QD(t)&&gO.hasDOMNode(e,t,{editable:!0})}function fF(e,t){if(e.getConfig().readOnly)return!1;var n=dF(e,t)&&gO.toSlateNode(e,t);return yf.isVoid(e,n)}function dF(e,t){return QD(t)&&gO.hasDOMNode(e,t)}function pF(e,t,n){void 0===n&&(n=!1);var r=t.selection,o=t.getConfig(),i=gO.findDocumentOrShadowRoot(t).getSelection();if(i&&(!e.isComposing||n)&&t.isFocused()){var a="None"!==i.type;if(r||a){var u=RD.get(t),s=!1;if(u.contains(i.anchorNode)&&u.contains(i.focusNode)&&(s=!0),a&&s&&r){var c=gO.toSlateRange(t,i,{exactMatch:!0,suppressThrow:!0});if(c&&Nf.equals(c,r)){var l=!0;if(Nf.isCollapsed(r)){var f=i.anchorNode,d=i.anchorOffset;if(f===u){var p=u.childNodes,h=void 0;(h=p[d])&&h.matches("table")&&(l=!1),(h=p[d-1])&&h.matches("table")&&(l=!1)}}if(l)return}}if(!r||gO.hasRange(t,r)){e.isUpdatingSelection=!0;var g=r&&gO.toDOMRange(t,r);if(g){Nf.isBackward(r)?i.setBaseAndExtent(g.endContainer,g.endOffset,g.startContainer,g.startOffset):i.setBaseAndExtent(g.startContainer,g.startOffset,g.endContainer,g.endOffset);var v=g.startContainer.parentElement;if(!v.closest("[data-slate-spacer]")){v.getBoundingClientRect=g.getBoundingClientRect.bind(g);var y=document.body;(function(e,t){var n=!e.ownerDocument.documentElement.contains(e);if(cF(t)&&"function"==typeof t.behavior)return t.behavior(n?[]:sF(e,t));if(!n){var r=function(e){return!1===e?{block:"end",inline:"nearest"}:cF(e)?e:{block:"start",inline:"nearest"}}(t);!function(e,t){void 0===t&&(t="auto");var n="scrollBehavior"in document.body.style;e.forEach((function(e){var r=e.el,o=e.top,i=e.left;r.scroll&&n?r.scroll({top:o,left:i,behavior:t}):(r.scrollTop=o,r.scrollLeft=i)}))}(sF(e,r),r.behavior)}})(v,{scrollMode:"if-needed",boundary:o.scroll?u.parentElement:y,block:"end",behavior:"smooth"}),delete v.getBoundingClientRect}}else i.removeAllRanges();setTimeout((function(){g&&cO&&u.focus(),e.isUpdatingSelection=!1}))}else t.selection=gO.toSlateRange(t,i,{exactMatch:!1,suppressThrow:!1})}}}var hF=new WeakMap,gF=new WeakMap,vF={bold:"mod+b",compose:["down","left","right","up","backspace","enter"],moveBackward:"left",moveForward:"right",moveWordBackward:"ctrl+left",moveWordForward:"ctrl+right",deleteBackward:"shift?+backspace",deleteForward:"shift?+delete",extendBackward:"shift+left",extendForward:"shift+right",italic:"mod+i",splitBlock:"shift?+enter",undo:"mod+z",tab:"tab",selectAll:"mod+a"},yF={moveLineBackward:"opt+up",moveLineForward:"opt+down",moveWordBackward:"opt+left",moveWordForward:"opt+right",deleteBackward:["ctrl+backspace","ctrl+h"],deleteForward:["ctrl+delete","ctrl+d"],deleteLineBackward:"cmd+shift?+backspace",deleteLineForward:["cmd+shift?+delete","ctrl+k"],deleteWordBackward:"opt+shift?+backspace",deleteWordForward:"opt+shift?+delete",extendLineBackward:"opt+shift+up",extendLineForward:"opt+shift+down",redo:"cmd+shift+z",transposeCharacter:"ctrl+t"},mF={deleteWordBackward:"ctrl+shift?+backspace",deleteWordForward:"ctrl+shift?+delete",redo:["ctrl+y","ctrl+shift+z"]},bF=function(e){var t=vF[e],n=yF[e],r=mF[e],o=t&&iv(t),i=n&&iv(n),a=r&&iv(r);return function(e){return!(!o||!o(e))||!!(sO&&i&&i(e))||!(sO||!a||!a(e))}},wF={isBold:bF("bold"),isCompose:bF("compose"),isMoveBackward:bF("moveBackward"),isMoveForward:bF("moveForward"),isDeleteBackward:bF("deleteBackward"),isDeleteForward:bF("deleteForward"),isDeleteLineBackward:bF("deleteLineBackward"),isDeleteLineForward:bF("deleteLineForward"),isDeleteWordBackward:bF("deleteWordBackward"),isDeleteWordForward:bF("deleteWordForward"),isExtendBackward:bF("extendBackward"),isExtendForward:bF("extendForward"),isExtendLineBackward:bF("extendLineBackward"),isExtendLineForward:bF("extendLineForward"),isItalic:bF("italic"),isMoveLineBackward:bF("moveLineBackward"),isMoveLineForward:bF("moveLineForward"),isMoveWordBackward:bF("moveWordBackward"),isMoveWordForward:bF("moveWordForward"),isRedo:bF("redo"),isSplitBlock:bF("splitBlock"),isTransposeCharacter:bF("transposeCharacter"),isUndo:bF("undo"),isTab:bF("tab"),isSelectAll:bF("selectAll")};function EF(e){e.preventDefault()}var AF={beforeinput:function(e,t,n){var r=e,o=n.getConfig().readOnly;if(hO&&!o&&lF(n,r.target)){var i=n.selection,a=r.inputType,u=r.dataTransfer||r.data||void 0;if("insertCompositionText"!==a&&"deleteCompositionText"!==a){if(r.preventDefault(),!a.startsWith("delete")||a.startsWith("deleteBy")){var s=Ax(r.getTargetRanges(),1)[0];if(s){var c=gO.toSlateRange(n,s,{exactMatch:!1,suppressThrow:!1});i&&Nf.equals(i,c)||ad.select(n,c)}}if(i&&Nf.isExpanded(i)&&a.startsWith("delete")){var l=a.endsWith("Backward")?"backward":"forward";yf.deleteFragment(n,{direction:l})}else switch(a){case"deleteByComposition":case"deleteByCut":case"deleteByDrag":yf.deleteFragment(n);break;case"deleteContent":case"deleteContentForward":yf.deleteForward(n);break;case"deleteContentBackward":yf.deleteBackward(n);break;case"deleteEntireSoftLine":yf.deleteBackward(n,{unit:"line"}),yf.deleteForward(n,{unit:"line"});break;case"deleteHardLineBackward":yf.deleteBackward(n,{unit:"block"});break;case"deleteSoftLineBackward":yf.deleteBackward(n,{unit:"line"});break;case"deleteHardLineForward":yf.deleteForward(n,{unit:"block"});break;case"deleteSoftLineForward":yf.deleteForward(n,{unit:"line"});break;case"deleteWordBackward":yf.deleteBackward(n,{unit:"word"});break;case"deleteWordForward":yf.deleteForward(n,{unit:"word"});break;case"insertLineBreak":case"insertParagraph":yf.insertBreak(n);break;case"insertFromDrop":case"insertFromPaste":case"insertFromYank":case"insertReplacementText":case"insertText":if("insertFromPaste"===a&&!qD.get(n))break;u instanceof DataTransfer?n.insertData(u):"string"==typeof u&&yf.insertText(n,u)}}}},blur:function(e,t,n){var r=e,o=t.isUpdatingSelection,i=t.latestElement;if(!n.getConfig().readOnly&&!o&&lF(n,r.target)){var a=gO.findDocumentOrShadowRoot(n);if(i!==a.activeElement){var u=r.relatedTarget;if(!(u===gO.toDOMNode(n,n)||ZD(u)&&u.hasAttribute("data-slate-spacer"))){if(null!=u&&QD(u)&&gO.hasDOMNode(n,u)){var s=gO.toSlateNode(n,u);if(ff.isElement(s)&&!n.isVoid(s))return}if(lO){var c=a.getSelection();null==c||c.removeAllRanges()}HD.delete(n)}}}},focus:function(e,t,n){var r=gO.toDOMNode(n,n),o=gO.findDocumentOrShadowRoot(n);t.latestElement=o.activeElement,cO&&e.target!==r?r.focus():HD.set(n,!0)},click:function(e,t,n){if(!n.getConfig().readOnly&&dF(n,e.target)&&QD(e.target)){var r=gO.toSlateNode(n,e.target),o=gO.findPath(n,r);if(yf.hasPath(n,o)&&Sf.get(n,o)===r){var i=yf.start(n,o),a=yf.end(n,o),u=yf.void(n,{at:i}),s=yf.void(n,{at:a});if(u&&s&&Of.equals(u[1],s[1])){var c=yf.range(n,i);ad.select(n,c)}}}},compositionstart:function(e,t,n){if(lF(n,e.target)){var r=n.selection;if(r&&Nf.isExpanded(r)&&(yf.deleteFragment(n),Promise.resolve().then((function(){pF(t,n,!0)}))),r&&Nf.isCollapsed(r)){var o=gO.toDOMRange(n,r).startContainer,i=o.textContent||"";hF.set(n,i),gF.set(n,o)}t.isComposing=!0,function(e,t){var n;t.getConfig().placeholder&&t.isEmpty()&&e.showPlaceholder&&(null===(n=e.$placeholder)||void 0===n||n.hide(),e.showPlaceholder=!1)}(t,n)}},compositionend:function(e,t,n){var r=e;if(lF(n,r.target)){t.isComposing=!1;var o=n.selection;if(null!=o){(pO||cO)&&gO.cleanExposedTexNodeInSelectionBlock(n);for(var i=Nf.isBackward(o)?o.focus:o.anchor,a=Ax(yf.node(n,[i.path[0]]),1)[0],u=0;u<i.path.length;u++){var s=Ax(yf.node(n,i.path.slice(0,u+1)),1)[0];if(ff.isElement(s)&&((lO||cO)&&"link"===s.type||"code"===s.type)){gO.setNewKey(a);break}}var c=r.data;if(c){if(n.getConfig().maxLength){var l=gO.getLeftLengthOfMaxLength(n);l<c.length?(gO.toDOMRange(n,o).startContainer.textContent=hF.get(n)||"",l>0&&yf.insertText(n,c.slice(0,l)),t.changeViewState()):yf.insertText(n,c)}else yf.insertText(n,c);lO||setTimeout((function(){var e=n.selection;if(null!=e){var t=gF.get(n);null!=t&&gO.toDOMRange(n,e).startContainer!==t&&(t.textContent=hF.get(n)||"")}}))}}}},compositionupdate:function(e,t,n){lF(n,e.target)&&(t.isComposing=!0)},keydown:function(e,t,n){var r=e,o=n.selection;if(!n.getConfig().readOnly&&!t.isComposing&&lF(n,r.target)){if(function(e,t){var n=CD.get(e),r=n&&n.getMenus(),o=DD.get(e),i=o&&o.getMenus(),a=wx(wx({},r),i);for(var u in a){var s=a[u],c=s.hotkey;if(c&&ov(c,t)&&!s.isDisabled(e)){var l=s.getValue(e);s.exec(e,l)}}}(n,r),wF.isTab(r))return EF(r),void n.handleTab();if(wF.isRedo(r))return EF(r),void("function"==typeof n.redo&&n.redo());if(wF.isUndo(r))return EF(r),void("function"==typeof n.undo&&n.undo());if(wF.isMoveLineBackward(r))return EF(r),void ad.move(n,{unit:"line",reverse:!0});if(wF.isMoveLineForward(r))return EF(r),void ad.move(n,{unit:"line"});if(wF.isExtendLineBackward(r))return EF(r),void ad.move(n,{unit:"line",edge:"focus",reverse:!0});if(wF.isExtendLineForward(r))return EF(r),void ad.move(n,{unit:"line",edge:"focus"});if(wF.isMoveBackward(r))return EF(r),void(o&&Nf.isCollapsed(o)?ad.move(n,{reverse:!0}):ad.collapse(n,{edge:"start"}));if(wF.isMoveForward(r))return EF(r),void(o&&Nf.isCollapsed(o)?ad.move(n):ad.collapse(n,{edge:"end"}));if(wF.isMoveWordBackward(r))return EF(r),o&&Nf.isExpanded(o)&&ad.collapse(n,{edge:"focus"}),void ad.move(n,{unit:"word",reverse:!0});if(wF.isMoveWordForward(r))return EF(r),o&&Nf.isExpanded(o)&&ad.collapse(n,{edge:"focus"}),void ad.move(n,{unit:"word"});if(wF.isSelectAll(r))return EF(r),void n.selectAll();if(hO){if((pO||lO)&&o&&(wF.isDeleteBackward(r)||wF.isDeleteForward(r))&&Nf.isCollapsed(o)){var i=Sf.parent(n,o.anchor.path);if(ff.isElement(i)&&yf.isVoid(n,i)&&yf.isInline(n,i))return r.preventDefault(),void ad.delete(n,{unit:"block"})}}else{if(wF.isBold(r)||wF.isItalic(r)||wF.isTransposeCharacter(r))return void EF(r);if(wF.isSplitBlock(r))return EF(r),void yf.insertBreak(n);if(wF.isDeleteBackward(r))return EF(r),void(o&&Nf.isExpanded(o)?yf.deleteFragment(n,{direction:"backward"}):yf.deleteBackward(n));if(wF.isDeleteForward(r))return EF(r),void(o&&Nf.isExpanded(o)?yf.deleteFragment(n,{direction:"forward"}):yf.deleteForward(n));if(wF.isDeleteLineBackward(r))return EF(r),void(o&&Nf.isExpanded(o)?yf.deleteFragment(n,{direction:"backward"}):yf.deleteBackward(n,{unit:"line"}));if(wF.isDeleteLineForward(r))return EF(r),void(o&&Nf.isExpanded(o)?yf.deleteFragment(n,{direction:"forward"}):yf.deleteForward(n,{unit:"line"}));if(wF.isDeleteWordBackward(r))return EF(r),void(o&&Nf.isExpanded(o)?yf.deleteFragment(n,{direction:"backward"}):yf.deleteBackward(n,{unit:"word"}));if(wF.isDeleteWordForward(r))return EF(r),void(o&&Nf.isExpanded(o)?yf.deleteFragment(n,{direction:"forward"}):yf.deleteForward(n,{unit:"word"}))}}},keypress:function(e,t,n){if(!hO&&!n.getConfig().readOnly&&lF(n,e.target)){e.preventDefault();var r=e.key;yf.insertText(n,r)}},copy:function(e,t,n){var r=e;if(lF(n,r.target)){r.preventDefault();var o=r.clipboardData;null!=o&&n.setFragmentData(o)}},cut:function(e,t,n){var r=e,o=n.selection;if(!n.getConfig().readOnly&&lF(n,r.target)){r.preventDefault();var i=r.clipboardData;if(null!=i&&(n.setFragmentData(i),o))if(Nf.isExpanded(o))yf.deleteFragment(n);else{var a=Sf.parent(n,o.anchor.path);yf.isVoid(n,a)&&ad.delete(n)}}},paste:function(e,t,n){qD.set(n,!0);var r=e;if(!n.getConfig().readOnly&&lF(n,r.target)){var o=n.getConfig().customPaste;if(o&&!1===o(n,r))return void qD.set(n,!1);if(!hO||function(e){return e.clipboardData&&""!==e.clipboardData.getData("text/plain")&&1===e.clipboardData.types.length}(r)){r.preventDefault();var i=r.clipboardData;null!=i&&n.insertData(i)}}},dragover:function(e,t,n){if(dF(n,e.target)){var r=gO.toSlateNode(n,e.target);yf.isVoid(n,r)&&e.preventDefault()}},dragstart:function(e,t,n){var r=e;if(dF(n,r.target)&&!n.getConfig().readOnly){var o=gO.toSlateNode(n,r.target),i=gO.findPath(n,o);if(yf.isVoid(n,o)||yf.void(n,{at:i,voids:!0})){var a=yf.range(n,i);ad.select(n,a)}var u=r.dataTransfer;null!=u&&(t.isDraggingInternally=!0,n.setFragmentData(u))}},dragend:function(e,t,n){var r=e;n.getConfig().readOnly||t.isDraggingInternally&&dF(n,r.target)&&(t.isDraggingInternally=!1)},drop:function(e,t,n){var r=e,o=r.dataTransfer;if(!n.getConfig().readOnly&&dF(n,r.target)&&null!=o&&!(hO&&lO&&o.files.length>0)){r.preventDefault();var i=n.selection,a=gO.findEventRange(n,r);ad.select(n,a),t.isDraggingInternally&&(i&&ad.delete(n,{at:i}),t.isDraggingInternally=!1),n.insertData(o),n.isFocused()||n.focus()}}},SF=1,CF=function(){function e(e){var t=this;this.id=SF++,this.$textArea=null,this.$progressBar=wp('<div class="w-e-progress-bar"></div>'),this.$maxLengthInfo=wp('<div class="w-e-max-length-info"></div>'),this.isComposing=!1,this.isUpdatingSelection=!1,this.isDraggingInternally=!1,this.latestElement=null,this.showPlaceholder=!1,this.$placeholder=null,this.latestEditorSelection=null,this.onDOMSelectionChange=Fh((function(){var e=t.editorInstance;!function(e,t){var n=e.isComposing,r=e.isUpdatingSelection,o=e.isDraggingInternally;if(!(t.getConfig().readOnly||n||r||o)){var i=gO.findDocumentOrShadowRoot(t),a=i.activeElement,u=gO.toDOMNode(t,t),s=i.getSelection();if(a===u?(e.latestElement=a,HD.set(t,!0)):HD.delete(t),!s)return ad.deselect(t);var c=s.anchorNode,l=s.focusNode,f=lF(t,c)||fF(t,c),d=lF(t,l)||fF(t,l);if(f&&d){var p=gO.toSlateRange(t,s,{exactMatch:!1,suppressThrow:!1});ad.select(t,p)}else ad.deselect(t)}}(t,e)}),100);var n=wp(e);if(0===n.length)throw new Error("Cannot find textarea DOM by selector '"+e+"'");this.$box=n;var r=wp('<div class="w-e-text-container"></div>');r.append(this.$progressBar),r.append(this.$maxLengthInfo),n.append(r);var o=wp('<div class="w-e-scroll"></div>');r.append(o),this.$scroll=o,this.$textAreaContainer=r,pB((function(){var e=t.editorInstance,n=gO.getWindow(e);n.document.addEventListener("selectionchange",t.onDOMSelectionChange),e.on("destroyed",(function(){n.document.removeEventListener("selectionchange",t.onDOMSelectionChange)})),r.on("click",(function(){return e.hidePanelOrModal()})),e.on("change",t.changeViewState.bind(t));var o=e.getConfig().onChange;o&&e.on("change",(function(){return o(e)})),t.onFocusAndOnBlur(),e.on("change",t.changeMaxLengthInfo.bind(t)),t.bindEvent()}))}return Object.defineProperty(e.prototype,"editorInstance",{get:function(){var e=AD.get(this);if(null==e)throw new Error("Can not get editor instance");return e},enumerable:!1,configurable:!0}),e.prototype.bindEvent=function(){var e=this,t=this.$textArea,n=this.$scroll,r=this.editorInstance;null!=t&&(gh(AF,(function(n,o){t.on(o,(function(t){n(t,e,r)}))})),r.getConfig().scroll&&(n.css("overflow-y","auto"),n.on("scroll",Fh((function(){r.emit("scroll")}),100))))},e.prototype.onFocusAndOnBlur=function(){var e=this,t=this.editorInstance,n=t.getConfig(),r=n.onBlur,o=n.onFocus;this.latestEditorSelection=t.selection,t.on("change",(function(){null==e.latestEditorSelection&&null!=t.selection?setTimeout((function(){return o&&o(t)})):null!=e.latestEditorSelection&&null==t.selection&&setTimeout((function(){return r&&r(t)})),e.latestEditorSelection=t.selection}))},e.prototype.changeMaxLengthInfo=function(){var e=this.editorInstance,t=e.getConfig().maxLength;if(t){var n=t-gO.getLeftLengthOfMaxLength(e);this.$maxLengthInfo[0].innerHTML=n+"/"+t}},e.prototype.changeProgress=function(e){var t=this.$progressBar;t.css("width",e+"%"),e>=100&&setTimeout((function(){t.hide(),t.css("width","0"),t.show()}),1e3)},e.prototype.changeViewState=function(){var e=this,t=this.editorInstance;rF(this,t),function(e,t){var n,r=t.getConfig().placeholder;if(r){var o=t.isEmpty();if(o&&!e.showPlaceholder&&!e.isComposing){if(null==e.$placeholder){var i=wp('<div class="w-e-text-placeholder">'+r+"</div>");e.$textAreaContainer.append(i),e.$placeholder=i}return e.$placeholder.show(),void(e.showPlaceholder=!0)}!o&&e.showPlaceholder&&(null===(n=e.$placeholder)||void 0===n||n.hide(),e.showPlaceholder=!1)}}(this,t),pB((function(){pF(e,t)}))},e.prototype.destroy=function(){this.$textAreaContainer.remove()},e}();function xF(e){e.removeAttr("width"),e.removeAttr("height"),e.removeAttr("fill"),e.removeAttr("class"),e.removeAttr("t"),e.removeAttr("p-id");var t=e.children();t.length&&xF(t)}function DF(){return wp('<svg viewBox="0 0 1024 1024"><path d="M498.7 655.8l-197.6-268c-8.1-10.9-0.3-26.4 13.3-26.4h395.2c13.6 0 21.4 15.4 13.3 26.4l-197.6 268c-6.6 9-20 9-26.6 0z"></path></svg>')}function OF(){return wp('<div class="w-e-bar-divider"></div>')}function kF(e,t,n,r,o){if(void 0===o&&(o=!1),t){if(r){var i=sO?"cmd":"ctrl";r=r.replace("mod",i)}if(o)r&&(e.attr("data-tooltip",r),e.addClass("w-e-menu-tooltip-v5"),e.addClass("tooltip-right"));else{var a=r?n+"\n"+r:n;e.attr("data-tooltip",a),e.addClass("w-e-menu-tooltip-v5")}}}JC("match",(function(e,t,n){return[function(t){var n=Ib(this),r=null==t?void 0:kw(t,e);return r?ww(r,t,n):new RegExp(t)[e](NA(n))},function(e){var r=mw(this),o=NA(e),i=n(t,r,o);if(i.done)return i.value;if(!r.global)return sx(r,o);var a=r.unicode;r.lastIndex=0;for(var u,s=[],c=0;null!==(u=sx(r,o));){var l=NA(u[0]);s[c]=l,""===l&&(r.lastIndex=QC(o,kE(r.lastIndex),a)),c++}return 0===c?null:s}]}));var BF=function(){function e(e,t,n){var r=this;void 0===n&&(n=!1),this.$elem=wp('<div class="w-e-bar-item"></div>'),this.$button=wp('<button type="button"></button>'),this.disabled=!1,this.menu=t;var o=t.tag,i=t.width;if("button"!==o)throw new Error("Invalid tag '"+o+"', expected 'button'");var a=t.title,u=t.hotkey,s=void 0===u?"":u,c=t.iconSvg,l=void 0===c?"":c,f=this.$button;if(l){var d=wp(l);xF(d),f.append(d)}else f.text(a);kF(f,l,a,s,n),n&&l&&f.append(wp('<span class="title">'+a+"</span>")),i&&f.css("width",i+"px"),f.attr("data-menu-key",e),this.$elem.append(f),pB((function(){return r.init()}))}return e.prototype.init=function(){var e=this;this.setActive(),this.setDisabled(),this.$button.on("click",(function(t){t.preventDefault(),UF(e).hidePanelOrModal(),e.disabled||(e.exec(),e.onButtonClick())}))},e.prototype.exec=function(){var e=UF(this),t=this.menu,n=t.getValue(e);t.exec(e,n)},e.prototype.setActive=function(){var e=UF(this),t=this.$button,n="active";this.menu.isActive(e)?t.addClass(n):t.removeClass(n)},e.prototype.setDisabled=function(){var e=UF(this),t=this.$button,n=this.menu.isDisabled(e);(null==e.selection||e.isDisabled())&&(n=!0),this.menu.alwaysEnable&&(n=!1);var r="disabled";n?t.addClass(r):t.removeClass(r),this.disabled=n},e.prototype.changeMenuState=function(){this.setActive(),this.setDisabled()},e}(),TF=function(e){function t(t,n,r){return void 0===r&&(r=!1),e.call(this,t,n,r)||this}return bx(t,e),t.prototype.onButtonClick=function(){},t}(BF),FF=function(){function e(e){this.isShow=!1,this.showTime=0,this.record(e)}return e.prototype.record=function(e){var t=kD.get(e);null==t&&(t=new Set,kD.set(e,t)),t.add(this),BD.set(this,e)},e.prototype.renderContent=function(e){var t=this.$elem;t.empty(),t.append(e);var n=this.genSelfElem();n&&t.append(n)},e.prototype.appendTo=function(e){var t=this.$elem;e.append(t)},e.prototype.show=function(){if(!this.isShow){this.showTime=Date.now(),this.$elem.show(),this.isShow=!0;var e=BD.get(this);e&&e.emit("modalOrPanelShow",this)}},e.prototype.hide=function(){if(this.isShow&&!(Date.now()-this.showTime<200)){this.$elem.hide(),this.isShow=!1;var e=BD.get(this);e&&e.emit("modalOrPanelHide")}},e}(),_F=function(e){function t(t){var n=e.call(this,t)||this;return n.type="dropPanel",n.$elem=wp('<div class="w-e-drop-panel"></div>'),n}return bx(t,e),t.prototype.genSelfElem=function(){return null},t}(FF),PF=function(e){function t(t,n,r){void 0===r&&(r=!1);var o=e.call(this,t,n,r)||this;if(o.dropPanel=null,o.menu=n,n.showDropPanel){var i=DF();o.$button.append(i)}return o}return bx(t,e),t.prototype.onButtonClick=function(){this.menu.showDropPanel&&this.handleDropPanel()},t.prototype.handleDropPanel=function(){var e=this.menu;if(null!=e.getPanelContentElem){var t=UF(this);if(null==this.dropPanel){var n=new _F(t),r=e.getPanelContentElem(t);n.renderContent(r),n.appendTo(this.$elem),n.show(),this.dropPanel=n}else{var o=this.dropPanel;o.isShow?o.hide():(r=e.getPanelContentElem(t),o.renderContent(r),o.show())}var i=this.dropPanel;if(i.isShow){var a=this.$elem,u=a.offset().left,s=a.parents(".w-e-bar");u-s.offset().left>=s.width()/2?i.$elem.css({left:"none",right:"0"}):i.$elem.css({left:"0",right:"none"})}}},t}(BF),jF=function(e){function t(t,n){void 0===n&&(n=0);var r=e.call(this,t)||this;r.type="modal",r.$elem=wp('<div class="w-e-modal"></div>'),r.width=0,n&&(r.width=n);var o=r.$elem;return o.on("click",(function(e){return e.stopPropagation()})),o.on("keyup",(function(e){"Escape"===e.code&&(r.hide(),t.restoreSelection())})),r}return bx(t,e),t.prototype.genSelfElem=function(){var e=this,t=wp('<span class="btn-close"><svg viewBox="0 0 1024 1024"><path d="M1024 896.1024l-128 128L512 640 128 1024 0 896 384 512 0 128 128 0 512 384 896.1024 0l128 128L640 512z"></path></svg></span>'),n=BD.get(this);return t.on("click",(function(){e.hide(),null==n||n.restoreSelection()})),t},t.prototype.setStyle=function(e){var t=this.width,n=this.$elem;n.attr("style",""),t&&n.css("width",t+"px"),n.css(e)},t}(FF);function NF(e,t,n){var r=wp('<label class="babel-container"></label>');r.append("<span>"+e+"</span>");var o=wp('<input type="text" id="'+t+'" placeholder="'+(n||"")+'">');return r.append(o),[r[0],o[0]]}function RF(e,t,n){var r=wp('<label class="babel-container"></label>');r.append("<span>"+e+"</span>");var o=wp('<textarea type="text" id="'+t+'" placeholder="'+(n||"")+'"></textarea>');return r.append(o),[r[0],o[0]]}function IF(e,t){var n=wp('<div class="button-container"></div>'),r=wp('<button type="button" id="'+e+'">'+t+"</button>");return n.append(r),[n[0],r[0]]}var LF=function(e){function t(t,n,r){void 0===r&&(r=!1);var o=e.call(this,t,n,r)||this;return o.$body=wp("body"),o.modal=null,o.menu=n,o}return bx(t,e),t.prototype.onButtonClick=function(){this.menu.showModal&&this.handleModal()},t.prototype.getPosition=function(){var e=UF(this),t=this.menu.getModalPositionNode(e);return ff.isElement(t)?PT(e,t,"modal"):_T(e)},t.prototype.handleModal=function(){var e=UF(this),t=this.menu;if(null==this.modal){var n=new jF(e,t.modalWidth);this.renderAndShowModal(n,!0),this.modal=n}else(n=this.modal).isShow?n.hide():this.renderAndShowModal(n,!1)},t.prototype.renderAndShowModal=function(e,t){void 0===t&&(t=!1);var n=UF(this),r=this.menu;if(null!=r.getModalContentElem){var o=gO.getTextarea(n),i=gO.getToolbar(n),a=((null==i?void 0:i.getConfig())||{}).modalAppendToBody,u=r.getModalContentElem(n);if(e.renderContent(u),a)e.setStyle({left:"0",right:"0"});else{var s=this.getPosition();e.setStyle(s)}t&&(a?e.appendTo(this.$body):e.appendTo(o.$textAreaContainer)),e.show(),a||jT(n,e.$elem),setTimeout((function(){n.blur()}))}},t}(BF),MF=function(e){function t(t,n){var r=e.call(this,t)||this;return r.type="selectList",r.$elem=wp('<div class="w-e-select-list"></div>'),n&&r.$elem.css("width",n+"px"),r.$elem.on("click",(function(e){e.stopPropagation()})),r}return bx(t,e),t.prototype.renderList=function(e){var t=this.$elem;t.empty();var n=wp("<ul></ul>");e.forEach((function(e){var t=e.value,r=e.text,o=e.selected,i=e.styleForRenderMenuList,a=wp('<li data-value="'+t+'"></li>');if(i&&a.css(i),o){var u=wp('<svg viewBox="0 0 1446 1024"><path d="M574.116299 786.736392 1238.811249 48.517862C1272.390222 11.224635 1329.414799 7.827718 1366.75664 41.450462 1403.840015 74.840484 1406.731043 132.084741 1373.10189 169.433699L655.118888 966.834607C653.072421 969.716875 650.835807 972.514337 648.407938 975.210759 615.017957 1012.29409 558.292155 1015.652019 521.195664 982.250188L72.778218 578.493306C35.910826 545.297758 32.859041 488.584019 66.481825 451.242134 99.871807 414.158803 156.597563 410.800834 193.694055 444.202665L574.116299 786.736392Z"></path></svg>');a.append(u),a.addClass("selected")}a.append(wp('<span data-value="'+t+'">'+r+"</span>")),a.attr("title",r),n.append(a)})),t.append(n)},t.prototype.genSelfElem=function(){return null},t}(FF),zF=function(){function e(e,t,n){var r=this;void 0===n&&(n=!1),this.$elem=wp('<div class="w-e-bar-item"></div>'),this.$button=wp('<button type="button" class="select-button"></button>'),this.disabled=!1,this.selectList=null;var o=t.tag,i=t.title,a=t.width,u=t.iconSvg,s=void 0===u?"":u,c=t.hotkey,l=void 0===c?"":c;if("select"!==o)throw new Error("Invalid tag '"+o+"', expected 'select'");var f=this.$button;a&&f.css("width",a+"px"),f.attr("data-menu-key",e),kF(f,s,i,l,n),this.$elem.append(f),this.menu=t,pB((function(){return r.init()}))}return e.prototype.init=function(){var e=this;this.setSelectedValue(),this.$button.on("click",(function(t){t.preventDefault(),UF(e).hidePanelOrModal(),e.trigger()}))},e.prototype.trigger=function(){var e=this,t=UF(this);if(!t.isDisabled()&&!this.disabled){var n=this.menu;if(null==this.selectList){this.selectList=new MF(t,n.selectPanelWidth);var r=this.selectList,o=n.getOptions(t);r.renderList(o),r.appendTo(this.$elem),r.show(),r.$elem.on("click","li",(function(t){var n=t.target;if(null!=n){t.preventDefault();var r=wp(n).attr("data-value");e.onChange(r)}}))}else(r=this.selectList).isShow?r.hide():(o=n.getOptions(t),r.renderList(o),r.show())}},e.prototype.onChange=function(e){var t=UF(this),n=this.menu;n.exec&&n.exec(t,e)},e.prototype.setSelectedValue=function(){var e=UF(this),t=this.menu,n=t.getValue(e),r=function(e,t){for(var n=e.length,r="",o=0;o<n;o++){var i=e[o];if(i.value===t){r=i.text;break}}return r}(t.getOptions(e),n.toString()),o=this.$button,i=DF();o.empty(),o.text(r),o.append(i)},e.prototype.setDisabled=function(){var e=UF(this),t=this.menu.isDisabled(e),n=this.$button;(null==e.selection||e.isDisabled())&&(t=!0);var r="disabled";t?n.addClass(r):n.removeClass(r),this.disabled=t},e.prototype.changeMenuState=function(){this.setSelectedValue(),this.setDisabled()},e}(),$F=function(){function e(e){this.$elem=wp('<div class="w-e-bar-item w-e-bar-item-group"></div>'),this.$container=wp('<div class="w-e-bar-item-menus-container"></div>'),this.$button=wp('<button type="button"></button>');var t=e.key,n=e.iconSvg,r=e.title,o=this.$elem,i=this.$button;if(n){var a=wp(n);xF(a),i.append(a)}else i.text(r);i.attr("data-menu-key",t);var u=DF();i.append(u),o.append(i);var s=this.$container;o.append(s);var c=this.createObserver();this.observe(c)}return e.prototype.appendBarItem=function(e){var t=e.$elem;this.$container.append(t)},e.prototype.observe=function(e){var t=this.$container;e.observe(t[0],{childList:!0,subtree:!0,attributes:!0})},e.prototype.createObserver=function(){var e=this,t=this.$container,n=this.$button,r=new MutationObserver((function(){var o=t.find("button"),i=o.length;if(0!==i){var a=0;o.each((function(e){wp(e).hasClass("disabled")&&a++})),r.disconnect(),a===i?n.addClass("disabled"):n.removeClass("disabled"),e.observe(r)}}));return r},e}(),HF=new WeakMap;function UF(e){var t=OD.get(e);if(null==t)throw new Error("Can not get editor instance");return t}function VF(e,t,n){void 0===n&&(n=!1);var r=HF.get(t);if(r)return r;var o=t.tag;if("button"===o){var i=t.showDropPanel,a=t.showModal;r=i?new PF(e,t,n):a?new LF(e,t,n):new TF(e,t,n)}if("select"===o&&(r=new zF(e,t,n)),null==r)throw new Error("Invalid tag in menu "+JSON.stringify(t));return HF.set(t,r),r}function qF(e,t){var n=e.selection;return null!=n&&!Nf.isCollapsed(n)&&!gO.getSelectedElems(e).some((function(t){if(e.isVoid(t))return!0;var n=t.type;return!!["pre","code","table"].includes(n)||void 0}))&&!!Hf.isText(t)}var WF=function(){function e(){var e=this;this.$elem=wp('<div class="w-e-bar w-e-bar-hidden w-e-hover-bar"></div>'),this.menus={},this.hoverbarItems=[],this.prevSelectedNode=null,this.isShow=!1,this.changeHoverbarState=Ev((function(){var t=e.isShow,n=e.getSelectedNodeAndMenuKeys()||{},r=n.node,o=void 0===r?null:r,i=n.menuKeys,a=void 0===i?[]:i;null!=o&&e.changeItemsState(),o&&ff.isElement(o)&&t&&e.isSamePath(o,e.prevSelectedNode)||(e.hideAndClean(),null!=o&&(e.registerItems(a),e.setPosition(o),e.show()),e.prevSelectedNode=o)}),200),pB((function(){var t=e.getEditorInstance(),n=e.$elem;n.on("mousedown",(function(e){return e.preventDefault()}),{passive:!1}),gO.getTextarea(t).$textAreaContainer.append(n),t.on("change",e.changeHoverbarState);var r=e.hideAndClean.bind(e);t.on("scroll",r),t.on("fullScreen",r),t.on("unFullScreen",r)}))}return e.prototype.getMenus=function(){return this.menus},e.prototype.hideAndClean=function(){var e=this.$elem;e.removeClass("w-e-bar-show").addClass("w-e-bar-hidden"),this.hoverbarItems=[],e.empty(),this.isShow=!1},e.prototype.checkPositionBottom=function(){var e=this.$elem,t=!1,n=window.innerHeight;n&&n>=360&&n-e[0].getBoundingClientRect().bottom<360&&(t=!0),t?e.addClass("w-e-bar-bottom"):e.removeClass("w-e-bar-bottom")},e.prototype.show=function(){this.$elem.removeClass("w-e-bar-hidden").addClass("w-e-bar-show"),this.isShow=!0,this.checkPositionBottom()},e.prototype.changeItemsState=function(){var e=this;pB((function(){e.hoverbarItems.forEach((function(e){e.changeMenuState()}))}))},e.prototype.registerItems=function(e){var t=this,n=this.$elem;e.forEach((function(e){if("|"!==e)t.registerSingleItem(e);else{var r=OF();n.append(r)}}))},e.prototype.registerSingleItem=function(e){var t=this.getEditorInstance(),n=this.menus,r=n[e];if(null==r){var o=mO[e];if(null==o)throw new Error("Not found menu item factory by key '"+e+"'");if("function"!=typeof o)throw new Error("Menu item factory (key='"+e+"') is not a function");r=o(),n[e]=r}var i=VF(e,r);this.hoverbarItems.push(i),OD.set(i,t),this.$elem.append(i.$elem)},e.prototype.setPosition=function(e){var t=this.getEditorInstance(),n=this.$elem;if(n.attr("style",""),ff.isElement(e)){var r=PT(t,e,"bar");return n.css(r),void jT(t,n)}if(Hf.isText(e))return r=_T(t),n.css(r),void jT(t,n);throw new Error("hoverbar.setPosition error, current selected node is not elem nor text")},e.prototype.getSelectedNodeAndMenuKeys=function(){var e=this.getEditorInstance();if(null==e.selection)return null;var t=this.getHoverbarKeysConf(),n=null,r=[],o=function(o){var i=t[o],a=i.match,u=i.menuKeys,s=void 0===u?[]:u,c=a||function(e,t){return gO.checkNodeType(t,o)},l=Ax(yf.nodes(e,{match:function(t){return c(e,t)},universal:!0}),1),f=l[0];if(null!=f)return n=f[0],r=s,"break"};for(var i in t)if("break"===o(i))break;return null==n||0===r.length?null:{node:n,menuKeys:r}},e.prototype.getEditorInstance=function(){var e=xD.get(this);if(null==e)throw new Error("Can not get editor instance");return e},e.prototype.getHoverbarKeysConf=function(){var e=this.getEditorInstance().getConfig().hoverbarKeys,t=void 0===e?{}:e,n=t.text;return n&&null==n.match&&(n.match=qF),t},e.prototype.isSamePath=function(e,t){if(null==e||null==t)return!1;var n=gO.findPath(null,e),r=gO.findPath(null,t);return Of.equals(n,r)},e.prototype.destroy=function(){this.changeHoverbarState.cancel(),this.$elem.remove(),this.menus={},this.hoverbarItems=[],this.prevSelectedNode=null},e}();function GF(e,t,n,r){if(jD.set(e,t),ND.set(e,n),ff.isElement(e)){var o=e.children;if((void 0===o?[]:o).forEach((function(t,n){return GF(t,n,e,r)})),yf.isVoid(r,e)){var i=Ax(Sf.texts(e),1),a=Ax(i[0],1)[0];jD.set(a,0),ND.set(a,e)}}}function KF(e){var t=e.selector,n=void 0===t?"":t,r=e.config,o=void 0===r?{}:r,i=e.content,a=e.html,u=e.plugins,s=void 0===u?[]:u,c=(e=>{var t=e,{apply:n}=t;return t.history={undos:[],redos:[]},t.redo=()=>{var{history:e}=t,{redos:n}=e;if(n.length>0){var r=n[n.length-1];PA.withoutSaving(t,(()=>{yf.withoutNormalizing(t,(()=>{for(var e of r)t.apply(e)}))})),e.redos.pop(),e.undos.push(r)}},t.undo=()=>{var{history:e}=t,{undos:n}=e;if(n.length>0){var r=n[n.length-1];PA.withoutSaving(t,(()=>{yf.withoutNormalizing(t,(()=>{var e=r.map(Df.inverse).reverse();for(var n of e)t.apply(n)}))})),e.redos.push(r),e.undos.pop()}},t.apply=e=>{var{operations:r,history:o}=t,{undos:i}=o,a=i[i.length-1],u=a&&a[a.length-1],s=((e,t)=>!(!t||"set_selection"!==e.type||"set_selection"!==t.type))(e,u),c=PA.isSaving(t),l=PA.isMerging(t);if(null==c&&(c=(e=>"set_selection"!==e.type||null!=e.properties&&null!=e.newProperties)(e)),c){if(null==l&&(l=null!=a&&(0!==r.length||((e,t)=>"set_selection"===e.type||!(!t||"insert_text"!==e.type||"insert_text"!==t.type||e.offset!==t.offset+t.text.length||!Of.equals(e.path,t.path))||!(!t||"remove_text"!==e.type||"remove_text"!==t.type||e.offset+e.text.length!==t.offset||!Of.equals(e.path,t.path)))(e,u)||s)),a&&l)s&&a.pop(),a.push(e);else{var f=[e];i.push(f)}for(;i.length>100;)i.shift();(e=>"set_selection"!==e.type)(e)&&(o.redos=[])}n(e)},t})(function(e){var t=e,n=t.insertText,r=t.insertNode,o=t.insertFragment,i=t.dangerouslyInsertHtml;return t.insertText=function(e){if(t.getConfig().maxLength){var r=gO.getLeftLengthOfMaxLength(t);r<=0||(r<e.length?n(e.slice(0,r)):n(e))}else n(e)},t.insertNode=function(e){if(t.getConfig().maxLength){var n=gO.getLeftLengthOfMaxLength(t);n<=0||n<Sf.string(e).length||r(e)}else r(e)},t.insertFragment=function(e){if(t.getConfig().maxLength)if(1!==e.length)e.forEach((function(e){t.insertNode(e)}));else{var n=e[0];if(gO.getLeftLengthOfMaxLength(t)<Sf.string(n).length)return;o(e)}else o(e)},t.dangerouslyInsertHtml=function(e,n){if(void 0===e&&(e=""),void 0===n&&(n=!1),e)if(t.getConfig().maxLength){var r=gO.getLeftLengthOfMaxLength(t);if(!(r<=0)){var o=document.createElement("div");o.innerHTML=e;var a=Array.from(o.childNodes).reduce((function(e,t){var n=t.nodeType,r=t.nodeName;return t?n===YD.TEXT_NODE?e+(t.textContent||""):n===YD.ELEMENT_NODE?aT.has(r.toLowerCase())?e:e+(t.textContent||""):e:e}),"");r<a.length||i(e,n)}}else i(e,n)},t}(function(e){var t=e;return t.on=function(e,n){var r=kT(t);if(r.on(e,n),"destroyed"===e&&TT(t,n),"destroyed"!==e){var o=function(){return r.off(e,n)};r.on("destroyed",o),TT(t,o)}},t.once=function(e,n){kT(t).once(e,n)},t.off=function(e,n){kT(t).off(e,n)},t.emit=function(e){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var o=kT(t);o.emit.apply(o,Sx([e],Ax(n))),"destroyed"===e&&(function(e){return BT.get(e)||new Set}(t).forEach((function(e){return o.off("destroyed",e)})),function(e){BT.set(e,new Set)}(t))},t}(function(e){var t=e;return t.select=function(e){ad.select(t,e)},t.deselect=function(){var n=t.selection,r=gO.findDocumentOrShadowRoot(t).getSelection();r&&r.rangeCount>0&&r.removeAllRanges(),n&&ad.deselect(e)},t.move=function(t,n){void 0===n&&(n=!1),t&&(t<0||ad.move(e,{distance:t,unit:"character",reverse:n}))},t.moveReverse=function(e){t.move(e,!0)},t.restoreSelection=function(){var e=UD.get(t);null!=e&&(t.focus(),ad.select(t,e))},t.getSelectionPosition=function(){return _T(t)},t.getNodePosition=function(e){return PT(t,e)},t.isSelectedAll=function(){var e=t.selection;if(null==e)return!1;var n=Ax(Nf.edges(e),2),r=n[0],o=n[1],i=Ax(yf.edges(t,[]),2),a=i[0],u=i[1];return!(!Ff.equals(r,a)||!Ff.equals(o,u))},t.selectAll=function(){var e=yf.start(t,[]),n=yf.end(t,[]);ad.select(t,{anchor:e,focus:n})},t}(function(e){var t=e,n=t.onChange,r=t.insertText,o=t.apply,i=t.deleteBackward;return t.insertText=function(e){t.getConfig().readOnly||r(e)},t.apply=function(e){var n,r,i,a,u,s,c,l,f=[];switch(e.type){case"insert_text":case"remove_text":case"set_node":try{for(var d=Ex(yf.levels(t,{at:e.path})),p=d.next();!p.done;p=d.next()){var h=Ax(p.value,2),g=h[0],v=h[1],y=gO.findKey(t,g);f.push([v,y])}}catch(e){n={error:e}}finally{try{p&&!p.done&&(r=d.return)&&r.call(d)}finally{if(n)throw n.error}}break;case"insert_node":case"remove_node":case"merge_node":case"split_node":try{for(var m=Ex(yf.levels(t,{at:Of.parent(e.path)})),b=m.next();!b.done;b=m.next()){var w=Ax(b.value,2);g=w[0],v=w[1],y=gO.findKey(t,g),f.push([v,y])}}catch(e){i={error:e}}finally{try{b&&!b.done&&(a=m.return)&&a.call(m)}finally{if(i)throw i.error}}break;case"move_node":try{for(var E=Ex(yf.levels(t,{at:Of.common(Of.parent(e.path),Of.parent(e.newPath))})),A=E.next();!A.done;A=E.next()){var S=Ax(A.value,2);g=S[0],v=S[1],y=gO.findKey(t,g),f.push([v,y])}}catch(e){u={error:e}}finally{try{A&&!A.done&&(s=E.return)&&s.call(E)}finally{if(u)throw u.error}}}o(e);try{for(var C=Ex(f),x=C.next();!x.done;x=C.next()){var D=Ax(x.value,2);v=D[0],y=D[1],g=Ax(yf.node(t,v),1)[0],zD.set(g,y)}}catch(e){c={error:e}}finally{try{x&&!x.done&&(l=C.return)&&l.call(C)}finally{if(c)throw c.error}}},t.deleteBackward=function(n){if("line"!==n)return i(n);if(e.selection&&Nf.isCollapsed(e.selection)){var r=yf.above(e,{match:function(t){return yf.isBlock(e,t)},at:e.selection});if(r){var o=Ax(r,2)[1],a=yf.range(e,o,e.selection.anchor),u=function(e,t){var n=yf.range(e,Nf.end(t)),r=Array.from(yf.positions(e,{at:t})),o=0,i=r.length,a=Math.floor(i/2);if(yB(e,yf.range(e,r[o]),n))return yf.range(e,r[o],n);if(r.length<2)return yf.range(e,r[r.length-1],n);for(;a!==r.length&&a!==o;)yB(e,yf.range(e,r[a]),n)?i=a:o=a,a=Math.floor((o+i)/2);return yf.range(e,r[i],n)}(t,a);Nf.isCollapsed(u)||ad.delete(e,{at:u})}}},t.onChange=function(){var e=t.selection;null!=e&&UD.set(t,e),t.emit("change"),n()},t.handleTab=function(){t.insertText("    ")},t.getHtml=function(){var e=t.children;return(void 0===e?[]:e).map((function(e){return hB(e,t)})).join("")},t.getText=function(){var e=t.children;return(void 0===e?[]:e).map((function(e){return Sf.string(e)})).join("\n")},t.getSelectionText=function(){var n=t.selection;return null==n?"":yf.string(e,n)},t.getElemsByType=function(e,n){var r,o;void 0===n&&(n=!1);var i=[],a=yf.nodes(t,{at:[],universal:!0});try{for(var u=Ex(a),s=u.next();!s.done;s=u.next()){var c=Ax(s.value,1)[0];if(ff.isElement(c)&&(n?c.type.indexOf(e)>=0:c.type===e)){var l=gB(gO.findKey(t,c).id);i.push(wx(wx({},c),{id:l}))}}}catch(e){r={error:e}}finally{try{s&&!s.done&&(o=u.return)&&o.call(u)}finally{if(r)throw r.error}}return i},t.getElemsByTypePrefix=function(e){return t.getElemsByType(e,!0)},t.isEmpty=function(){var e=t.children,n=void 0===e?[]:e;if(n.length>1)return!1;var r=n[0];if(null==r)return!0;if(ff.isElement(r)&&"paragraph"===r.type){var o=r.children,i=void 0===o?[]:o;if(i.length>1)return!1;var a=i[0];if(null==a)return!0;if(Hf.isText(a)&&""===a.text)return!0}return!1},t.clear=function(){ad.delete(t,{at:{anchor:yf.start(t,[]),focus:yf.end(t,[])}}),0===t.children.length&&ad.insertNodes(t,[{type:"paragraph",children:[{text:""}]}])},t.getParentNode=function(e){return gO.getParentNode(t,e)},t.dangerouslyInsertHtml=function(e,n){if(void 0===e&&(e=""),void 0===n&&(n=!1),e){var r=document.createElement("div");r.innerHTML=e;var o=Array.from(r.childNodes);if(o=o.filter((function(e){var t=e.nodeType,n=e.nodeName;return t===YD.TEXT_NODE||t===YD.ELEMENT_NODE&&!aT.has(n.toLowerCase())})),0!==o.length){var i=t.selection;if(null!=i){var a=null;gO.isSelectedEmptyParagraph(t)&&!n&&(a=[i.focus.path[0]]),r.setAttribute("hidden","true"),document.body.appendChild(r);var u=0;o.forEach((function(e){var n=e.nodeType,r=e.nodeName,o=e.textContent,i=void 0===o?"":o;if(n!==YD.TEXT_NODE)if("BR"!==r){var a=e,s=!1;if(mB.includes(r.toLowerCase()))s=!0;else for(var c in EB)if(a.matches(c)){s=!0;break}if(s){var l=ZB(wp(a),t);return Array.isArray(l)?(l.forEach((function(e){return uT(t,e)})),u++):(uT(t,l),u++),void(gO.isSelectedVoidNode(t)&&t.move(1))}var f=window.getComputedStyle(a).display;gO.isSelectedEmptyParagraph(t)||f.indexOf("inline")<0&&t.insertBreak(),t.dangerouslyInsertHtml(a.innerHTML,!0)}else t.insertText("\n");else{if(!i||!i.trim())return;t.insertNode({text:i})}})),u&&a&&gO.isEmptyPath(t,a)&&ad.removeNodes(t,{at:a}),r.remove()}}}},t.setHtml=function(e){void 0===e&&(e="");var n=t.isDisabled(),r=t.isFocused(),o=JSON.stringify(t.selection);t.enable(),t.focus(),t.clear();var i=eT(t,e);if(ad.insertFragment(t,i),r||(t.deselect(),t.blur()),n&&(t.deselect(),t.disable()),t.isFocused())try{t.select(JSON.parse(o))}catch(e){t.select(yf.start(t,[]))}},t}(function(e){var t=e;return t.getAllMenuKeys=function(){var e=[];for(var t in mO)e.push(t);return e},t.getConfig=function(){var e=TD.get(t);if(null==e)throw new Error("Can not get editor config");return e},t.getMenuConfig=function(e){var n=t.getConfig().MENU_CONF;return(void 0===n?{}:n)[e]||{}},t.alert=function(e,n){void 0===n&&(n="info");var r=t.getConfig().customAlert;r&&r(e,n)},t}(function(){var e=sT(Pl());return e.id="wangEditor-"+vO++,e.isDestroyed=!1,e.isFullScreen=!1,e.focus=function(t){if(gO.toDOMNode(e,e).focus({preventScroll:!0}),HD.set(e,!0),t){var n=yf.end(e,[]);ad.select(e,n)}else{var r=UD.get(e);r?ad.select(e,r):ad.select(e,yf.start(e,[]))}},e.isFocused=function(){return!!HD.get(e)},e.blur=function(){gO.toDOMNode(e,e).blur(),ad.deselect(e),HD.set(e,!1)},e.updateView=function(){gO.getTextarea(e).changeViewState();var t=gO.getToolbar(e);t&&t.changeToolbarState();var n=gO.getHoverbar(e);n&&n.changeHoverbarState()},e.destroy=function(){if(!e.isDestroyed){var t=gO.getTextarea(e);t.destroy(),ED.delete(e),AD.delete(t);var n=gO.getToolbar(e);n&&(n.destroy(),CD.delete(e),SD.delete(n));var r=gO.getHoverbar(e);r&&(r.destroy(),DD.delete(e),xD.delete(r)),e.isDestroyed=!0,e.emit("destroyed")}},e.scrollToElem=function(t){if(!e.getConfig().scroll){var n="ç¼è¾å¨ç¦ç¨äº scroll ï¼ç¼è¾å¨åå®¹æ æ³æ»å¨ï¼è¯·èªè¡å®ç°è¯¥åè½";return n+="\nYou has disabled editor scroll, please do this yourself",void console.warn(n)}var r=wp("#"+t);if(0!==r.length){var o=r[0];if(!gO.hasDOMNode(e,o))return n="Element (found by id is '"+t+"') is not in editor DOM",n+="\n éè¿ id '"+t+"' æ¾å°ç element ä¸å¨ editor DOM ä¹å",void console.error(n,o);var i=gO.getTextarea(e),a=i.$textAreaContainer,u=i.$scroll,s=r.offset().top,c=a.offset().top;u[0].scrollBy({top:s-c,behavior:"smooth"})}},e.showProgressBar=function(t){t<1||gO.getTextarea(e).changeProgress(t)},e.hidePanelOrModal=function(){var t=kD.get(e);null!=t&&t.forEach((function(e){return e.hide()}))},e.enable=function(){e.getConfig().readOnly=!1,e.updateView()},e.disable=function(){e.getConfig().readOnly=!0,e.updateView()},e.isDisabled=function(){return e.getConfig().readOnly},e.toDOMNode=function(t){return gO.toDOMNode(e,t)},e.fullScreen=function(){if(!e.isFullScreen){var t=null,n=gO.getToolbar(e);n&&(t=n.$box);var r=gO.getTextarea(e).$box.parent();if(t&&t.parent()[0]!==r[0])throw new Error("Can not set full screen, cause toolbar DOM parent is not equal to textarea DOM parent\nä¸è½è®¾ç½®å¨å±ï¼å ä¸º toolbar DOM ç¶èç¹å textarea DOM ç¶èç¹ä¸ä¸è´");r.addClass("w-e-full-screen-container");var o=r.css("z-index");r.attr("data-z-index",o.toString()),e.isFullScreen=!0,e.emit("fullScreen")}},e.unFullScreen=function(){if(e.isFullScreen){var t=gO.getTextarea(e).$box.parent();setTimeout((function(){t.removeClass("w-e-full-screen-container"),e.isFullScreen=!1,e.emit("unFullScreen")}),200)}},e.getEditableContainer=function(){return gO.getTextarea(e).$textAreaContainer[0]},e}()))))));if(n&&function(e,t){return QB(e,"data-w-e-textarea",t)}(c,n))throw new Error("Repeated create editor by selector '"+n+"'");var l=function(e){void 0===e&&(e={});var t=Av(yO),n={},r=e.MENU_CONF,o=void 0===r?{}:r;return gh(t,(function(e,t){n[t]=wx(wx({},e),o[t]||{})})),delete e.MENU_CONF,wx({scroll:!0,readOnly:!1,autoFocus:!0,decorate:function(){return[]},maxLength:0,MENU_CONF:n,hoverbarKeys:{},customAlert:function(e,t){window.alert(t+":\n"+e)}},e)}(o);TD.set(c,l);var f=l.hoverbarKeys,d=void 0===f?{}:f;if(s.forEach((function(e){c=e(c)})),null!=a&&(c.children=eT(c,a)),i&&i.length&&(c.children=i),0===c.children.length&&(c.children=[{type:"paragraph",children:[{text:""}]}]),gO.normalizeContent(c),n){var p=new CF(n);ED.set(c,p),AD.set(p,c),p.changeViewState(),pB((function(){var e=p.$scroll;null!=e&&e.height()<300&&console.warn("ç¼è¾åºåé«åº¦ < 300px è¿å¯è½ä¼å¯¼è´ modal hoverbar å®ä½å¼å¸¸\nTextarea height < 300px . This may be cause modal and hoverbar position error",e)}));var h=void 0;Object.keys(d).length>0&&(h=new WF,xD.set(h,c),DD.set(c,h)),c.on("change",(function(){c.hidePanelOrModal()})),c.on("scroll",(function(){c.hidePanelOrModal()}))}else c.children.forEach((function(e,t){return GF(e,t,c,c)}));var g=l.onCreated,v=l.onDestroyed;return g&&c.on("created",(function(){return g(c)})),v&&c.on("destroyed",(function(){return v(c)})),pB((function(){return c.emit("created")})),c}var YF=EC("splice"),XF=Db.TypeError,JF=Math.max,ZF=Math.min;DA({target:"Array",proto:!0,forced:!YF},{splice:function(e,t){var n,r,o,i,a,u,s=Mb(this),c=BE(s),l=iA(e,c),f=arguments.length;if(0===f?n=r=0:1===f?(n=0,r=c-l):(n=f-2,r=ZF(JF(DE(t),0),c-l)),c+n-r>9007199254740991)throw XF("Maximum allowed length exceeded");for(o=$E(s,r),i=0;i<r;i++)(a=l+i)in s&&yS(o,i,s[a]);if(o.length=r,n<r){for(i=l;i<c-r;i++)u=i+n,(a=i+r)in s?s[u]=s[a]:delete s[u];for(i=c;i>c-r+n;i--)delete s[i-1]}else if(n>r)for(i=c-r;i>l;i--)u=i+n-1,(a=i+r-1)in s?s[u]=s[a]:delete s[u];for(i=0;i<n;i++)s[i+l]=arguments[i+2];return s.length=c-r+n,o}});var QF=function(){function e(e,t){var n=this;this.$toolbar=wp('<div class="w-e-bar w-e-bar-show w-e-toolbar"></div>'),this.menus={},this.toolbarItems=[],this.config={},this.changeToolbarState=Ev((function(){n.toolbarItems.forEach((function(e){e.changeMenuState()}))}),200),this.config=t;var r=wp(e);if(0===r.length)throw new Error("Cannot find toolbar DOM by selector '"+e+"'");this.$box=r;var o=this.$toolbar;o.on("mousedown",(function(e){return e.preventDefault()}),{passive:!1}),r.append(o),pB((function(){n.registerItems(),n.changeToolbarState(),n.getEditorInstance().on("change",n.changeToolbarState)}))}return e.prototype.getMenus=function(){return this.menus},e.prototype.getConfig=function(){return this.config},e.prototype.registerItems=function(){var e=this,t="",n=this.$toolbar,r=this.config,o=r.toolbarKeys,i=void 0===o?[]:o,a=r.insertKeys,u=void 0===a?{index:0,keys:[]}:a,s=r.excludeKeys,c=void 0===s?[]:s,l=Av(i);u.keys.length>0&&("string"==typeof u.keys&&(u.keys=[u.keys]),u.keys.forEach((function(e,t){l.splice(u.index+t,0,e)})));var f=l.filter((function(e){if("string"==typeof e){if(c.includes(e))return!1}else if(c.includes(e.key))return!1;return!0})),d=f.length;f.forEach((function(r,o){if("|"===r){if(0===o)return;if(o+1===d)return;if("|"===t)return;var i=OF();return n.append(i),void(t=r)}if("string"==typeof r)return e.registerSingleItem(r,e),void(t=r);e.registerGroup(r),t="group"}))},e.prototype.registerGroup=function(e){var t=this,n=this.$toolbar,r=function(e){return new $F(e)}(e),o=e.menuKeys,i=void 0===o?[]:o,a=this.config.excludeKeys,u=void 0===a?[]:a;i.forEach((function(e){u.includes(e)||t.registerSingleItem(e,r)})),n.append(r.$elem)},e.prototype.registerSingleItem=function(e,t){var n=this.getEditorInstance(),r=t instanceof $F,o=this.menus,i=o[e];if(null==i){var a=mO[e];if(null==a)throw new Error("Not found menu item factory by key '"+e+"'");if("function"!=typeof a)throw new Error("Menu item factory (key='"+e+"') is not a function");i=a(),o[e]=i}else console.warn("Duplicated toolbar menu key '"+e+"'\néå¤æ³¨åäºèåæ  menu '"+e+"'");var u=VF(e,i,r);this.toolbarItems.push(u),OD.set(u,n),r?t.appendBarItem(u):t.$toolbar.append(u.$elem)},e.prototype.getEditorInstance=function(){var e=SD.get(this);if(null==e)throw new Error("Can not get editor instance");return e},e.prototype.destroy=function(){this.$toolbar.remove(),this.menus={},this.toolbarItems=[]},e}(),e_=iE.EXISTS,t_=Nw.f,n_=Function.prototype,r_=Nb(n_.toString),o_=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,i_=Nb(o_.exec);function a_(e){var t=e.server,n=void 0===t?"":t,r=e.fieldName,o=void 0===r?"":r,i=e.maxFileSize,a=void 0===i?10485760:i,u=e.maxNumberOfFiles,s=void 0===u?100:u,c=e.meta,l=void 0===c?{}:c,f=e.metaWithUrl,d=void 0!==f&&f,p=e.headers,h=void 0===p?{}:p,g=e.withCredentials,v=void 0!==g&&g,y=e.timeout,m=void 0===y?1e4:y,b=e.onBeforeUpload,w=void 0===b?function(e){return e}:b,E=e.onSuccess,A=void 0===E?function(e,t){}:E,S=e.onError,C=void 0===S?function(e,t,n){console.error(e.name+" upload error",t,n)}:S,x=e.onProgress,D=void 0===x?function(e){}:x;if(!n)throw new Error("Cannot get upload server address\næ²¡æéç½®ä¸ä¼ å°å");if(!o)throw new Error("Cannot get fieldName\næ²¡æéç½® fieldName");var O=n;d&&(O=function(e,t){var n=Ax(e.split("#"),2),r=n[0],o=n[1],i=[];gh(t,(function(e,t){i.push(t+"="+e)}));var a=i.join("&");return r=r.indexOf("?")>0?r+"&"+a:r+"?"+a,o?r+"#"+o:r}(O,l));var k=new Xy({onBeforeUpload:w,restrictions:{maxFileSize:a,maxNumberOfFiles:s},meta:l}).use(wb,{endpoint:O,headers:h,formData:!0,fieldName:o,bundle:!0,withCredentials:v,timeout:m});return k.on("upload-success",(function(e,t){var n=t.body,r=void 0===n?{}:n;try{A(e,r)}catch(e){console.error("wangEditor upload file - onSuccess error",e)}k.removeFile(e.id)})),k.on("progress",(function(e){e<1||D(e)})),k.on("upload-error",(function(e,t,n){try{C(e,t,n)}catch(e){console.error("wangEditor upload file - onError error",e)}k.removeFile(e.id)})),k.on("restriction-failed",(function(e,t){try{C(e,t)}catch(e){console.error("wangEditor upload file - onError error",e)}k.removeFile(e.id)})),k}function u_(e){return u_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u_(e)}function s_(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c_(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?Object(arguments[t]):{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&r.push.apply(r,Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach((function(t){s_(e,t,n[t])}))}return e}function l_(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function f_(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d_(e,t,n){return t&&f_(e.prototype,t),n&&f_(e,n),e}function p_(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function h_(e,t){if(t&&("object"===u_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return p_(e)}function g_(e){return g_=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g_(e)}function v_(e,t){return v_=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},v_(e,t)}function y_(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v_(e,t)}lw&&!e_&&t_(n_,"name",{configurable:!0,get:function(){try{return i_(o_,r_(this))[1]}catch(e){return""}}});var m_={type:"logger",log:function(e){this.output("log",e)},warn:function(e){this.output("warn",e)},error:function(e){this.output("error",e)},output:function(e,t){console&&console[e]&&console[e].apply(console,t)}},b_=new(function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};l_(this,e),this.init(t,n)}return d_(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||m_,this.options=t,this.debug=t.debug}},{key:"setDebug",value:function(e){this.debug=e}},{key:"log",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"log","",!0)}},{key:"warn",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","",!0)}},{key:"error",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"error","")}},{key:"deprecate",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}},{key:"forward",value:function(e,t,n,r){return r&&!this.debug?null:("string"==typeof e[0]&&(e[0]="".concat(n).concat(this.prefix," ").concat(e[0])),this.logger[t](e))}},{key:"create",value:function(t){return new e(this.logger,c_({},{prefix:"".concat(this.prefix,":").concat(t,":")},this.options))}}]),e}()),w_=function(){function e(){l_(this,e),this.observers={}}return d_(e,[{key:"on",value:function(e,t){var n=this;return e.split(" ").forEach((function(e){n.observers[e]=n.observers[e]||[],n.observers[e].push(t)})),this}},{key:"off",value:function(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter((function(e){return e!==t})):delete this.observers[e])}},{key:"emit",value:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];this.observers[e]&&[].concat(this.observers[e]).forEach((function(e){e.apply(void 0,n)})),this.observers["*"]&&[].concat(this.observers["*"]).forEach((function(t){t.apply(t,[e].concat(n))}))}}]),e}();function E_(){var e,t,n=new Promise((function(n,r){e=n,t=r}));return n.resolve=e,n.reject=t,n}function A_(e){return null==e?"":""+e}function S_(e,t,n){function r(e){return e&&e.indexOf("###")>-1?e.replace(/###/g,"."):e}function o(){return!e||"string"==typeof e}for(var i="string"!=typeof t?[].concat(t):t.split(".");i.length>1;){if(o())return{};var a=r(i.shift());!e[a]&&n&&(e[a]=new n),e=Object.prototype.hasOwnProperty.call(e,a)?e[a]:{}}return o()?{}:{obj:e,k:r(i.shift())}}function C_(e,t,n){var r=S_(e,t,Object);r.obj[r.k]=n}function x_(e,t){var n=S_(e,t),r=n.obj,o=n.k;if(r)return r[o]}function D_(e,t,n){var r=x_(e,n);return void 0!==r?r:x_(t,n)}function O_(e,t,n){for(var r in t)"__proto__"!==r&&"constructor"!==r&&(r in e?"string"==typeof e[r]||e[r]instanceof String||"string"==typeof t[r]||t[r]instanceof String?n&&(e[r]=t[r]):O_(e[r],t[r],n):e[r]=t[r]);return e}function k_(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var B_={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function T_(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(function(e){return B_[e]})):e}var F_="undefined"!=typeof window&&window.navigator&&window.navigator.userAgent&&window.navigator.userAgent.indexOf("MSIE")>-1;function __(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";if(e){if(e[t])return e[t];for(var r=t.split(n),o=e,i=0;i<r.length;++i){if(!o)return;if("string"==typeof o[r[i]]&&i+1<r.length)return;if(void 0===o[r[i]]){for(var a=2,u=r.slice(i,i+a).join(n),s=o[u];void 0===s&&r.length>i+a;)a++,s=o[u=r.slice(i,i+a).join(n)];if(void 0===s)return;if("string"==typeof s)return s;if(u&&"string"==typeof s[u])return s[u];var c=r.slice(i+a).join(n);return c?__(s,c,n):void 0}o=o[r[i]]}return o}}var P_=function(){function e(t){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};return l_(this,e),n=h_(this,g_(e).call(this)),F_&&w_.call(p_(n)),n.data=t||{},n.options=r,void 0===n.options.keySeparator&&(n.options.keySeparator="."),void 0===n.options.ignoreJSONStructure&&(n.options.ignoreJSONStructure=!0),n}return y_(e,w_),d_(e,[{key:"addNamespaces",value:function(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}},{key:"removeNamespaces",value:function(e){var t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1)}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=void 0!==r.keySeparator?r.keySeparator:this.options.keySeparator,i=void 0!==r.ignoreJSONStructure?r.ignoreJSONStructure:this.options.ignoreJSONStructure,a=[e,t];n&&"string"!=typeof n&&(a=a.concat(n)),n&&"string"==typeof n&&(a=a.concat(o?n.split(o):n)),e.indexOf(".")>-1&&(a=e.split("."));var u=x_(this.data,a);return u||!i||"string"!=typeof n?u:__(this.data&&this.data[e]&&this.data[e][t],n,o)}},{key:"addResource",value:function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1},i=this.options.keySeparator;void 0===i&&(i=".");var a=[e,t];n&&(a=a.concat(i?n.split(i):n)),e.indexOf(".")>-1&&(r=t,t=(a=e.split("."))[1]),this.addNamespaces(t),C_(this.data,a,r),o.silent||this.emit("added",e,t,n,r)}},{key:"addResources",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(var o in n)"string"!=typeof n[o]&&"[object Array]"!==Object.prototype.toString.apply(n[o])||this.addResource(e,t,o,n[o],{silent:!0});r.silent||this.emit("added",e,t,n)}},{key:"addResourceBundle",value:function(e,t,n,r,o){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},a=[e,t];e.indexOf(".")>-1&&(r=n,n=t,t=(a=e.split("."))[1]),this.addNamespaces(t);var u=x_(this.data,a)||{};r?O_(u,n,o):u=c_({},u,n),C_(this.data,a,u),i.silent||this.emit("added",e,t,n)}},{key:"removeResourceBundle",value:function(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t)}},{key:"hasResourceBundle",value:function(e,t){return void 0!==this.getResource(e,t)}},{key:"getResourceBundle",value:function(e,t){return t||(t=this.options.defaultNS),"v1"===this.options.compatibilityAPI?c_({},{},this.getResource(e,t)):this.getResource(e,t)}},{key:"getDataByLanguage",value:function(e){return this.data[e]}},{key:"toJSON",value:function(){return this.data}}]),e}(),j_={processors:{},addPostProcessor:function(e){this.processors[e.name]=e},handle:function(e,t,n,r,o){var i=this;return e.forEach((function(e){i.processors[e]&&(t=i.processors[e].process(t,n,r,o))})),t}},N_={},R_=function(){function e(t){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return l_(this,e),n=h_(this,g_(e).call(this)),F_&&w_.call(p_(n)),function(e,t,n){["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"].forEach((function(e){t[e]&&(n[e]=t[e])}))}(0,t,p_(n)),n.options=r,void 0===n.options.keySeparator&&(n.options.keySeparator="."),n.logger=b_.create("translator"),n}return y_(e,w_),d_(e,[{key:"changeLanguage",value:function(e){e&&(this.language=e)}},{key:"exists",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};if(null==e)return!1;var n=this.resolve(e,t);return n&&void 0!==n.res}},{key:"extractFromKey",value:function(e,t){var n=void 0!==t.nsSeparator?t.nsSeparator:this.options.nsSeparator;void 0===n&&(n=":");var r=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,o=t.ns||this.options.defaultNS;if(n&&e.indexOf(n)>-1){var i=e.match(this.interpolator.nestingRegexp);if(i&&i.length>0)return{key:e,namespaces:o};var a=e.split(n);(n!==r||n===r&&this.options.ns.indexOf(a[0])>-1)&&(o=a.shift()),e=a.join(r)}return"string"==typeof o&&(o=[o]),{key:e,namespaces:o}}},{key:"translate",value:function(t,n,r){var o=this;if("object"!==u_(n)&&this.options.overloadTranslationOptionHandler&&(n=this.options.overloadTranslationOptionHandler(arguments)),n||(n={}),null==t)return"";Array.isArray(t)||(t=[String(t)]);var i=void 0!==n.keySeparator?n.keySeparator:this.options.keySeparator,a=this.extractFromKey(t[t.length-1],n),u=a.key,s=a.namespaces,c=s[s.length-1],l=n.lng||this.language,f=n.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(l&&"cimode"===l.toLowerCase()){if(f){var d=n.nsSeparator||this.options.nsSeparator;return c+d+u}return u}var p=this.resolve(t,n),h=p&&p.res,g=p&&p.usedKey||u,v=p&&p.exactUsedKey||u,y=Object.prototype.toString.apply(h),m=void 0!==n.joinArrays?n.joinArrays:this.options.joinArrays,b=!this.i18nFormat||this.i18nFormat.handleAsObject;if(b&&h&&"string"!=typeof h&&"boolean"!=typeof h&&"number"!=typeof h&&["[object Number]","[object Function]","[object RegExp]"].indexOf(y)<0&&("string"!=typeof m||"[object Array]"!==y)){if(!n.returnObjects&&!this.options.returnObjects)return this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!"),this.options.returnedObjectHandler?this.options.returnedObjectHandler(g,h,c_({},n,{ns:s})):"key '".concat(u," (").concat(this.language,")' returned an object instead of string.");if(i){var w="[object Array]"===y,E=w?[]:{},A=w?v:g;for(var S in h)if(Object.prototype.hasOwnProperty.call(h,S)){var C="".concat(A).concat(i).concat(S);E[S]=this.translate(C,c_({},n,{joinArrays:!1,ns:s})),E[S]===C&&(E[S]=h[S])}h=E}}else if(b&&"string"==typeof m&&"[object Array]"===y)(h=h.join(m))&&(h=this.extendTranslation(h,t,n,r));else{var x=!1,D=!1,O=void 0!==n.count&&"string"!=typeof n.count,k=e.hasDefaultValue(n),B=O?this.pluralResolver.getSuffix(l,n.count):"",T=n["defaultValue".concat(B)]||n.defaultValue;!this.isValidLookup(h)&&k&&(x=!0,h=T),this.isValidLookup(h)||(D=!0,h=u);var F=(n.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey)&&D?void 0:h,_=k&&T!==h&&this.options.updateMissing;if(D||x||_){if(this.logger.log(_?"updateKey":"missingKey",l,c,u,_?T:h),i){var P=this.resolve(u,c_({},n,{keySeparator:!1}));P&&P.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}var j=[],N=this.languageUtils.getFallbackCodes(this.options.fallbackLng,n.lng||this.language);if("fallback"===this.options.saveMissingTo&&N&&N[0])for(var R=0;R<N.length;R++)j.push(N[R]);else"all"===this.options.saveMissingTo?j=this.languageUtils.toResolveHierarchy(n.lng||this.language):j.push(n.lng||this.language);var I=function(e,t,r){o.options.missingKeyHandler?o.options.missingKeyHandler(e,c,t,_?r:F,_,n):o.backendConnector&&o.backendConnector.saveMissing&&o.backendConnector.saveMissing(e,c,t,_?r:F,_,n),o.emit("missingKey",e,c,t,h)};this.options.saveMissing&&(this.options.saveMissingPlurals&&O?j.forEach((function(e){o.pluralResolver.getSuffixes(e).forEach((function(t){I([e],u+t,n["defaultValue".concat(t)]||T)}))})):I(j,u,T))}h=this.extendTranslation(h,t,n,p,r),D&&h===u&&this.options.appendNamespaceToMissingKey&&(h="".concat(c,":").concat(u)),(D||x)&&this.options.parseMissingKeyHandler&&(h=this.options.parseMissingKeyHandler(h))}return h}},{key:"extendTranslation",value:function(e,t,n,r,o){var i=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,n,r.usedLng,r.usedNS,r.usedKey,{resolved:r});else if(!n.skipInterpolation){n.interpolation&&this.interpolator.init(c_({},n,{interpolation:c_({},this.options.interpolation,n.interpolation)}));var a,u=n.interpolation&&n.interpolation.skipOnVariables||this.options.interpolation.skipOnVariables;if(u){var s=e.match(this.interpolator.nestingRegexp);a=s&&s.length}var c=n.replace&&"string"!=typeof n.replace?n.replace:n;if(this.options.interpolation.defaultVariables&&(c=c_({},this.options.interpolation.defaultVariables,c)),e=this.interpolator.interpolate(e,c,n.lng||this.language,n),u){var l=e.match(this.interpolator.nestingRegexp);a<(l&&l.length)&&(n.nest=!1)}!1!==n.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,r=new Array(e),a=0;a<e;a++)r[a]=arguments[a];return o&&o[0]===r[0]&&!n.context?(i.logger.warn("It seems you are nesting recursively key: ".concat(r[0]," in key: ").concat(t[0])),null):i.translate.apply(i,r.concat([t]))}),n)),n.interpolation&&this.interpolator.reset()}var f=n.postProcess||this.options.postProcess,d="string"==typeof f?[f]:f;return null!=e&&d&&d.length&&!1!==n.applyPostProcessor&&(e=j_.handle(d,e,t,this.options&&this.options.postProcessPassResolved?c_({i18nResolved:r},n):n,this)),e}},{key:"resolve",value:function(e){var t,n,r,o,i,a=this,u=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof e&&(e=[e]),e.forEach((function(e){if(!a.isValidLookup(t)){var s=a.extractFromKey(e,u),c=s.key;n=c;var l=s.namespaces;a.options.fallbackNS&&(l=l.concat(a.options.fallbackNS));var f=void 0!==u.count&&"string"!=typeof u.count,d=void 0!==u.context&&("string"==typeof u.context||"number"==typeof u.context)&&""!==u.context,p=u.lngs?u.lngs:a.languageUtils.toResolveHierarchy(u.lng||a.language,u.fallbackLng);l.forEach((function(e){a.isValidLookup(t)||(i=e,!N_["".concat(p[0],"-").concat(e)]&&a.utils&&a.utils.hasLoadedNamespace&&!a.utils.hasLoadedNamespace(i)&&(N_["".concat(p[0],"-").concat(e)]=!0,a.logger.warn('key "'.concat(n,'" for languages "').concat(p.join(", "),'" won\'t get resolved as namespace "').concat(i,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),p.forEach((function(n){if(!a.isValidLookup(t)){o=n;var i,s,l=c,p=[l];for(a.i18nFormat&&a.i18nFormat.addLookupKeys?a.i18nFormat.addLookupKeys(p,c,n,e,u):(f&&(i=a.pluralResolver.getSuffix(n,u.count)),f&&d&&p.push(l+i),d&&p.push(l+="".concat(a.options.contextSeparator).concat(u.context)),f&&p.push(l+=i));s=p.pop();)a.isValidLookup(t)||(r=s,t=a.getResource(n,e,s,u))}})))}))}})),{res:t,usedKey:n,exactUsedKey:r,usedLng:o,usedNS:i}}},{key:"isValidLookup",value:function(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,n,r):this.resourceStore.getResource(e,t,n,r)}}],[{key:"hasDefaultValue",value:function(e){for(var t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&"defaultValue"===t.substring(0,12)&&void 0!==e[t])return!0;return!1}}]),e}();function I_(e){return e.charAt(0).toUpperCase()+e.slice(1)}var L_=function(){function e(t){l_(this,e),this.options=t,this.whitelist=this.options.supportedLngs||!1,this.supportedLngs=this.options.supportedLngs||!1,this.logger=b_.create("languageUtils")}return d_(e,[{key:"getScriptPartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return null;var t=e.split("-");return 2===t.length?null:(t.pop(),"x"===t[t.length-1].toLowerCase()?null:this.formatLanguageCode(t.join("-")))}},{key:"getLanguagePartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return e;var t=e.split("-");return this.formatLanguageCode(t[0])}},{key:"formatLanguageCode",value:function(e){if("string"==typeof e&&e.indexOf("-")>-1){var t=["hans","hant","latn","cyrl","cans","mong","arab"],n=e.split("-");return this.options.lowerCaseLng?n=n.map((function(e){return e.toLowerCase()})):2===n.length?(n[0]=n[0].toLowerCase(),n[1]=n[1].toUpperCase(),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=I_(n[1].toLowerCase()))):3===n.length&&(n[0]=n[0].toLowerCase(),2===n[1].length&&(n[1]=n[1].toUpperCase()),"sgn"!==n[0]&&2===n[2].length&&(n[2]=n[2].toUpperCase()),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=I_(n[1].toLowerCase())),t.indexOf(n[2].toLowerCase())>-1&&(n[2]=I_(n[2].toLowerCase()))),n.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}},{key:"isWhitelisted",value:function(e){return this.logger.deprecate("languageUtils.isWhitelisted",'function "isWhitelisted" will be renamed to "isSupportedCode" in the next major - please make sure to rename it\'s usage asap.'),this.isSupportedCode(e)}},{key:"isSupportedCode",value:function(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}},{key:"getBestMatchFromCodes",value:function(e){var t,n=this;return e?(e.forEach((function(e){if(!t){var r=n.formatLanguageCode(e);n.options.supportedLngs&&!n.isSupportedCode(r)||(t=r)}})),!t&&this.options.supportedLngs&&e.forEach((function(e){if(!t){var r=n.getLanguagePartFromCode(e);if(n.isSupportedCode(r))return t=r;t=n.options.supportedLngs.find((function(e){if(0===e.indexOf(r))return e}))}})),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t):null}},{key:"getFallbackCodes",value:function(e,t){if(!e)return[];if("function"==typeof e&&(e=e(t)),"string"==typeof e&&(e=[e]),"[object Array]"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];var n=e[t];return n||(n=e[this.getScriptPartFromCode(t)]),n||(n=e[this.formatLanguageCode(t)]),n||(n=e[this.getLanguagePartFromCode(t)]),n||(n=e.default),n||[]}},{key:"toResolveHierarchy",value:function(e,t){var n=this,r=this.getFallbackCodes(t||this.options.fallbackLng||[],e),o=[],i=function(e){e&&(n.isSupportedCode(e)?o.push(e):n.logger.warn("rejecting language code not found in supportedLngs: ".concat(e)))};return"string"==typeof e&&e.indexOf("-")>-1?("languageOnly"!==this.options.load&&i(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&i(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&i(this.getLanguagePartFromCode(e))):"string"==typeof e&&i(this.formatLanguageCode(e)),r.forEach((function(e){o.indexOf(e)<0&&i(n.formatLanguageCode(e))})),o}}]),e}(),M_=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],z_={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}},$_=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};l_(this,e),this.languageUtils=t,this.options=n,this.logger=b_.create("pluralResolver"),this.rules=function(){var e={};return M_.forEach((function(t){t.lngs.forEach((function(n){e[n]={numbers:t.nr,plurals:z_[t.fc]}}))})),e}()}return d_(e,[{key:"addRule",value:function(e,t){this.rules[e]=t}},{key:"getRule",value:function(e){return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}},{key:"needsPlural",value:function(e){var t=this.getRule(e);return t&&t.numbers.length>1}},{key:"getPluralFormsOfKey",value:function(e,t){return this.getSuffixes(e).map((function(e){return t+e}))}},{key:"getSuffixes",value:function(e){var t=this,n=this.getRule(e);return n?n.numbers.map((function(n){return t.getSuffix(e,n)})):[]}},{key:"getSuffix",value:function(e,t){var n=this,r=this.getRule(e);if(r){var o=r.noAbs?r.plurals(t):r.plurals(Math.abs(t)),i=r.numbers[o];this.options.simplifyPluralSuffix&&2===r.numbers.length&&1===r.numbers[0]&&(2===i?i="plural":1===i&&(i=""));var a=function(){return n.options.prepend&&i.toString()?n.options.prepend+i.toString():i.toString()};return"v1"===this.options.compatibilityJSON?1===i?"":"number"==typeof i?"_plural_".concat(i.toString()):a():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===r.numbers.length&&1===r.numbers[0]?a():this.options.prepend&&o.toString()?this.options.prepend+o.toString():o.toString()}return this.logger.warn("no plural rule found for: ".concat(e)),""}}]),e}(),H_=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};l_(this,e),this.logger=b_.create("interpolator"),this.options=t,this.format=t.interpolation&&t.interpolation.format||function(e){return e},this.init(t)}return d_(e,[{key:"init",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});var t=e.interpolation;this.escape=void 0!==t.escape?t.escape:T_,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?k_(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?k_(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?k_(t.nestingPrefix):t.nestingPrefixEscaped||k_("$t("),this.nestingSuffix=t.nestingSuffix?k_(t.nestingSuffix):t.nestingSuffixEscaped||k_(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp()}},{key:"reset",value:function(){this.options&&this.init(this.options)}},{key:"resetRegExp",value:function(){var e="".concat(this.prefix,"(.+?)").concat(this.suffix);this.regexp=new RegExp(e,"g");var t="".concat(this.prefix).concat(this.unescapePrefix,"(.+?)").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=new RegExp(t,"g");var n="".concat(this.nestingPrefix,"(.+?)").concat(this.nestingSuffix);this.nestingRegexp=new RegExp(n,"g")}},{key:"interpolate",value:function(e,t,n,r){var o,i,a,u=this,s=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function c(e){return e.replace(/\$/g,"$$$$")}var l=function(e){if(e.indexOf(u.formatSeparator)<0){var o=D_(t,s,e);return u.alwaysFormat?u.format(o,void 0,n,c_({},r,t,{interpolationkey:e})):o}var i=e.split(u.formatSeparator),a=i.shift().trim(),c=i.join(u.formatSeparator).trim();return u.format(D_(t,s,a),c,n,c_({},r,t,{interpolationkey:a}))};this.resetRegExp();var f=r&&r.missingInterpolationHandler||this.options.missingInterpolationHandler,d=r&&r.interpolation&&r.interpolation.skipOnVariables||this.options.interpolation.skipOnVariables,p=[{regex:this.regexpUnescape,safeValue:function(e){return c(e)}},{regex:this.regexp,safeValue:function(e){return u.escapeValue?c(u.escape(e)):c(e)}}];return p.forEach((function(t){for(a=0;o=t.regex.exec(e);){if(void 0===(i=l(o[1].trim())))if("function"==typeof f){var n=f(e,o,r);i="string"==typeof n?n:""}else{if(d){i=o[0];continue}u.logger.warn("missed to pass in variable ".concat(o[1]," for interpolating ").concat(e)),i=""}else"string"==typeof i||u.useRawValueToEscape||(i=A_(i));var s=t.safeValue(i);if(e=e.replace(o[0],s),d?(t.regex.lastIndex+=s.length,t.regex.lastIndex-=o[0].length):t.regex.lastIndex=0,++a>=u.maxReplaces)break}})),e}},{key:"nest",value:function(e,t){var n,r,o=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=c_({},i);function u(e,t){var n=this.nestingOptionsSeparator;if(e.indexOf(n)<0)return e;var r=e.split(new RegExp("".concat(n,"[ ]*{"))),o="{".concat(r[1]);e=r[0],o=(o=this.interpolate(o,a)).replace(/'/g,'"');try{a=JSON.parse(o),t&&(a=c_({},t,a))}catch(t){return this.logger.warn("failed parsing options string in nesting for key ".concat(e),t),"".concat(e).concat(n).concat(o)}return delete a.defaultValue,e}for(a.applyPostProcessor=!1,delete a.defaultValue;n=this.nestingRegexp.exec(e);){var s=[],c=!1;if(-1!==n[0].indexOf(this.formatSeparator)&&!/{.*}/.test(n[1])){var l=n[1].split(this.formatSeparator).map((function(e){return e.trim()}));n[1]=l.shift(),s=l,c=!0}if((r=t(u.call(this,n[1].trim(),a),a))&&n[0]===e&&"string"!=typeof r)return r;"string"!=typeof r&&(r=A_(r)),r||(this.logger.warn("missed to resolve ".concat(n[1]," for nesting ").concat(e)),r=""),c&&(r=s.reduce((function(e,t){return o.format(e,t,i.lng,c_({},i,{interpolationkey:n[1].trim()}))}),r.trim())),e=e.replace(n[0],r),this.regexp.lastIndex=0}return e}}]),e}(),U_=function(){function e(t,n,r){var o,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return l_(this,e),o=h_(this,g_(e).call(this)),F_&&w_.call(p_(o)),o.backend=t,o.store=n,o.services=r,o.languageUtils=r.languageUtils,o.options=i,o.logger=b_.create("backendConnector"),o.state={},o.queue=[],o.backend&&o.backend.init&&o.backend.init(r,i.backend,i),o}return y_(e,w_),d_(e,[{key:"queueLoad",value:function(e,t,n,r){var o=this,i=[],a=[],u=[],s=[];return e.forEach((function(e){var r=!0;t.forEach((function(t){var u="".concat(e,"|").concat(t);!n.reload&&o.store.hasResourceBundle(e,t)?o.state[u]=2:o.state[u]<0||(1===o.state[u]?a.indexOf(u)<0&&a.push(u):(o.state[u]=1,r=!1,a.indexOf(u)<0&&a.push(u),i.indexOf(u)<0&&i.push(u),s.indexOf(t)<0&&s.push(t)))})),r||u.push(e)})),(i.length||a.length)&&this.queue.push({pending:a,loaded:{},errors:[],callback:r}),{toLoad:i,pending:a,toLoadLanguages:u,toLoadNamespaces:s}}},{key:"loaded",value:function(e,t,n){var r=e.split("|"),o=r[0],i=r[1];t&&this.emit("failedLoading",o,i,t),n&&this.store.addResourceBundle(o,i,n),this.state[e]=t?-1:2;var a={};this.queue.forEach((function(n){!function(e,t,n){var r=S_(e,t,Object),o=r.obj,i=r.k;o[i]=o[i]||[],o[i].push(n)}(n.loaded,[o],i),function(e,t){for(var n=e.indexOf(t);-1!==n;)e.splice(n,1),n=e.indexOf(t)}(n.pending,e),t&&n.errors.push(t),0!==n.pending.length||n.done||(Object.keys(n.loaded).forEach((function(e){a[e]||(a[e]=[]),n.loaded[e].length&&n.loaded[e].forEach((function(t){a[e].indexOf(t)<0&&a[e].push(t)}))})),n.done=!0,n.errors.length?n.callback(n.errors):n.callback())})),this.emit("loaded",a),this.queue=this.queue.filter((function(e){return!e.done}))}},{key:"read",value:function(e,t,n){var r=this,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:350,a=arguments.length>5?arguments[5]:void 0;return e.length?this.backend[n](e,t,(function(u,s){u&&s&&o<5?setTimeout((function(){r.read.call(r,e,t,n,o+1,2*i,a)}),i):a(u,s)})):a(null,{})}},{key:"prepareLoading",value:function(e,t){var n=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),o&&o();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof t&&(t=[t]);var i=this.queueLoad(e,t,r,o);if(!i.toLoad.length)return i.pending.length||o(),null;i.toLoad.forEach((function(e){n.loadOne(e)}))}},{key:"load",value:function(e,t,n){this.prepareLoading(e,t,{},n)}},{key:"reload",value:function(e,t,n){this.prepareLoading(e,t,{reload:!0},n)}},{key:"loadOne",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=e.split("|"),o=r[0],i=r[1];this.read(o,i,"read",void 0,void 0,(function(r,a){r&&t.logger.warn("".concat(n,"loading namespace ").concat(i," for language ").concat(o," failed"),r),!r&&a&&t.logger.log("".concat(n,"loaded namespace ").concat(i," for language ").concat(o),a),t.loaded(e,r,a)}))}},{key:"saveMissing",value:function(e,t,n,r,o){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t)?this.logger.warn('did not save key "'.concat(n,'" as the namespace "').concat(t,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"):null!=n&&""!==n&&(this.backend&&this.backend.create&&this.backend.create(e,t,n,r,null,c_({},i,{isUpdate:o})),e&&e[0]&&this.store.addResource(e[0],t,n,r))}}]),e}();function V_(e){return"string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.whitelist&&(e.whitelist&&e.whitelist.indexOf("cimode")<0&&(e.whitelist=e.whitelist.concat(["cimode"])),e.supportedLngs=e.whitelist),e.nonExplicitWhitelist&&(e.nonExplicitSupportedLngs=e.nonExplicitWhitelist),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function q_(){}var W_=function(){function e(){var t,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;if(l_(this,e),t=h_(this,g_(e).call(this)),F_&&w_.call(p_(t)),t.options=V_(n),t.services={},t.logger=b_,t.modules={external:[]},r&&!t.isInitialized&&!n.isClone){if(!t.options.initImmediate)return t.init(n,r),h_(t,p_(t));setTimeout((function(){t.init(n,r)}),0)}return t}return y_(e,w_),d_(e,[{key:"init",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;function r(e){return e?"function"==typeof e?new e:e:null}if("function"==typeof t&&(n=t,t={}),t.whitelist&&!t.supportedLngs&&this.logger.deprecate("whitelist",'option "whitelist" will be renamed to "supportedLngs" in the next major - please make sure to rename this option asap.'),t.nonExplicitWhitelist&&!t.nonExplicitSupportedLngs&&this.logger.deprecate("whitelist",'options "nonExplicitWhitelist" will be renamed to "nonExplicitSupportedLngs" in the next major - please make sure to rename this option asap.'),this.options=c_({},{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,whitelist:!1,nonExplicitWhitelist:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!0,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){var t={};if("object"===u_(e[1])&&(t=e[1]),"string"==typeof e[1]&&(t.defaultValue=e[1]),"string"==typeof e[2]&&(t.tDescription=e[2]),"object"===u_(e[2])||"object"===u_(e[3])){var n=e[3]||e[2];Object.keys(n).forEach((function(e){t[e]=n[e]}))}return t},interpolation:{escapeValue:!0,format:function(e,t,n,r){return e},prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!1}},this.options,V_(t)),this.format=this.options.interpolation.format,n||(n=q_),!this.options.isClone){this.modules.logger?b_.init(r(this.modules.logger),this.options):b_.init(null,this.options);var o=new L_(this.options);this.store=new P_(this.options.resources,this.options);var i=this.services;i.logger=b_,i.resourceStore=this.store,i.languageUtils=o,i.pluralResolver=new $_(o,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),i.interpolator=new H_(this.options),i.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},i.backendConnector=new U_(r(this.modules.backend),i.resourceStore,i,this.options),i.backendConnector.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];e.emit.apply(e,[t].concat(r))})),this.modules.languageDetector&&(i.languageDetector=r(this.modules.languageDetector),i.languageDetector.init(i,this.options.detection,this.options)),this.modules.i18nFormat&&(i.i18nFormat=r(this.modules.i18nFormat),i.i18nFormat.init&&i.i18nFormat.init(this)),this.translator=new R_(this.services,this.options),this.translator.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];e.emit.apply(e,[t].concat(r))})),this.modules.external.forEach((function(t){t.init&&t.init(e)}))}if(this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){var a=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);a.length>0&&"dev"!==a[0]&&(this.options.lng=a[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined"),["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach((function(t){e[t]=function(){var n;return(n=e.store)[t].apply(n,arguments)}})),["addResource","addResources","addResourceBundle","removeResourceBundle"].forEach((function(t){e[t]=function(){var n;return(n=e.store)[t].apply(n,arguments),e}}));var u=E_(),s=function(){var t=function(t,r){e.isInitialized&&!e.initializedStoreOnce&&e.logger.warn("init: i18next is already initialized. You should call init just once!"),e.isInitialized=!0,e.options.isClone||e.logger.log("initialized",e.options),e.emit("initialized",e.options),u.resolve(r),n(t,r)};if(e.languages&&"v1"!==e.options.compatibilityAPI&&!e.isInitialized)return t(null,e.t.bind(e));e.changeLanguage(e.options.lng,t)};return this.options.resources||!this.options.initImmediate?s():setTimeout(s,0),u}},{key:"loadResources",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:q_,r="string"==typeof e?e:this.language;if("function"==typeof e&&(n=e),!this.options.resources||this.options.partialBundledLanguages){if(r&&"cimode"===r.toLowerCase())return n();var o=[],i=function(e){e&&t.services.languageUtils.toResolveHierarchy(e).forEach((function(e){o.indexOf(e)<0&&o.push(e)}))};r?i(r):this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((function(e){return i(e)})),this.options.preload&&this.options.preload.forEach((function(e){return i(e)})),this.services.backendConnector.load(o,this.options.ns,n)}else n(null)}},{key:"reloadResources",value:function(e,t,n){var r=E_();return e||(e=this.languages),t||(t=this.options.ns),n||(n=q_),this.services.backendConnector.reload(e,t,(function(e){r.resolve(),n(e)})),r}},{key:"use",value:function(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&j_.addPostProcessor(e),"3rdParty"===e.type&&this.modules.external.push(e),this}},{key:"changeLanguage",value:function(e,t){var n=this;this.isLanguageChangingTo=e;var r=E_();this.emit("languageChanging",e);var o=function(o){e||o||!n.services.languageDetector||(o=[]);var i="string"==typeof o?o:n.services.languageUtils.getBestMatchFromCodes(o);i&&(n.language||(n.language=i,n.languages=n.services.languageUtils.toResolveHierarchy(i)),n.translator.language||n.translator.changeLanguage(i),n.services.languageDetector&&n.services.languageDetector.cacheUserLanguage(i)),n.loadResources(i,(function(e){!function(e,o){o?(n.language=o,n.languages=n.services.languageUtils.toResolveHierarchy(o),n.translator.changeLanguage(o),n.isLanguageChangingTo=void 0,n.emit("languageChanged",o),n.logger.log("languageChanged",o)):n.isLanguageChangingTo=void 0,r.resolve((function(){return n.t.apply(n,arguments)})),t&&t(e,(function(){return n.t.apply(n,arguments)}))}(e,i)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect(o):o(e):o(this.services.languageDetector.detect()),r}},{key:"getFixedT",value:function(e,t,n){var r=this,o=function e(t,o){var i;if("object"!==u_(o)){for(var a=arguments.length,u=new Array(a>2?a-2:0),s=2;s<a;s++)u[s-2]=arguments[s];i=r.options.overloadTranslationOptionHandler([t,o].concat(u))}else i=c_({},o);i.lng=i.lng||e.lng,i.lngs=i.lngs||e.lngs,i.ns=i.ns||e.ns;var c=r.options.keySeparator||".",l=n?"".concat(n).concat(c).concat(t):t;return r.t(l,i)};return"string"==typeof e?o.lng=e:o.lngs=e,o.ns=t,o.keyPrefix=n,o}},{key:"t",value:function(){var e;return this.translator&&(e=this.translator).translate.apply(e,arguments)}},{key:"exists",value:function(){var e;return this.translator&&(e=this.translator).exists.apply(e,arguments)}},{key:"setDefaultNamespace",value:function(e){this.options.defaultNS=e}},{key:"hasLoadedNamespace",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;var r=this.languages[0],o=!!this.options&&this.options.fallbackLng,i=this.languages[this.languages.length-1];if("cimode"===r.toLowerCase())return!0;var a=function(e,n){var r=t.services.backendConnector.state["".concat(e,"|").concat(n)];return-1===r||2===r};if(n.precheck){var u=n.precheck(this,a);if(void 0!==u)return u}return!!this.hasResourceBundle(r,e)||!this.services.backendConnector.backend||!(!a(r,e)||o&&!a(i,e))}},{key:"loadNamespaces",value:function(e,t){var n=this,r=E_();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((function(e){n.options.ns.indexOf(e)<0&&n.options.ns.push(e)})),this.loadResources((function(e){r.resolve(),t&&t(e)})),r):(t&&t(),Promise.resolve())}},{key:"loadLanguages",value:function(e,t){var n=E_();"string"==typeof e&&(e=[e]);var r=this.options.preload||[],o=e.filter((function(e){return r.indexOf(e)<0}));return o.length?(this.options.preload=r.concat(o),this.loadResources((function(e){n.resolve(),t&&t(e)})),n):(t&&t(),Promise.resolve())}},{key:"dir",value:function(e){return e||(e=this.languages&&this.languages.length>0?this.languages[0]:this.language),e?["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam"].indexOf(this.services.languageUtils.getLanguagePartFromCode(e))>=0?"rtl":"ltr":"rtl"}},{key:"createInstance",value:function(){return new e(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1?arguments[1]:void 0)}},{key:"cloneInstance",value:function(){var t=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:q_,o=c_({},this.options,n,{isClone:!0}),i=new e(o);return["store","services","language"].forEach((function(e){i[e]=t[e]})),i.services=c_({},this.services),i.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},i.translator=new R_(i.services,i.options),i.translator.on("*",(function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];i.emit.apply(i,[e].concat(n))})),i.init(o,r),i.translator.options=i.options,i.translator.backendConnector.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},i}},{key:"toJSON",value:function(){return{options:this.options,store:this.store,language:this.language,languages:this.languages}}}]),e}(),G_=new W_;function K_(e,t){G_.addResourceBundle(e,"translation",t,!0,!0)}function Y_(e){G_.changeLanguage(e)}function X_(e){return G_.getResourceBundle(e,"translation")}G_.init({lng:"zh-CN",resources:{}});var J_=G_.t.bind(G_);K_("en",{editor:{more:"More",justify:"Justify",indent:"Indent",image:"Image",video:"Video"}}),K_("zh-CN",{editor:{more:"æ´å¤",justify:"å¯¹é½",indent:"ç¼©è¿",image:"å¾ç",video:"è§é¢"}});var Z_=Yi?{}.toString:function(){return"[object "+Qi(this)+"]"};Yi||vi(Object.prototype,"toString",Z_,{unsafe:!0});var Q_=Array.isArray||function(e){return"Array"==Mr(e)},eP=function(){},tP=[],nP=Kr("Reflect","construct"),rP=/^\s*(?:class|function)\b/,oP=Rr(rP.exec),iP=!rP.exec(eP),aP=function(e){if(!Wr(e))return!1;try{return nP(eP,tP,e),!0}catch(e){return!1}},uP=!nP||Sr((function(){var e;return aP(aP.call)||!aP(Object)||!aP((function(){e=!0}))||e}))?function(e){if(!Wr(e))return!1;switch(Qi(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return iP||!!oP(rP,Zo(e))}:aP,sP=Bo("species"),cP=Ar.Array,lP=function(e,t){return new(function(e){var t;return Q_(e)&&(t=e.constructor,(uP(t)&&(t===cP||Q_(t.prototype))||Gr(t)&&null===(t=t[sP]))&&(t=void 0)),void 0===t?cP:t}(e))(0===t?0:t)},fP=Rr([].push),dP=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=mo(s),g=Hr(h),v=cu(c,l),y=xi(g),m=0,b=f||lP,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:fP(w,d)}else switch(e){case 4:return!1;case 7:fP(w,d)}return i?-1:r||o?o:w}},pP=[dP(0),dP(1),dP(2),dP(3),dP(4),dP(5),dP(6),dP(7)][0],hP=function(){var e=[].forEach;return!!e&&Sr((function(){e.call(null,(function(){throw 1}),1)}))}(),gP=hP?[].forEach:function(e){return pP(this,e,arguments.length>1?arguments[1]:void 0)},vP=function(e){if(e&&e.forEach!==gP)try{Go(e,"forEach",gP)}catch(t){e.forEach=gP}};for(var yP in ts)ts[yP]&&vP(Ar[yP]&&Ar[yP].prototype);vP(os),K_("en",{common:{ok:"OK",delete:"Delete",enter:"Enter"},blockQuote:{title:"Quote"},codeBlock:{title:"Code block"},color:{color:"Font color",bgColor:"Back color",default:"Default color",clear:"Clear back color"},divider:{title:"Divider"},emotion:{title:"Emotion"},fontSize:{title:"Font size",default:"Default"},fontFamily:{title:"Font family",default:"Default"},fullScreen:{title:"Full screen"},header:{title:"Header",text:"Text"},image:{netImage:"Net image",delete:"Delete image",edit:"Edit image",viewLink:"View link",src:"Image src",desc:"Description",link:"Image link"},indent:{decrease:"Decrease",increase:"Increase"},justify:{left:"Left",right:"Right",center:"Center",justify:"Justify"},lineHeight:{title:"Line height",default:"Default"},link:{insert:"Insert link",text:"Link text",url:"Link source",unLink:"Unlink",edit:"Edit link",view:"View link"},textStyle:{bold:"Bold",clear:"Clear styles",code:"Inline code",italic:"Italic",sub:"Sub",sup:"Sup",through:"Through",underline:"Underline"},undo:{undo:"undo",redo:"Redo"},todo:{todo:"Todo"}}),K_("zh-CN",{common:{ok:"ç¡®å®",delete:"å é¤",enter:"åè½¦"},blockQuote:{title:"å¼ç¨"},codeBlock:{title:"ä»£ç å"},color:{color:"æå­é¢è²",bgColor:"èæ¯è²",default:"é»è®¤é¢è²",clear:"æ¸é¤èæ¯è²"},divider:{title:"åå²çº¿"},emotion:{title:"è¡¨æ"},fontSize:{title:"å­å·",default:"é»è®¤å­å·"},fontFamily:{title:"å­ä½",default:"é»è®¤å­ä½"},fullScreen:{title:"å¨å±"},header:{title:"æ é¢",text:"æ­£æ"},image:{netImage:"ç½ç»å¾ç",delete:"å é¤å¾ç",edit:"ç¼è¾å¾ç",viewLink:"æ¥çé¾æ¥",src:"å¾çå°å",desc:"å¾çæè¿°",link:"å¾çé¾æ¥"},indent:{decrease:"åå°ç¼©è¿",increase:"å¢å ç¼©è¿"},justify:{left:"å·¦å¯¹é½",right:"å³å¯¹é½",center:"å±ä¸­å¯¹é½",justify:"ä¸¤ç«¯å¯¹é½"},lineHeight:{title:"è¡é«",default:"é»è®¤è¡é«"},link:{insert:"æå¥é¾æ¥",text:"é¾æ¥ææ¬",url:"é¾æ¥å°å",unLink:"åæ¶é¾æ¥",edit:"ä¿®æ¹é¾æ¥",view:"æ¥çé¾æ¥"},textStyle:{bold:"ç²ä½",clear:"æ¸é¤æ ¼å¼",code:"è¡åä»£ç ",italic:"æä½",sub:"ä¸æ ",sup:"ä¸æ ",through:"å é¤çº¿",underline:"ä¸åçº¿"},undo:{undo:"æ¤é",redo:"éå"},todo:{todo:"å¾å"}});var mP={type:"paragraph",renderElem:function(e,t,n){return cg("p",null,t)}},bP="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function wP(e){var t={exports:{}};return e(t,t.exports),t.exports}var EP,AP,SP=function(e){return e&&e.Math==Math&&e},CP=SP("object"==typeof globalThis&&globalThis)||SP("object"==typeof window&&window)||SP("object"==typeof self&&self)||SP("object"==typeof bP&&bP)||function(){return this}()||Function("return this")(),xP=function(e){try{return!!e()}catch(e){return!0}},DP=!xP((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),OP=Function.prototype.call,kP=OP.bind?OP.bind(OP):function(){return OP.apply(OP,arguments)},BP={}.propertyIsEnumerable,TP=Object.getOwnPropertyDescriptor,FP=TP&&!BP.call({1:2},1)?function(e){var t=TP(this,e);return!!t&&t.enumerable}:BP,_P={f:FP},PP=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},jP=Function.prototype,NP=jP.bind,RP=jP.call,IP=NP&&NP.bind(RP),LP=NP?function(e){return e&&IP(RP,e)}:function(e){return e&&function(){return RP.apply(e,arguments)}},MP=LP({}.toString),zP=LP("".slice),$P=function(e){return zP(MP(e),8,-1)},HP=CP.Object,UP=LP("".split),VP=xP((function(){return!HP("z").propertyIsEnumerable(0)}))?function(e){return"String"==$P(e)?UP(e,""):HP(e)}:HP,qP=CP.TypeError,WP=function(e){if(null==e)throw qP("Can't call method on "+e);return e},GP=function(e){return VP(WP(e))},KP=function(e){return"function"==typeof e},YP=function(e){return"object"==typeof e?null!==e:KP(e)},XP=function(e,t){return arguments.length<2?function(e){return KP(e)?e:void 0}(CP[e]):CP[e]&&CP[e][t]},JP=LP({}.isPrototypeOf),ZP=XP("navigator","userAgent")||"",QP=CP.process,ej=CP.Deno,tj=QP&&QP.versions||ej&&ej.version,nj=tj&&tj.v8;nj&&(AP=(EP=nj.split("."))[0]>0&&EP[0]<4?1:+(EP[0]+EP[1])),!AP&&ZP&&(!(EP=ZP.match(/Edge\/(\d+)/))||EP[1]>=74)&&(EP=ZP.match(/Chrome\/(\d+)/))&&(AP=+EP[1]);var rj=AP,oj=!!Object.getOwnPropertySymbols&&!xP((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&rj&&rj<41})),ij=oj&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,aj=CP.Object,uj=ij?function(e){return"symbol"==typeof e}:function(e){var t=XP("Symbol");return KP(t)&&JP(t.prototype,aj(e))},sj=CP.String,cj=function(e){try{return sj(e)}catch(e){return"Object"}},lj=CP.TypeError,fj=function(e){if(KP(e))return e;throw lj(cj(e)+" is not a function")},dj=function(e,t){var n=e[t];return null==n?void 0:fj(n)},pj=CP.TypeError,hj=Object.defineProperty,gj=function(e,t){try{hj(CP,e,{value:t,configurable:!0,writable:!0})}catch(n){CP[e]=t}return t},vj=CP["__core-js_shared__"]||gj("__core-js_shared__",{}),yj=wP((function(e){(e.exports=function(e,t){return vj[e]||(vj[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"global",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),mj=CP.Object,bj=function(e){return mj(WP(e))},wj=LP({}.hasOwnProperty),Ej=Object.hasOwn||function(e,t){return wj(bj(e),t)},Aj=0,Sj=Math.random(),Cj=LP(1..toString),xj=function(e){return"Symbol("+(void 0===e?"":e)+")_"+Cj(++Aj+Sj,36)},Dj=yj("wks"),Oj=CP.Symbol,kj=Oj&&Oj.for,Bj=ij?Oj:Oj&&Oj.withoutSetter||xj,Tj=function(e){if(!Ej(Dj,e)||!oj&&"string"!=typeof Dj[e]){var t="Symbol."+e;oj&&Ej(Oj,e)?Dj[e]=Oj[e]:Dj[e]=ij&&kj?kj(t):Bj(t)}return Dj[e]},Fj=CP.TypeError,_j=Tj("toPrimitive"),Pj=function(e){var t=function(e,t){if(!YP(e)||uj(e))return e;var n,r=dj(e,_j);if(r){if(void 0===t&&(t="default"),n=kP(r,e,t),!YP(n)||uj(n))return n;throw Fj("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&KP(n=e.toString)&&!YP(r=kP(n,e)))return r;if(KP(n=e.valueOf)&&!YP(r=kP(n,e)))return r;if("string"!==t&&KP(n=e.toString)&&!YP(r=kP(n,e)))return r;throw pj("Can't convert object to primitive value")}(e,t)}(e,"string");return uj(t)?t:t+""},jj=CP.document,Nj=YP(jj)&&YP(jj.createElement),Rj=function(e){return Nj?jj.createElement(e):{}},Ij=!DP&&!xP((function(){return 7!=Object.defineProperty(Rj("div"),"a",{get:function(){return 7}}).a})),Lj=Object.getOwnPropertyDescriptor,Mj={f:DP?Lj:function(e,t){if(e=GP(e),t=Pj(t),Ij)try{return Lj(e,t)}catch(e){}if(Ej(e,t))return PP(!kP(_P.f,e,t),e[t])}},zj=CP.String,$j=CP.TypeError,Hj=function(e){if(YP(e))return e;throw $j(zj(e)+" is not an object")},Uj=CP.TypeError,Vj=Object.defineProperty,qj={f:DP?Vj:function(e,t,n){if(Hj(e),t=Pj(t),Hj(n),Ij)try{return Vj(e,t,n)}catch(e){}if("get"in n||"set"in n)throw Uj("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},Wj=DP?function(e,t,n){return qj.f(e,t,PP(1,n))}:function(e,t,n){return e[t]=n,e},Gj=LP(Function.toString);KP(vj.inspectSource)||(vj.inspectSource=function(e){return Gj(e)});var Kj,Yj,Xj,Jj=vj.inspectSource,Zj=CP.WeakMap,Qj=KP(Zj)&&/native code/.test(Jj(Zj)),eN=yj("keys"),tN=function(e){return eN[e]||(eN[e]=xj(e))},nN={},rN=CP.TypeError,oN=CP.WeakMap;if(Qj||vj.state){var iN=vj.state||(vj.state=new oN),aN=LP(iN.get),uN=LP(iN.has),sN=LP(iN.set);Kj=function(e,t){if(uN(iN,e))throw new rN("Object already initialized");return t.facade=e,sN(iN,e,t),t},Yj=function(e){return aN(iN,e)||{}},Xj=function(e){return uN(iN,e)}}else{var cN=tN("state");nN[cN]=!0,Kj=function(e,t){if(Ej(e,cN))throw new rN("Object already initialized");return t.facade=e,Wj(e,cN,t),t},Yj=function(e){return Ej(e,cN)?e[cN]:{}},Xj=function(e){return Ej(e,cN)}}var lN={set:Kj,get:Yj,has:Xj,enforce:function(e){return Xj(e)?Yj(e):Kj(e,{})},getterFor:function(e){return function(t){var n;if(!YP(t)||(n=Yj(t)).type!==e)throw rN("Incompatible receiver, "+e+" required");return n}}},fN=Function.prototype,dN=DP&&Object.getOwnPropertyDescriptor,pN=Ej(fN,"name"),hN={EXISTS:pN,PROPER:pN&&"something"===function(){}.name,CONFIGURABLE:pN&&(!DP||DP&&dN(fN,"name").configurable)},gN=wP((function(e){var t=hN.CONFIGURABLE,n=lN.get,r=lN.enforce,o=String(String).split("String");(e.exports=function(e,n,i,a){var u,s=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,l=!!a&&!!a.noTargetGet,f=a&&void 0!==a.name?a.name:n;KP(i)&&("Symbol("===String(f).slice(0,7)&&(f="["+String(f).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!Ej(i,"name")||t&&i.name!==f)&&Wj(i,"name",f),(u=r(i)).source||(u.source=o.join("string"==typeof f?f:""))),e!==CP?(s?!l&&e[n]&&(c=!0):delete e[n],c?e[n]=i:Wj(e,n,i)):c?e[n]=i:gj(n,i)})(Function.prototype,"toString",(function(){return KP(this)&&n(this).source||Jj(this)}))})),vN=Math.ceil,yN=Math.floor,mN=function(e){var t=+e;return t!=t||0===t?0:(t>0?yN:vN)(t)},bN=Math.max,wN=Math.min,EN=function(e,t){var n=mN(e);return n<0?bN(n+t,0):wN(n,t)},AN=Math.min,SN=function(e){return e>0?AN(mN(e),9007199254740991):0},CN=function(e){return SN(e.length)},xN=function(e){return function(t,n,r){var o,i=GP(t),a=CN(i),u=EN(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},DN={includes:xN(!0),indexOf:xN(!1)},ON=DN.indexOf,kN=LP([].push),BN=function(e,t){var n,r=GP(e),o=0,i=[];for(n in r)!Ej(nN,n)&&Ej(r,n)&&kN(i,n);for(;t.length>o;)Ej(r,n=t[o++])&&(~ON(i,n)||kN(i,n));return i},TN=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],FN=TN.concat("length","prototype"),_N={f:Object.getOwnPropertyNames||function(e){return BN(e,FN)}},PN={f:Object.getOwnPropertySymbols},jN=LP([].concat),NN=XP("Reflect","ownKeys")||function(e){var t=_N.f(Hj(e)),n=PN.f;return n?jN(t,n(e)):t},RN=function(e,t){for(var n=NN(t),r=qj.f,o=Mj.f,i=0;i<n.length;i++){var a=n[i];Ej(e,a)||r(e,a,o(t,a))}},IN=/#|\.prototype\./,LN=function(e,t){var n=zN[MN(e)];return n==HN||n!=$N&&(KP(t)?xP(t):!!t)},MN=LN.normalize=function(e){return String(e).replace(IN,".").toLowerCase()},zN=LN.data={},$N=LN.NATIVE="N",HN=LN.POLYFILL="P",UN=LN,VN=Mj.f,qN=function(e,t){var n,r,o,i,a,u=e.target,s=e.global,c=e.stat;if(n=s?CP:c?CP[u]||gj(u,{}):(CP[u]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(a=VN(n,r))&&a.value:n[r],!UN(s?r:u+(c?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;RN(i,o)}(e.sham||o&&o.sham)&&Wj(i,"sham",!0),gN(n,r,i,e)}},WN=LP(LP.bind),GN=Array.isArray||function(e){return"Array"==$P(e)},KN={};KN[Tj("toStringTag")]="z";var YN="[object z]"===String(KN),XN=Tj("toStringTag"),JN=CP.Object,ZN="Arguments"==$P(function(){return arguments}()),QN=YN?$P:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=JN(e),XN))?n:ZN?$P(t):"Object"==(r=$P(t))&&KP(t.callee)?"Arguments":r},eR=function(){},tR=[],nR=XP("Reflect","construct"),rR=/^\s*(?:class|function)\b/,oR=LP(rR.exec),iR=!rR.exec(eR),aR=function(e){if(!KP(e))return!1;try{return nR(eR,tR,e),!0}catch(e){return!1}},uR=!nR||xP((function(){var e;return aR(aR.call)||!aR(Object)||!aR((function(){e=!0}))||e}))?function(e){if(!KP(e))return!1;switch(QN(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return iR||!!oR(rR,Jj(e))}:aR,sR=Tj("species"),cR=CP.Array,lR=function(e,t){return new(function(e){var t;return GN(e)&&(t=e.constructor,(uR(t)&&(t===cR||GN(t.prototype))||YP(t)&&null===(t=t[sR]))&&(t=void 0)),void 0===t?cR:t}(e))(0===t?0:t)},fR=LP([].push),dR=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=bj(s),g=VP(h),v=function(e,t){return fj(e),void 0===t?e:WN?WN(e,t):function(){return e.apply(t,arguments)}}(c,l),y=CN(g),m=0,b=f||lR,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:fR(w,d)}else switch(e){case 4:return!1;case 7:fR(w,d)}return i?-1:r||o?o:w}},pR={forEach:dR(0),map:dR(1),filter:dR(2),some:dR(3),every:dR(4),find:dR(5),findIndex:dR(6),filterReject:dR(7)},hR=Tj("species"),gR=function(e){return rj>=51||!xP((function(){var t=[];return(t.constructor={})[hR]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},vR=pR.filter;qN({target:"Array",proto:!0,forced:!gR("filter")},{filter:function(e){return vR(this,e,arguments.length>1?arguments[1]:void 0)}});var yR=YN?{}.toString:function(){return"[object "+QN(this)+"]"};YN||gN(Object.prototype,"toString",yR,{unsafe:!0});var mR,bR=CP.String,wR=function(e){if("Symbol"===QN(e))throw TypeError("Cannot convert a Symbol value to a string");return bR(e)},ER=function(){var e=Hj(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},AR=CP.RegExp,SR=xP((function(){var e=AR("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),CR=SR||xP((function(){return!AR("a","y").sticky})),xR={BROKEN_CARET:SR||xP((function(){var e=AR("^r","gy");return e.lastIndex=2,null!=e.exec("str")})),MISSED_STICKY:CR,UNSUPPORTED_Y:SR},DR=Object.keys||function(e){return BN(e,TN)},OR=DP?Object.defineProperties:function(e,t){Hj(e);for(var n,r=GP(t),o=DR(t),i=o.length,a=0;i>a;)qj.f(e,n=o[a++],r[n]);return e},kR=XP("document","documentElement"),BR=tN("IE_PROTO"),TR=function(){},FR=function(e){return"<script>"+e+"<\/script>"},_R=function(e){e.write(FR("")),e.close();var t=e.parentWindow.Object;return e=null,t},PR=function(){try{mR=new ActiveXObject("htmlfile")}catch(e){}var e,t;PR="undefined"!=typeof document?document.domain&&mR?_R(mR):((t=Rj("iframe")).style.display="none",kR.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(FR("document.F=Object")),e.close(),e.F):_R(mR);for(var n=TN.length;n--;)delete PR.prototype[TN[n]];return PR()};nN[BR]=!0;var jR,NR,RR=Object.create||function(e,t){var n;return null!==e?(TR.prototype=Hj(e),n=new TR,TR.prototype=null,n[BR]=e):n=PR(),void 0===t?n:OR(n,t)},IR=CP.RegExp,LR=xP((function(){var e=IR(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)})),MR=CP.RegExp,zR=xP((function(){var e=MR("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")})),$R=lN.get,HR=yj("native-string-replace",String.prototype.replace),UR=RegExp.prototype.exec,VR=UR,qR=LP("".charAt),WR=LP("".indexOf),GR=LP("".replace),KR=LP("".slice),YR=(NR=/b*/g,kP(UR,jR=/a/,"a"),kP(UR,NR,"a"),0!==jR.lastIndex||0!==NR.lastIndex),XR=xR.BROKEN_CARET,JR=void 0!==/()??/.exec("")[1];(YR||JR||XR||LR||zR)&&(VR=function(e){var t,n,r,o,i,a,u,s=this,c=$R(s),l=wR(e),f=c.raw;if(f)return f.lastIndex=s.lastIndex,t=kP(VR,f,l),s.lastIndex=f.lastIndex,t;var d=c.groups,p=XR&&s.sticky,h=kP(ER,s),g=s.source,v=0,y=l;if(p&&(h=GR(h,"y",""),-1===WR(h,"g")&&(h+="g"),y=KR(l,s.lastIndex),s.lastIndex>0&&(!s.multiline||s.multiline&&"\n"!==qR(l,s.lastIndex-1))&&(g="(?: "+g+")",y=" "+y,v++),n=new RegExp("^(?:"+g+")",h)),JR&&(n=new RegExp("^"+g+"$(?!\\s)",h)),YR&&(r=s.lastIndex),o=kP(UR,p?n:s,y),p?o?(o.input=KR(o.input,v),o[0]=KR(o[0],v),o.index=s.lastIndex,s.lastIndex+=o[0].length):s.lastIndex=0:YR&&o&&(s.lastIndex=s.global?o.index+o[0].length:r),JR&&o&&o.length>1&&kP(HR,o[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&d)for(o.groups=a=RR(null),i=0;i<d.length;i++)a[(u=d[i])[0]]=o[u[1]];return o});var ZR=VR;qN({target:"RegExp",proto:!0,forced:/./.exec!==ZR},{exec:ZR});var QR=Function.prototype,eI=QR.apply,tI=QR.bind,nI=QR.call,rI="object"==typeof Reflect&&Reflect.apply||(tI?nI.bind(eI):function(){return nI.apply(eI,arguments)}),oI=Tj("species"),iI=RegExp.prototype,aI=function(e,t,n,r){var o=Tj(e),i=!xP((function(){var t={};return t[o]=function(){return 7},7!=""[e](t)})),a=i&&!xP((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[oI]=function(){return n},n.flags="",n[o]=/./[o]),n.exec=function(){return t=!0,null},n[o](""),!t}));if(!i||!a||n){var u=LP(/./[o]),s=t(o,""[e],(function(e,t,n,r,o){var a=LP(e),s=t.exec;return s===ZR||s===iI.exec?i&&!o?{done:!0,value:u(t,n,r)}:{done:!0,value:a(n,t,r)}:{done:!1}}));gN(String.prototype,e,s[0]),gN(iI,o,s[1])}r&&Wj(iI[o],"sham",!0)},uI=LP("".charAt),sI=LP("".charCodeAt),cI=LP("".slice),lI=function(e){return function(t,n){var r,o,i=wR(WP(t)),a=mN(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=sI(i,a))<55296||r>56319||a+1===u||(o=sI(i,a+1))<56320||o>57343?e?uI(i,a):r:e?cI(i,a,a+2):o-56320+(r-55296<<10)+65536}},fI=(lI(!1),lI(!0)),dI=function(e,t,n){return t+(n?fI(e,t).length:1)},pI=Math.floor,hI=LP("".charAt),gI=LP("".replace),vI=LP("".slice),yI=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,mI=/\$([$&'`]|\d{1,2})/g,bI=function(e,t,n,r,o,i){var a=n+e.length,u=r.length,s=mI;return void 0!==o&&(o=bj(o),s=yI),gI(i,s,(function(i,s){var c;switch(hI(s,0)){case"$":return"$";case"&":return e;case"`":return vI(t,0,n);case"'":return vI(t,a);case"<":c=o[vI(s,1,-1)];break;default:var l=+s;if(0===l)return i;if(l>u){var f=pI(l/10);return 0===f?i:f<=u?void 0===r[f-1]?hI(s,1):r[f-1]+hI(s,1):i}c=r[l-1]}return void 0===c?"":c}))},wI=CP.TypeError,EI=function(e,t){var n=e.exec;if(KP(n)){var r=kP(n,e,t);return null!==r&&Hj(r),r}if("RegExp"===$P(e))return kP(ZR,e,t);throw wI("RegExp#exec called on incompatible receiver")},AI=Tj("replace"),SI=Math.max,CI=Math.min,xI=LP([].concat),DI=LP([].push),OI=LP("".indexOf),kI=LP("".slice),BI="$0"==="a".replace(/./,"$0"),TI=!!/./[AI]&&""===/./[AI]("a","$0");aI("replace",(function(e,t,n){var r=TI?"$":"$0";return[function(e,n){var r=WP(this),o=null==e?void 0:dj(e,AI);return o?kP(o,e,r,n):kP(t,wR(r),e,n)},function(e,o){var i=Hj(this),a=wR(e);if("string"==typeof o&&-1===OI(o,r)&&-1===OI(o,"$<")){var u=n(t,i,a,o);if(u.done)return u.value}var s=KP(o);s||(o=wR(o));var c=i.global;if(c){var l=i.unicode;i.lastIndex=0}for(var f=[];;){var d=EI(i,a);if(null===d)break;if(DI(f,d),!c)break;""===wR(d[0])&&(i.lastIndex=dI(a,SN(i.lastIndex),l))}for(var p,h="",g=0,v=0;v<f.length;v++){for(var y=wR((d=f[v])[0]),m=SI(CI(mN(d.index),a.length),0),b=[],w=1;w<d.length;w++)DI(b,void 0===(p=d[w])?p:String(p));var E=d.groups;if(s){var A=xI([y],b,m,a);void 0!==E&&DI(A,E);var S=wR(rI(o,void 0,A))}else S=bI(y,a,m,b,E,o);m>=g&&(h+=kI(a,g,m)+S,g=m+y.length)}return h+kI(a,g)}]}),!!xP((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!BI||TI);var FI=Tj("unscopables"),_I=Array.prototype;null==_I[FI]&&qj.f(_I,FI,{configurable:!0,value:RR(null)});var PI=function(e){_I[FI][e]=!0},jI=pR.find,NI=!0;"find"in[]&&Array(1).find((function(){NI=!1})),qN({target:"Array",proto:!0,forced:NI},{find:function(e){return jI(this,e,arguments.length>1?arguments[1]:void 0)}}),PI("find");var RI=Tj("match"),II=function(e){var t;return YP(e)&&(void 0!==(t=e[RI])?!!t:"RegExp"==$P(e))},LI=CP.TypeError,MI=Tj("species"),zI=function(e,t,n){var r=Pj(t);r in e?qj.f(e,r,PP(0,n)):e[r]=n},$I=CP.Array,HI=Math.max,UI=function(e,t,n){for(var r=CN(e),o=EN(t,r),i=EN(void 0===n?r:n,r),a=$I(HI(i-o,0)),u=0;o<i;o++,u++)zI(a,u,e[o]);return a.length=u,a},VI=xR.UNSUPPORTED_Y,qI=Math.min,WI=[].push,GI=LP(/./.exec),KI=LP(WI),YI=LP("".slice);aI("split",(function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r=wR(WP(this)),o=void 0===n?4294967295:n>>>0;if(0===o)return[];if(void 0===e)return[r];if(!II(e))return kP(t,r,e,o);for(var i,a,u,s=[],c=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),l=0,f=new RegExp(e.source,c+"g");(i=kP(ZR,f,r))&&!((a=f.lastIndex)>l&&(KI(s,YI(r,l,i.index)),i.length>1&&i.index<r.length&&rI(WI,s,UI(i,1)),u=i[0].length,l=a,s.length>=o));)f.lastIndex===i.index&&f.lastIndex++;return l===r.length?!u&&GI(f,"")||KI(s,""):KI(s,YI(r,l)),s.length>o?UI(s,0,o):s}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:kP(t,this,e,n)}:t,[function(t,n){var o=WP(this),i=null==t?void 0:dj(t,e);return i?kP(i,t,o,n):kP(r,wR(o),t,n)},function(e,o){var i=Hj(this),a=wR(e),u=n(r,i,a,o,r!==t);if(u.done)return u.value;var s=function(e,t){var n,r=Hj(e).constructor;return void 0===r||null==(n=Hj(r)[MI])?t:function(e){if(uR(e))return e;throw LI(cj(e)+" is not a constructor")}(n)}(i,RegExp),c=i.unicode,l=(i.ignoreCase?"i":"")+(i.multiline?"m":"")+(i.unicode?"u":"")+(VI?"g":"y"),f=new s(VI?"^(?:"+i.source+")":i,l),d=void 0===o?4294967295:o>>>0;if(0===d)return[];if(0===a.length)return null===EI(f,a)?[a]:[];for(var p=0,h=0,g=[];h<a.length;){f.lastIndex=VI?0:h;var v,y=EI(f,VI?YI(a,h):a);if(null===y||(v=qI(SN(f.lastIndex+(VI?h:0)),a.length))===p)h=dI(a,h,c);else{if(KI(g,YI(a,p,h)),g.length===d)return g;for(var m=1;m<=y.length-1;m++)if(KI(g,y[m]),g.length===d)return g;h=p=v}}return KI(g,YI(a,p)),g}]}),!!xP((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),VI);var XI="\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff",JI=LP("".replace),ZI="["+XI+"]",QI=RegExp("^"+ZI+ZI+"*"),eL=RegExp(ZI+ZI+"*$"),tL=function(e){return function(t){var n=wR(WP(t));return 1&e&&(n=JI(n,QI,"")),2&e&&(n=JI(n,eL,"")),n}},nL={start:tL(1),end:tL(2),trim:tL(3)},rL=hN.PROPER,oL=nL.trim;function iL(e){return 0===wp("<div>"+e+"</div>").children().filter((function(e){return"BR"!==e.tagName})).length}function aL(e){return 0===e.length?"":e[0].outerHTML}function uL(e){return e.length?e[0].tagName.toLowerCase():""}function sL(e,t){for(var n="",r=(e.attr("style")||"").split(";"),o=r.length,i=0;i<o;i++){var a=r[i];if(a){var u=a.split(":");u[0].trim()===t&&(n=u[1].trim())}}return n}qN({target:"String",proto:!0,forced:xP((function(){return!!XI.trim()||"âÂá "!=="âÂá ".trim()||rL&&"trim"!==XI.trim.name}))},{trim:function(){return oL(this)}}),qN({global:!0},{globalThis:CP}),Np&&(wp.fn.css=Np),$p&&(wp.fn.append=$p),Hp&&(wp.fn.prepend=Hp),Ep&&(wp.fn.addClass=Ep),Ap&&(wp.fn.removeClass=Ap),Sp&&(wp.fn.hasClass=Sp),kp&&(wp.fn.on=kp),Bp&&(wp.fn.off=Bp),Zp&&(wp.fn.focus=Zp),Cp&&(wp.fn.attr=Cp),xp&&(wp.fn.removeAttr=xp),Pp&&(wp.fn.hide=Pp),jp&&(wp.fn.show=jp),Vp&&(wp.fn.parents=Vp),Dp&&(wp.fn.dataset=Dp),Op&&(wp.fn.val=Op),Mp&&(wp.fn.text=Mp),Lp&&(wp.fn.html=Lp),Wp&&(wp.fn.children=Wp),Gp&&(wp.fn.remove=Gp),qp&&(wp.fn.find=qp),Tp&&(wp.fn.width=Tp),Fp&&(wp.fn.height=Fp),Ip&&(wp.fn.filter=Ip),Kp&&(wp.fn.empty=Kp);var cL={selector:"p:not([data-w-e-type])",parseElemHtml:function(e,t,n){var r=wp(e);return 0===(t=t.filter((function(e){return!!Hf.isText(e)||!!n.isInline(e)}))).length&&(t=[{text:r.text().replace(/\s+/gm," ")}]),{type:"paragraph",children:t}}},lL=function(e,t){return lL=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},lL(e,t)};function fL(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}lL(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var dL=function(){return dL=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},dL.apply(this,arguments)};function pL(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function u(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}s((r=r.apply(e,t||[])).next())}))}function hL(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}}function gL(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function vL(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}function yL(e){var t=vL(yf.nodes(e,{match:function(t){return e.children[0]===t},mode:"highest"}),1)[0];if(null==t)return!1;var n=t[0];if(!ff.isElement(n))return!1;if("paragraph"===n.type)return!1;if(""!==Sf.string(n))return!1;var r=n.children,o=void 0===r?[]:r;return!!Hf.isText(o[0])&&(ad.setNodes(e,{type:"paragraph"}),!0)}var mL={renderElems:[mP],elemsToHtml:[{type:"paragraph",elemToHtml:function(e,t){return""===t?"<p><br></p>":"<p>"+t+"</p>"}}],parseElemsHtml:[cL],editorPlugin:function(e){var t=e.deleteBackward,n=e.deleteForward;e.insertText,e.insertBreak;var r=e;return r.deleteBackward=function(e){yL(r)||t(e)},r.deleteForward=function(e){yL(r)||n(e)},r}},bL=/"/g,wL=LP("".replace),EL=function(e,t,n,r){var o=wR(WP(e)),i="<"+t;return""!==n&&(i+=" "+n+'="'+wL(wR(r),bL,"&quot;")+'"'),i+">"+o+"</"+t+">"},AL=function(e){return xP((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3}))};function SL(e,t){var n=t,r=e,o=r.bold,i=r.italic,a=r.underline;return o&&(n="<strong>"+n+"</strong>"),r.code&&(n="<code>"+n+"</code>"),i&&(n="<em>"+n+"</em>"),a&&(n="<u>"+n+"</u>"),r.through&&(n="<s>"+n+"</s>"),r.sub&&(n="<sub>"+n+"</sub>"),r.sup&&(n="<sup>"+n+"</sup>"),n}function CL(e,t){return 0!==e.length&&(!!e[0].matches(t)||e.find(t).length>0)}qN({target:"String",proto:!0,forced:AL("bold")},{bold:function(){return EL(this,"b","","")}}),qN({target:"String",proto:!0,forced:AL("italics")},{italics:function(){return EL(this,"i","","")}}),qN({target:"String",proto:!0,forced:AL("sub")},{sub:function(){return EL(this,"sub","","")}}),qN({target:"String",proto:!0,forced:AL("sup")},{sup:function(){return EL(this,"sup","","")}});var xL={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},DL=Rj("span").classList,OL=DL&&DL.constructor&&DL.constructor.prototype,kL=OL===Object.prototype?void 0:OL,BL=function(e,t){var n=[][e];return!!n&&xP((function(){n.call(null,t||function(){throw 1},1)}))},TL=pR.forEach,FL=BL("forEach")?[].forEach:function(e){return TL(this,e,arguments.length>1?arguments[1]:void 0)},_L=function(e){if(e&&e.forEach!==FL)try{Wj(e,"forEach",FL)}catch(t){e.forEach=FL}};for(var PL in xL)xL[PL]&&_L(CP[PL]&&CP[PL].prototype);function jL(e,t){return null==e.selection||!!vL(yf.nodes(e,{match:function(t){return"pre"===gO.getNodeType(t)||!!yf.isVoid(e,t)},universal:!0}),1)[0]}function NL(e,t){Object.keys(t).forEach((function(t){"text"!==t&&yf.removeMark(e,t)}))}_L(kL),qN({target:"Object",stat:!0,forced:xP((function(){DR(1)}))},{keys:function(e){return DR(bj(e))}});var RL=function(){function e(){this.marksNeedToRemove=[],this.tag="button"}return e.prototype.getValue=function(e){var t=this.mark,n=yf.marks(e);return n?n[t]:!!vL(yf.nodes(e,{match:function(e){return!0===e[t]}}),1)[0]},e.prototype.isActive=function(e){return!!this.getValue(e)},e.prototype.isDisabled=function(e){return jL(e,this.mark)},e.prototype.exec=function(e,t){var n=this.mark,r=this.marksNeedToRemove;t?e.removeMark(n):(e.addMark(n,!0),r&&r.forEach((function(t){return e.removeMark(t)})))},e}(),IL='<svg viewBox="0 0 1024 1024"><path d="M864 0a160 160 0 0 1 128 256l-64 64-224-224 64-64c26.752-20.096 59.968-32 96-32zM64 736l-64 288 288-64 592-592-224-224L64 736z m651.584-372.416l-448 448-55.168-55.168 448-448 55.168 55.168z"></path></svg>',LL='<svg viewBox="0 0 1024 1024"><path d="M924.402464 1023.068211H0.679665V99.345412h461.861399v98.909208H99.596867v725.896389h725.896389V561.206811h98.909208z" p-id="10909"></path><path d="M930.805104 22.977336l69.965436 69.965436-453.492405 453.492404-69.965435-69.901489z" p-id="10910"></path><path d="M1022.464381 304.030081h-98.917201V99.345412H709.230573V0.428211h313.233808z"></path></svg>',ML=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mark="bold",t.title=J_("textStyle.bold"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M707.872 484.64A254.88 254.88 0 0 0 768 320c0-141.152-114.848-256-256-256H192v896h384c141.152 0 256-114.848 256-256a256.096 256.096 0 0 0-124.128-219.36zM384 192h101.504c55.968 0 101.504 57.408 101.504 128s-45.536 128-101.504 128H384V192z m159.008 640H384v-256h159.008c58.464 0 106.016 57.408 106.016 128s-47.552 128-106.016 128z"></path></svg>',t.hotkey="mod+b",t}return fL(t,e),t}(RL),zL=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mark="code",t.title=J_("textStyle.code"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M576 736l96 96 320-320L672 192l-96 96 224 224zM448 288l-96-96L32 512l320 320 96-96-224-224z"></path></svg>',t.hotkey="mod+e",t}return fL(t,e),t}(RL),$L=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mark="italic",t.title=J_("textStyle.italic"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M896 64v64h-128L448 896h128v64H128v-64h128L576 128h-128V64z"></path></svg>',t.hotkey="mod+i",t}return fL(t,e),t}(RL),HL=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mark="through",t.title=J_("textStyle.through"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M1024 512v64h-234.496c27.52 38.496 42.496 82.688 42.496 128 0 70.88-36.672 139.04-100.576 186.976C672.064 935.488 594.144 960 512 960s-160.064-24.512-219.424-69.024C228.64 843.04 192 774.88 192 704h128c0 69.376 87.936 128 192 128s192-58.624 192-128-87.936-128-192-128H0v-64h299.52a385.984 385.984 0 0 1-6.944-5.024C228.64 459.04 192 390.88 192 320s36.672-139.04 100.576-186.976C351.936 88.512 429.856 64 512 64s160.064 24.512 219.424 69.024C795.328 180.96 832 249.12 832 320h-128c0-69.376-87.936-128-192-128s-192 58.624-192 128 87.936 128 192 128c78.976 0 154.048 22.688 212.48 64H1024z"></path></svg>',t.hotkey="mod+shift+x",t}return fL(t,e),t}(RL),UL=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mark="underline",t.title=J_("textStyle.underline"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M704 64l128 0 0 416c0 159.072-143.264 288-320 288s-320-128.928-320-288l0-416 128 0 0 416c0 40.16 18.24 78.688 51.36 108.512 36.896 33.216 86.848 51.488 140.64 51.488s103.744-18.304 140.64-51.488c33.12-29.792 51.36-68.352 51.36-108.512l0-416zM192 832l640 0 0 128-640 0z"></path></svg>',t.hotkey="mod+u",t}return fL(t,e),t}(RL),VL=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mark="sub",t.marksNeedToRemove=["sup"],t.title=J_("textStyle.sub"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M768 910.016v50.016h128v64h-192v-146.016l128-60V768h-128v-64h192v146.016zM676 256h-136L352 444 164 256H28l256 256-256 256h136L352 580 540 768h136l-256-256z"></path></svg>',t.hotkey="",t}return fL(t,e),t}(RL),qL=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.mark="sup",t.marksNeedToRemove=["sub"],t.title=J_("textStyle.sup"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M768 206.016v50.016h128v64h-192V174.016l128-60V64h-128V0h192v146.016zM676 256h-136L352 444 164 256H28l256 256-256 256h136L352 580 540 768h136l-256-256z"></path></svg>',t.hotkey="",t}return fL(t,e),t}(RL),WL=function(){function e(){this.title=J_("textStyle.clear"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M969.382408 288.738615l-319.401123-270.852152a67.074236 67.074236 0 0 0-96.459139 5.74922l-505.931379 574.922021a68.35184 68.35184 0 0 0-17.886463 47.910169 74.101061 74.101061 0 0 0 24.274486 47.910168l156.50655 132.232065h373.060512L975.131628 383.281347a67.074236 67.074236 0 0 0-5.74922-96.459139z m-440.134747 433.746725H264.144729l-90.071117-78.572676c-5.74922-5.74922-12.137243-12.137243-12.137243-17.886463a36.411728 36.411728 0 0 1 5.749221-24.274485l210.804741-240.828447 265.102932 228.691204z m-439.495945 180.781036h843.218964a60.047411 60.047411 0 1 1 0 120.733624H89.751716a60.047411 60.047411 0 1 1 0-120.733624z m0 0"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return jL(e)},e.prototype.exec=function(e,t){var n,r,o=yf.nodes(e,{match:function(e){return Hf.isText(e)},universal:!0});try{for(var i=gL(o),a=i.next();!a.done;a=i.next())NL(e,a.value[0])}catch(e){n={error:e}}finally{try{a&&!a.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}},e}(),GL={renderStyle:function(e,t){var n=e,r=n.bold,o=n.italic,i=n.underline,a=n.code,u=n.through,s=n.sub,c=n.sup,l=t;return r&&(l=cg("strong",null,l)),a&&(l=cg("code",null,l)),o&&(l=cg("em",null,l)),i&&(l=cg("u",null,l)),u&&(l=cg("s",null,l)),s&&(l=cg("sub",null,l)),c&&(l=cg("sup",null,l)),l},menus:[{key:"bold",factory:function(){return new ML}},{key:"underline",factory:function(){return new UL}},{key:"italic",factory:function(){return new $L}},{key:"through",factory:function(){return new HL}},{key:"code",factory:function(){return new zL}},{key:"sub",factory:function(){return new VL}},{key:"sup",factory:function(){return new qL}},{key:"clearStyle",factory:function(){return new WL}}],styleToHtml:function(e,t){if(!Hf.isText(e))return t;if(iL(t))return SL(e,t);var n=wp(t);if("br"===uL(n))return SL(e,"<br>");var r=n.html();return r=SL(e,r),n.html(r),aL(n)},parseStyleHtml:function(e,t,n){var r=wp(e);if(!Hf.isText(t))return t;var o=t;return CL(r,"b,strong")&&(o.bold=!0),CL(r,"i,em")&&(o.italic=!0),CL(r,"u")&&(o.underline=!0),CL(r,"s,strike")&&(o.through=!0),CL(r,"sub")&&(o.sub=!0),CL(r,"sup")&&(o.sup=!0),CL(r,"code")&&(o.code=!0),o}};function KL(e){return function(t,n,r){return cg("h"+e,null,n)}}var YL={type:"header1",renderElem:KL(1)},XL={type:"header2",renderElem:KL(2)},JL={type:"header3",renderElem:KL(3)},ZL={type:"header4",renderElem:KL(4)},QL={type:"header5",renderElem:KL(5)},eM=hN.PROPER,tM=RegExp.prototype,nM=tM.toString,rM=LP(ER),oM=xP((function(){return"/a/b"!=nM.call({source:"a",flags:"b"})})),iM=eM&&"toString"!=nM.name;(oM||iM)&&gN(RegExp.prototype,"toString",(function(){var e=Hj(this),t=wR(e.source),n=e.flags;return"/"+t+"/"+wR(void 0===n&&JP(tM,e)&&!("flags"in tM)?rM(e):n)}),{unsafe:!0});var aM,uM=CP.TypeError,sM=function(e){if(II(e))throw uM("The method doesn't accept regular expressions");return e},cM=Tj("match"),lM=function(e){var t=/./;try{"/./"[e](t)}catch(n){try{return t[cM]=!1,"/./"[e](t)}catch(e){}}return!1},fM=Mj.f,dM=LP("".startsWith),pM=LP("".slice),hM=Math.min,gM=lM("startsWith");function vM(e){var t=vL(yf.nodes(e,{match:function(e){return gO.getNodeType(e).startsWith("header")},universal:!0}),1),n=t[0];if(null==n)return"paragraph";var r=vL(n,1)[0];return gO.getNodeType(r)}function yM(e){return null==e.selection||!vL(yf.nodes(e,{match:function(e){var t=gO.getNodeType(e);return"paragraph"===t||!!t.startsWith("header")},universal:!0,mode:"highest"}),1)[0]}function mM(e,t){t&&ad.setNodes(e,{type:t})}qN({target:"String",proto:!0,forced:!(!gM&&(aM=fM(String.prototype,"startsWith"),aM&&!aM.writable)||gM)},{startsWith:function(e){var t=wR(WP(this));sM(e);var n=SN(hM(arguments.length>1?arguments[1]:void 0,t.length)),r=wR(e);return dM?dM(t,r,n):pM(t,n,n+r.length)===r}});var bM=function(){function e(){this.title=J_("header.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M960 960c-51.2 0-102.4-3.2-153.6-3.2-51.2 0-99.2 3.2-150.4 3.2-19.2 0-28.8-22.4-28.8-38.4 0-51.2 57.6-28.8 86.4-48 19.2-12.8 19.2-60.8 19.2-80v-224-19.2c-9.6-3.2-19.2-3.2-28.8-3.2H320c-9.6 0-19.2 0-28.8 3.2V780.8c0 22.4 0 80 22.4 92.8 28.8 19.2 96-6.4 96 44.8 0 16-9.6 41.6-28.8 41.6-54.4 0-105.6-3.2-160-3.2-48 0-96 3.2-147.2 3.2-19.2 0-28.8-22.4-28.8-38.4 0-51.2 51.2-28.8 80-48 19.2-12.8 19.2-60.8 19.2-83.2V294.4c0-28.8 3.2-115.2-22.4-131.2-25.6-16-86.4 9.6-86.4-41.6 0-16 6.4-41.6 28.8-41.6 51.2 0 105.6 3.2 156.8 3.2 48 0 96-3.2 144-3.2 19.2 0 28.8 22.4 28.8 41.6 0 48-57.6 25.6-83.2 41.6-19.2 12.8-19.2 73.6-19.2 92.8v201.6c6.4 3.2 16 3.2 22.4 3.2h400c6.4 0 12.8 0 22.4-3.2V256c0-22.4 0-80-19.2-92.8-28.8-16-86.4 6.4-86.4-41.6 0-16 9.6-41.6 28.8-41.6 51.2 0 99.2 3.2 150.4 3.2 48 0 99.2-3.2 147.2-3.2 19.2 0 28.8 22.4 28.8 41.6 0 51.2-57.6 25.6-86.4 41.6-19.2 12.8-19.2 70.4-19.2 92.8v537.6c0 19.2 0 67.2 19.2 80 28.8 19.2 89.6-6.4 89.6 44.8 0 19.2-6.4 41.6-28.8 41.6z"></path></svg>',this.tag="select",this.width=60}return e.prototype.getOptions=function(e){var t=[{value:"header1",text:"H1",styleForRenderMenuList:{"font-size":"32px","font-weight":"bold"}},{value:"header2",text:"H2",styleForRenderMenuList:{"font-size":"24px","font-weight":"bold"}},{value:"header3",text:"H3",styleForRenderMenuList:{"font-size":"18px","font-weight":"bold"}},{value:"header4",text:"H4",styleForRenderMenuList:{"font-size":"16px","font-weight":"bold"}},{value:"header5",text:"H5",styleForRenderMenuList:{"font-size":"13px","font-weight":"bold"}},{value:"paragraph",text:J_("header.text")}],n=this.getValue(e).toString();return t.forEach((function(e){e.value===n?e.selected=!0:delete e.selected})),t},e.prototype.isActive=function(e){return!1},e.prototype.getValue=function(e){return vM(e)},e.prototype.isDisabled=function(e){return yM(e)},e.prototype.exec=function(e,t){mM(e,t.toString())},e}(),wM=function(){function e(){this.tag="button"}return e.prototype.getValue=function(e){return vM(e)},e.prototype.isActive=function(e){return this.getValue(e)===this.type},e.prototype.isDisabled=function(e){return yM(e)},e.prototype.exec=function(e,t){var n=this.type;mM(e,t===n?"paragraph":n)},e}(),EM=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title="H1",t.type="header1",t}return fL(t,e),t}(wM),AM=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title="H2",t.type="header2",t}return fL(t,e),t}(wM),SM=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title="H3",t.type="header3",t}return fL(t,e),t}(wM),CM=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title="H4",t.type="header4",t}return fL(t,e),t}(wM),xM=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title="H5",t.type="header5",t}return fL(t,e),t}(wM),DM={key:"headerSelect",factory:function(){return new bM}},OM={key:"header1",factory:function(){return new EM}},kM={key:"header2",factory:function(){return new AM}},BM={key:"header3",factory:function(){return new SM}},TM={key:"header4",factory:function(){return new CM}},FM={key:"header5",factory:function(){return new xM}};function _M(e){return function(t,n){return"<h"+e+">"+n+"</h"+e+">"}}function PM(e){return function(t,n,r){var o=wp(t);return 0===(n=n.filter((function(e){return!!Hf.isText(e)||!!r.isInline(e)}))).length&&(n=[{text:o.text().replace(/\s+/gm," ")}]),{type:"header"+e,children:n}}}var jM={renderElems:[YL,XL,JL,ZL,QL],elemsToHtml:[{type:"header1",elemToHtml:_M(1)},{type:"header2",elemToHtml:_M(2)},{type:"header3",elemToHtml:_M(3)},{type:"header4",elemToHtml:_M(4)},{type:"header5",elemToHtml:_M(5)}],parseElemsHtml:[{selector:"h1:not([data-w-e-type])",parseElemHtml:PM(1)},{selector:"h2:not([data-w-e-type])",parseElemHtml:PM(2)},{selector:"h3:not([data-w-e-type])",parseElemHtml:PM(3)},{selector:"h4:not([data-w-e-type])",parseElemHtml:PM(4)},{selector:"h5:not([data-w-e-type])",parseElemHtml:PM(5)}],menus:[DM,OM,kM,BM,TM,FM],editorPlugin:function(e){var t=e.insertBreak;e.insertNode;var n=e;return n.insertBreak=function(){var r=vL(yf.nodes(n,{match:function(e){return gO.getNodeType(e).startsWith("header")},universal:!0}),1)[0];r&&gO.isSelectionAtLineEnd(e,r[1])?ad.insertNodes(n,{type:"paragraph",children:[{text:""}]},{mode:"highest"}):t()},n}},NM=Object.assign,RM=Object.defineProperty,IM=LP([].concat),LM=!NM||xP((function(){if(DP&&1!==NM({b:1},NM(RM({},"a",{enumerable:!0,get:function(){RM(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=NM({},e)[n]||DR(NM({},t)).join("")!=r}))?function(e,t){for(var n=bj(e),r=arguments.length,o=1,i=PN.f,a=_P.f;r>o;)for(var u,s=VP(arguments[o++]),c=i?IM(DR(s),i(s)):DR(s),l=c.length,f=0;l>f;)u=c[f++],DP&&!kP(a,s,u)||(n[u]=s[u]);return n}:NM;function MM(e,t){null==e.data&&(e.data={});var n=e.data;null==n.style&&(n.style={}),Object.assign(n.style,t)}qN({target:"Object",stat:!0,forced:Object.assign!==LM},{assign:LM});var zM={selector:"font",preParseHtml:function(e){var t=wp(e);if("font"!==uL(t))return e;var n=t.attr("color")||"";return n&&(t.removeAttr("color"),t.css("color",n)),t[0]}},$M=function(){function e(){this.tag="button",this.showDropPanel=!0,this.$content=null}return e.prototype.exec=function(e,t){},e.prototype.getValue=function(e){var t=this.mark,n=yf.marks(e);return n&&n[t]?n[t]:""},e.prototype.isActive=function(e){return!!this.getValue(e)},e.prototype.isDisabled=function(e){return null==e.selection||!!vL(yf.nodes(e,{match:function(t){return"pre"===gO.getNodeType(t)||!!yf.isVoid(e,t)},universal:!0}),1)[0]},e.prototype.getPanelContentElem=function(e){var t=this.mark;if(null==this.$content){var n=wp('<ul class="w-e-panel-content-color"></ul>');n.on("click","li",(function(n){var r=n.target;if(null!=r&&(n.preventDefault(),null!=e.selection)){var o=wp(r).attr("data-value");"0"===o?yf.removeMark(e,t):yf.addMark(e,t,o)}})),this.$content=n}var r=this.$content;if(null==r)return document.createElement("ul");r.empty();var o=this.getValue(e),i=e.getMenuConfig(t).colors;(void 0===i?[]:i).forEach((function(e){var t=wp('<div class="color-block" data-value="'+e+'"></div>');t.css("background-color",e);var n=wp('<li data-value="'+e+'"></li>');o===e&&n.addClass("active"),n.append(t),r.append(n)}));var a="";"color"===t&&(a=J_("color.default")),"bgColor"===t&&(a=J_("color.clear"));var u=wp('\n      <li data-value="0" class="clear">\n        <svg viewBox="0 0 1024 1024"><path d="M236.8 128L896 787.2V128H236.8z m614.4 704L192 172.8V832h659.2zM192 64h704c38.4 0 64 25.6 64 64v704c0 38.4-25.6 64-64 64H192c-38.4 0-64-25.6-64-64V128c0-38.4 25.6-64 64-64z"></path></svg>\n        '+a+"\n      </li>\n    ");return r.prepend(u),r[0]},e}(),HM=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("color.color"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M64 864h896v96H64zM360.58 576h302.85l81.53 224h102.16L579.24 64H444.77L176.89 800h102.16l81.53-224zM512 159.96L628.49 480H395.52L512 159.96z"></path></svg>',t.mark="color",t}return fL(t,e),t}($M),UM=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("color.bgColor"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M510.030769 315.076923l84.676923 196.923077h-177.230769l76.8-196.923077h15.753846zM945.230769 157.538462v708.923076c0 43.323077-35.446154 78.769231-78.769231 78.769231H157.538462c-43.323077 0-78.769231-35.446154-78.769231-78.769231V157.538462c0-43.323077 35.446154-78.769231 78.769231-78.769231h708.923076c43.323077 0 78.769231 35.446154 78.769231 78.769231z m-108.307692 643.938461L600.615385 216.615385c-5.907692-11.815385-15.753846-19.692308-29.538462-19.692308h-139.815385c-11.815385 0-23.630769 7.876923-27.56923 19.692308l-216.615385 584.861538c-3.938462 11.815385 3.938462 25.6 17.723077 25.6h80.738462c11.815385 0 23.630769-9.846154 27.56923-21.661538l63.015385-175.261539h263.876923l68.923077 175.261539c3.938462 11.815385 15.753846 21.661538 27.569231 21.661538h80.738461c13.784615 0 23.630769-13.784615 19.692308-25.6z"></path></svg>',t.mark="bgColor",t}return fL(t,e),t}($M),VM=["rgb(0, 0, 0)","rgb(38, 38, 38)","rgb(89, 89, 89)","rgb(140, 140, 140)","rgb(191, 191, 191)","rgb(217, 217, 217)","rgb(233, 233, 233)","rgb(245, 245, 245)","rgb(250, 250, 250)","rgb(255, 255, 255)","rgb(225, 60, 57)","rgb(231, 95, 51)","rgb(235, 144, 58)","rgb(245, 219, 77)","rgb(114, 192, 64)","rgb(89, 191, 192)","rgb(66, 144, 247)","rgb(54, 88, 226)","rgb(106, 57, 201)","rgb(216, 68, 147)","rgb(251, 233, 230)","rgb(252, 237, 225)","rgb(252, 239, 212)","rgb(252, 251, 207)","rgb(231, 246, 213)","rgb(218, 244, 240)","rgb(217, 237, 250)","rgb(224, 232, 250)","rgb(237, 225, 248)","rgb(246, 226, 234)","rgb(255, 163, 158)","rgb(255, 187, 150)","rgb(255, 213, 145)","rgb(255, 251, 143)","rgb(183, 235, 143)","rgb(135, 232, 222)","rgb(145, 213, 255)","rgb(173, 198, 255)","rgb(211, 173, 247)","rgb(255, 173, 210)","rgb(255, 77, 79)","rgb(255, 122, 69)","rgb(255, 169, 64)","rgb(255, 236, 61)","rgb(115, 209, 61)","rgb(54, 207, 201)","rgb(64, 169, 255)","rgb(89, 126, 247)","rgb(146, 84, 222)","rgb(247, 89, 171)","rgb(207, 19, 34)","rgb(212, 56, 13)","rgb(212, 107, 8)","rgb(212, 177, 6)","rgb(56, 158, 13)","rgb(8, 151, 156)","rgb(9, 109, 217)","rgb(29, 57, 196)","rgb(83, 29, 171)","rgb(196, 29, 127)","rgb(130, 0, 20)","rgb(135, 20, 0)","rgb(135, 56, 0)","rgb(97, 71, 0)","rgb(19, 82, 0)","rgb(0, 71, 79)","rgb(0, 58, 140)","rgb(6, 17, 120)","rgb(34, 7, 94)","rgb(120, 6, 80)"],qM={renderStyle:function(e,t){var n=e,r=n.color,o=n.bgColor,i=t;return r&&MM(i,{color:r}),o&&MM(i,{backgroundColor:o}),i},styleToHtml:function(e,t){if(!Hf.isText(e))return t;var n,r=e,o=r.color,i=r.bgColor;return o||i?((iL(t)||"span"!==uL(n=wp(t)))&&(n=wp("<span>"+t+"</span>")),o&&n.css("color",o),i&&n.css("background-color",i),aL(n)):t},preParseHtml:[zM],parseStyleHtml:function(e,t,n){var r=wp(e);if(!Hf.isText(t))return t;var o=t,i=sL(r,"color");i&&(o.color=i);var a=sL(r,"background-color");return a||(a=sL(r,"background")),a&&(o.bgColor=a),o},menus:[{key:"color",factory:function(){return new HM},config:{colors:VM}},{key:"bgColor",factory:function(){return new UM},config:{colors:VM}}]},WM=/^(?:\w+:)?\/\/(\S+)$/,GM=/^localhost[\:?\d]*(?:[^\:?\d]\S*)?$/,KM=/^[^\s\.]+\.\S{2,}$/,YM=DN.includes;function XM(e){return void 0===e&&(e="r"),e+"-"+vh()}function JM(e){return e.replace(/</g,"&lt;").replace(/>/g,"&gt;")}function ZM(e,t,n,r){return pL(this,void 0,void 0,(function(){var o,i;return hL(this,(function(a){switch(a.label){case 0:return(o=t.getMenuConfig(e).checkLink)?[4,o(n,r)]:[3,2];case 1:if("string"==typeof(i=a.sent()))return t.alert(i,"error"),[2,!1];if(null==i)return[2,!1];a.label=2;case 2:return[2,!0]}}))}))}function QM(e,t,n){return pL(this,void 0,void 0,(function(){var r;return hL(this,(function(o){switch(o.label){case 0:return(r=t.getMenuConfig(e).parseLinkUrl)?[4,r(n)]:[3,2];case 1:return[2,o.sent()];case 2:return[2,n]}}))}))}function ez(e){return null==e.selection||!!gO.getSelectedElems(e).some((function(t){var n=t.type;return!!e.isVoid(t)||!!["pre","code","link"].includes(n)||void 0}))}function tz(e,t){return{type:"link",url:JM(e),children:t?[{text:t}]:[]}}function nz(e,t,n){return pL(this,void 0,void 0,(function(){var r,o,i;return hL(this,(function(a){switch(a.label){case 0:return n?(t||(t=n),e.restoreSelection(),ez(e)?[2]:[4,ZM("insertLink",e,t,n)]):[2];case 1:return a.sent()?[4,QM("insertLink",e,n)]:[2];case 2:return r=a.sent(),null==(o=e.selection)||(Nf.isCollapsed(o)?(e.insertText(" "),i=tz(r,t),ad.insertNodes(e,i),e.insertFragment([{text:" "}])):yf.string(e,o)!==t?(e.deleteFragment(),i=tz(r,t),ad.insertNodes(e,i)):(i=tz(r),ad.wrapNodes(e,i,{split:!0}),ad.collapse(e,{edge:"end"}))),[2]}}))}))}qN({target:"Array",proto:!0},{includes:function(e){return YM(this,e,arguments.length>1?arguments[1]:void 0)}}),PI("includes");var rz={type:"link",renderElem:function(e,t,n){var r=e,o=r.url,i=r.target;return cg("a",{href:o,target:void 0===i?"_blank":i},t)}},oz={selector:"a:not([data-w-e-type])",parseElemHtml:function(e,t,n){var r=wp(e);return 0===(t=t.filter((function(e){return!!Hf.isText(e)||!!n.isInline(e)}))).length&&(t=[{text:r.text().replace(/\s+/gm," ")}]),{type:"link",url:r.attr("href")||"",target:r.attr("target")||"",children:t}}};function iz(){return XM("w-e-insert-link")}var az=function(){function e(){this.title=J_("link.insert"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M440.224 635.776a51.84 51.84 0 0 1-36.768-15.232c-95.136-95.136-95.136-249.92 0-345.056l192-192C641.536 37.408 702.816 12.032 768 12.032s126.432 25.376 172.544 71.456c95.136 95.136 95.136 249.92 0 345.056l-87.776 87.776a51.968 51.968 0 1 1-73.536-73.536l87.776-87.776a140.16 140.16 0 0 0 0-197.984c-26.432-26.432-61.6-40.992-99.008-40.992s-72.544 14.56-99.008 40.992l-192 192a140.16 140.16 0 0 0 0 197.984 51.968 51.968 0 0 1-36.768 88.768z"></path><path d="M256 1012a242.4 242.4 0 0 1-172.544-71.456c-95.136-95.136-95.136-249.92 0-345.056l87.776-87.776a51.968 51.968 0 1 1 73.536 73.536l-87.776 87.776a140.16 140.16 0 0 0 0 197.984c26.432 26.432 61.6 40.992 99.008 40.992s72.544-14.56 99.008-40.992l192-192a140.16 140.16 0 0 0 0-197.984 51.968 51.968 0 1 1 73.536-73.536c95.136 95.136 95.136 249.92 0 345.056l-192 192A242.4 242.4 0 0 1 256 1012z"></path></svg>',this.tag="button",this.showModal=!0,this.modalWidth=300,this.$content=null,this.textInputId=iz(),this.urlInputId=iz(),this.buttonId=iz()}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.exec=function(e,t){},e.prototype.isDisabled=function(e){return ez(e)},e.prototype.getModalPositionNode=function(e){return null},e.prototype.getModalContentElem=function(e){var t=e.selection,n=this,r=n.textInputId,o=n.urlInputId,i=n.buttonId,a=vL(NF(J_("link.text"),r),2),u=a[0],s=wp(a[1]),c=vL(NF(J_("link.url"),o),2),l=c[0],f=wp(c[1]),d=vL(IF(i,J_("common.ok")),1)[0];if(null==this.$content){var p=wp("<div></div>");p.on("click","#"+i,(function(t){t.preventDefault();var n=p.find("#"+r).val(),i=p.find("#"+o).val();nz(e,n,i),e.hidePanelOrModal()})),this.$content=p}var h=this.$content;if(h.empty(),h.append(u),h.append(l),h.append(d),null==t||Nf.isCollapsed(t))s.val("");else{var g=yf.string(e,t);s.val(g)}return f.val(""),setTimeout((function(){s.focus()})),h[0]},e}();function uz(){return XM("w-e-update-link")}var sz=function(){function e(){this.title=J_("link.edit"),this.iconSvg=IL,this.tag="button",this.showModal=!0,this.modalWidth=300,this.$content=null,this.urlInputId=uz(),this.buttonId=uz()}return e.prototype.getSelectedLinkElem=function(e){var t=gO.getSelectedNodeByType(e,"link");return null==t?null:t},e.prototype.getValue=function(e){var t=this.getSelectedLinkElem(e);return t&&t.url||""},e.prototype.isActive=function(e){return!1},e.prototype.exec=function(e,t){},e.prototype.isDisabled=function(e){return null==e.selection||null==this.getSelectedLinkElem(e)},e.prototype.getModalPositionNode=function(e){return gO.getSelectedNodeByType(e,"link")},e.prototype.getModalContentElem=function(e){var t=this.urlInputId,n=this.buttonId,r=vL(NF(J_("link.url"),t),2),o=r[0],i=wp(r[1]),a=vL(IF(n,J_("common.ok")),1)[0];if(null==this.$content){var u=wp("<div></div>");u.on("click","button",(function(n){n.preventDefault(),e.restoreSelection();var r=gO.getSelectedNodeByType(e,"link"),o=r?Sf.string(r):"",i=u.find("#"+t).val();!function(e,t,n){pL(this,void 0,void 0,(function(){var r,o;return hL(this,(function(i){switch(i.label){case 0:return n?[4,ZM("editLink",e,t,n)]:[2];case 1:return i.sent()?[4,QM("editLink",e,n)]:[2];case 2:return r=i.sent(),o={url:JM(r)},ad.setNodes(e,o,{match:function(e){return gO.checkNodeType(e,"link")}}),[2]}}))}))}(e,o,i),e.hidePanelOrModal()})),this.$content=u}var s=this.$content;s.empty(),s.append(o),s.append(a);var c=this.getValue(e);return i.val(c),setTimeout((function(){i.focus()})),s[0]},e}(),cz=function(){function e(){this.title=J_("link.unLink"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M608.16328 811.815036c9.371954 9.371954 9.371954 24.56788 0 33.941834l-89.347563 89.347564c-118.525421 118.523421-311.38448 118.531421-429.919901 0-118.527421-118.529421-118.527421-311.39048 0-429.917901l89.349564-89.349563c9.371954-9.371954 24.56788-9.371954 33.941834 0l79.195613 79.195613c9.371954 9.371954 9.371954 24.56788 0 33.941834l-89.349563 89.347564c-56.143726 56.145726-56.143726 147.49928 0 203.645005 56.143726 56.143726 147.49928 56.145726 203.647005 0l89.347564-89.347563c9.371954-9.371954 24.56788-9.371954 33.941834 0l79.193613 79.195613z m-113.135447-520.429459c9.371954 9.371954 24.56788 9.371954 33.941834 0l89.347564-89.347564c56.143726-56.149726 147.49928-56.145726 203.647006 0 56.143726 56.145726 56.143726 147.49928 0 203.645006l-89.349564 89.347564c-9.371954 9.371954-9.371954 24.56788 0 33.941834l79.195613 79.195613c9.371954 9.371954 24.56788 9.371954 33.941834 0l89.349564-89.349563c118.529421-118.529421 118.529421-311.38848 0-429.917901-118.531421-118.527421-311.38848-118.527421-429.919901 0l-89.347563 89.347564c-9.371954 9.371954-9.371954 24.56788 0 33.941834l79.193613 79.195613z m469.653707 718.556492l45.253779-45.253779c18.745908-18.745908 18.745908-49.13776 0-67.881669L127.195629 14.062931c-18.745908-18.745908-49.13776-18.745908-67.881669 0L14.058181 59.31871c-18.745908 18.745908-18.745908 49.13776 0 67.881669l882.74169 882.74169c18.745908 18.743908 49.13776 18.743908 67.881669 0z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return null==e.selection||null==gO.getSelectedNodeByType(e,"link")},e.prototype.exec=function(e,t){this.isDisabled(e)||ad.unwrapNodes(e,{match:function(e){return gO.checkNodeType(e,"link")}})},e}(),lz=function(){function e(){this.title=J_("link.view"),this.iconSvg=LL,this.tag="button"}return e.prototype.getSelectedLinkElem=function(e){var t=gO.getSelectedNodeByType(e,"link");return null==t?null:t},e.prototype.getValue=function(e){var t=this.getSelectedLinkElem(e);return t&&t.url||""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return null==e.selection||null==this.getSelectedLinkElem(e)},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){if(!t||"string"!=typeof t)throw new Error("View link failed, link url is '"+t+"'");window.open(t,"_blank")}},e}(),fz={checkLink:function(e,t){return!0},parseLinkUrl:function(e){return e}},dz={renderElems:[rz],elemsToHtml:[{type:"link",elemToHtml:function(e,t){var n=e,r=n.url,o=n.target;return'<a href="'+r+'" target="'+(void 0===o?"_blank":o)+'">'+t+"</a>"}}],parseElemsHtml:[oz],menus:[{key:"insertLink",factory:function(){return new az},config:fz},{key:"editLink",factory:function(){return new sz},config:fz},{key:"unLink",factory:function(){return new cz}},{key:"viewLink",factory:function(){return new lz}}],editorPlugin:function(e){var t=e.isInline,n=e.insertData,r=e.normalizeNode;e.insertNode,e.insertText;var o=e;return o.isInline=function(e){return"link"===e.type||t(e)},o.insertData=function(e){var t=e.getData("text/plain");if(function(e){if("string"!=typeof e)return!1;var t=e.match(WM);if(!t)return!1;var n=t[1];return!(!n||!GM.test(n)&&!KM.test(n))}(t)){if(!ez(o)){var r=o.selection;if(null!=r){var i=yf.string(o,r);nz(o,i,t)}}}else n(e)},o.normalizeNode=function(e){var t=vL(e,2),n=t[0],i=t[1];return"link"!==gO.getNodeType(n)?r([n,i]):""===Sf.string(n)?ad.removeNodes(o,{at:i}):r([n,i])},o}},pz=LP(1..valueOf),hz=CP.RangeError,gz=CP.RangeError,vz=CP.String,yz=Math.floor,mz=LP((function(e){var t=wR(WP(this)),n="",r=mN(e);if(r<0||r==1/0)throw hz("Wrong number of repetitions");for(;r>0;(r>>>=1)&&(t+=t))1&r&&(n+=t);return n})),bz=LP("".slice),wz=LP(1..toFixed),Ez=function(e,t,n){return 0===t?n:t%2==1?Ez(e,t-1,n*e):Ez(e*e,t/2,n)},Az=function(e,t,n){for(var r=-1,o=n;++r<6;)o+=t*e[r],e[r]=o%1e7,o=yz(o/1e7)},Sz=function(e,t){for(var n=6,r=0;--n>=0;)r+=e[n],e[n]=yz(r/t),r=r%t*1e7},Cz=function(e){for(var t=6,n="";--t>=0;)if(""!==n||0===t||0!==e[t]){var r=vz(e[t]);n=""===n?r:n+mz("0",7-r.length)+r}return n};function xz(e,t){return"w-e-image-container-"+gO.findKey(e,t).id}qN({target:"Number",proto:!0,forced:xP((function(){return"0.000"!==wz(8e-5,3)||"1"!==wz(.9,0)||"1.25"!==wz(1.255,2)||"1000000000000000128"!==wz(0xde0b6b3a7640080,0)}))||!xP((function(){wz({})}))},{toFixed:function(e){var t,n,r,o,i=pz(this),a=mN(e),u=[0,0,0,0,0,0],s="",c="0";if(a<0||a>20)throw gz("Incorrect fraction digits");if(i!=i)return"NaN";if(i<=-1e21||i>=1e21)return vz(i);if(i<0&&(s="-",i=-i),i>1e-21)if(n=(t=function(e){for(var t=0,n=e;n>=4096;)t+=12,n/=4096;for(;n>=2;)t+=1,n/=2;return t}(i*Ez(2,69,1))-69)<0?i*Ez(2,-t,1):i/Ez(2,t,1),n*=4503599627370496,(t=52-t)>0){for(Az(u,0,n),r=a;r>=7;)Az(u,1e7,0),r-=7;for(Az(u,Ez(10,r,1),0),r=t-1;r>=23;)Sz(u,1<<23),r-=23;Sz(u,1<<r),Az(u,1,1),Sz(u,2),c=Cz(u)}else Az(u,0,n),Az(u,1<<-t,0),c=Cz(u)+mz("0",a);return a>0?s+((o=c.length)<=a?"0."+mz("0",a-o)+c:bz(c,0,o-a)+"."+bz(c,o-a)):s+c}});var Dz={type:"image",renderElem:function(e,t,n){var r=e,o=r.src,i=r.alt,a=void 0===i?"":i,u=r.href,s=void 0===u?"":u,c=r.style,l=void 0===c?{}:c,f=l.width,d=void 0===f?"":f,p=l.height,h=void 0===p?"":p,g=gO.isNodeSelected(n,e),v={};d&&(v.width="100%"),h&&(v.height="100%");var y=cg("img",{style:v,src:o,alt:a,"data-href":s}),m=n.isDisabled();return g&&!m?function(e,t,n,r){var o=wp("body"),i=xz(e,t),a=r.width,u=r.height,s=0,c=0,l=0,f=!1,d=null;function p(t){d=function(){var e=wp("#"+i);if(0===e.length)throw new Error("Cannot find image container elem");return e}(),s=t;var n=d.find("img");if(0===n.length)throw new Error("Cannot find image elem");c=n.width(),l=n.height(),o.on("mousemove",h),o.on("mouseup",g);var r=gO.getHoverbar(e);r&&r.hideAndClean()}var h=Fh((function(e){e.preventDefault();var t=e.clientX,n=c+(f?s-t:t-s),r=l*(n/c);null!=d&&(n<=15||r<=15||(d.css("width",n+"px"),d.css("height",r+"px")))}),100);function g(n){if(o.off("mousemove",h),null!=d){var r=d.width().toFixed(2),i=d.height().toFixed(2),a={style:dL(dL({},t.style),{width:r+"px",height:i+"px"})};ad.setNodes(e,a,{at:gO.findPath(e,t)}),o.off("mouseup",g)}}var v={};return a&&(v.width=a),u&&(v.height=u),cg("div",{id:i,style:v,className:"w-e-image-container w-e-selected-image-container",on:{mousedown:function(e){var t=wp(e.target);t.hasClass("w-e-image-dragger")&&(e.preventDefault(),(t.hasClass("left-top")||t.hasClass("left-bottom"))&&(f=!0),p(e.clientX))}}},n,cg("div",{className:"w-e-image-dragger left-top"}),cg("div",{className:"w-e-image-dragger right-top"}),cg("div",{className:"w-e-image-dragger left-bottom"}),cg("div",{className:"w-e-image-dragger right-bottom"}))}(n,e,y,{width:d,height:h}):function(e,t,n,r){var o=r.width,i=r.height,a={};return o&&(a.width=o),i&&(a.height=i),cg("div",{id:xz(e,t),style:a,className:"w-e-image-container"},n)}(n,e,y,{width:d,height:h})}},Oz={selector:"img:not([data-w-e-type])",parseElemHtml:function(e,t,n){var r=wp(e),o=r.attr("data-href")||"";return o=decodeURIComponent(o),{type:"image",src:r.attr("src")||"",alt:r.attr("alt")||"",href:o,style:{width:sL(r,"width"),height:sL(r,"height")},children:[{text:""}]}}};function kz(e,t,n,r,o){return void 0===r&&(r=""),void 0===o&&(o=""),pL(this,void 0,void 0,(function(){var i,a;return hL(this,(function(u){switch(u.label){case 0:return(i=t.getMenuConfig(e).checkImage)?[4,i(n,r,o)]:[3,2];case 1:if("string"==typeof(a=u.sent()))return t.alert(a,"error"),[2,!1];if(null==a)return[2,!1];u.label=2;case 2:return[2,!0]}}))}))}function Bz(e,t,n){return pL(this,void 0,void 0,(function(){var r;return hL(this,(function(o){switch(o.label){case 0:return(r=t.getMenuConfig(e).parseImageSrc)?[4,r(n)]:[3,2];case 1:return[2,o.sent()];case 2:return[2,n]}}))}))}function Tz(e,t,n,r){return void 0===n&&(n=""),void 0===r&&(r=""),pL(this,void 0,void 0,(function(){var o,i,a;return hL(this,(function(u){switch(u.label){case 0:return[4,kz("insertImage",e,t,n,r)];case 1:return u.sent()?[4,Bz("insertImage",e,t)]:[2];case 2:return o=u.sent(),i={type:"image",src:JM(o),href:r,alt:n,style:{},children:[{text:""}]},null===e.selection&&e.restoreSelection(),gO.getSelectedNodeByType(e,"image")&&e.move(1),Fz(e)||(ad.insertNodes(e,i),(a=e.getMenuConfig("insertImage").onInsertedImage)&&a(i)),[2]}}))}))}function Fz(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||!!vL(yf.nodes(e,{match:function(t){var n=gO.getNodeType(t);return"code"===n||"pre"===n||"link"===n||"list-item"===n||!!n.startsWith("header")||"blockquote"===n||!!yf.isVoid(e,t)},universal:!0}),1)[0]}function _z(){return XM("w-e-insert-image")}var Pz=function(){function e(){this.title=J_("image.netImage"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M959.877 128l0.123 0.123v767.775l-0.123 0.122H64.102l-0.122-0.122V128.123l0.122-0.123h895.775zM960 64H64C28.795 64 0 92.795 0 128v768c0 35.205 28.795 64 64 64h896c35.205 0 64-28.795 64-64V128c0-35.205-28.795-64-64-64zM832 288.01c0 53.023-42.988 96.01-96.01 96.01s-96.01-42.987-96.01-96.01S682.967 192 735.99 192 832 234.988 832 288.01zM896 832H128V704l224.01-384 256 320h64l224.01-192z"></path></svg>',this.tag="button",this.showModal=!0,this.modalWidth=300,this.$content=null,this.srcInputId=_z(),this.altInputId=_z(),this.hrefInputId=_z(),this.buttonId=_z()}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.exec=function(e,t){},e.prototype.isDisabled=function(e){return Fz(e)},e.prototype.getModalPositionNode=function(e){return null},e.prototype.getModalContentElem=function(e){var t=this,n=this,r=n.srcInputId,o=n.altInputId,i=n.hrefInputId,a=n.buttonId,u=vL(NF(J_("image.src"),r),2),s=u[0],c=wp(u[1]),l=vL(NF(J_("image.desc"),o),2),f=l[0],d=wp(l[1]),p=vL(NF(J_("image.link"),i),2),h=p[0],g=wp(p[1]),v=vL(IF(a,J_("common.ok")),1)[0];if(null==this.$content){var y=wp("<div></div>");y.on("click","#"+a,(function(n){n.preventDefault();var a=y.find("#"+r).val().trim(),u=y.find("#"+o).val().trim(),s=y.find("#"+i).val().trim();t.insertImage(e,a,u,s),e.hidePanelOrModal()})),this.$content=y}var m=this.$content;return m.empty(),m.append(s),m.append(f),m.append(h),m.append(v),c.val(""),d.val(""),g.val(""),setTimeout((function(){c.focus()})),m[0]},e.prototype.insertImage=function(e,t,n,r){void 0===n&&(n=""),void 0===r&&(r=""),t&&(e.restoreSelection(),this.isDisabled(e)||Tz(e,t,n,r))},e}(),jz=function(){function e(){this.title=J_("image.delete"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M826.8032 356.5312c-19.328 0-36.3776 15.6928-36.3776 35.0464v524.2624c0 19.328-16 34.56-35.328 34.56H264.9344c-19.328 0-35.5072-15.3088-35.5072-34.56V390.0416c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.6928-33.5104 35.0464V915.712c0 57.9328 44.6208 108.288 102.528 108.288H755.2c57.9328 0 108.0832-50.4576 108.0832-108.288V391.4752c-0.1024-19.2512-17.1264-34.944-36.48-34.944z" p-id="9577"></path><path d="M437.1712 775.7568V390.6048c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.616-33.5104 35.0464v385.152c0 19.328 14.1568 35.0464 33.5104 35.0464s33.5104-15.7184 33.5104-35.0464zM649.7024 775.7568V390.6048c0-19.328-17.0496-35.0464-36.3776-35.0464s-36.3776 15.616-36.3776 35.0464v385.152c0 19.328 17.0496 35.0464 36.3776 35.0464s36.3776-15.7184 36.3776-35.0464zM965.0432 217.0368h-174.6176V145.5104c0-57.9328-47.2064-101.76-104.6528-101.76h-350.976c-57.8304 0-105.3952 43.8528-105.3952 101.76v71.5264H54.784c-19.4304 0-35.0464 14.1568-35.0464 33.5104 0 19.328 15.616 33.5104 35.0464 33.5104h910.3616c19.328 0 35.0464-14.1568 35.0464-33.5104 0-19.3536-15.6928-33.5104-35.1488-33.5104z m-247.3728 0H297.3952V145.5104c0-19.328 18.2016-34.7648 37.4272-34.7648h350.976c19.1488 0 31.872 15.1296 31.872 34.7648v71.5264z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return null==e.selection||null==gO.getSelectedNodeByType(e,"image")},e.prototype.exec=function(e,t){this.isDisabled(e)||ad.removeNodes(e,{match:function(e){return gO.checkNodeType(e,"image")}})},e}();function Nz(){return XM("w-e-edit-image")}var Rz=function(){function e(){this.title=J_("image.edit"),this.iconSvg=IL,this.tag="button",this.showModal=!0,this.modalWidth=300,this.$content=null,this.srcInputId=Nz(),this.altInputId=Nz(),this.hrefInputId=Nz(),this.buttonId=Nz()}return e.prototype.getValue=function(e){return""},e.prototype.getImageNode=function(e){return gO.getSelectedNodeByType(e,"image")},e.prototype.isActive=function(e){return!1},e.prototype.exec=function(e,t){},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||null==gO.getSelectedNodeByType(e,"image")},e.prototype.getModalPositionNode=function(e){return this.getImageNode(e)},e.prototype.getModalContentElem=function(e){var t=this,n=this,r=n.srcInputId,o=n.altInputId,i=n.hrefInputId,a=n.buttonId,u=this.getImageNode(e);if(null==u)throw new Error("Not found selected image node");var s=vL(NF(J_("image.src"),r),2),c=s[0],l=wp(s[1]),f=vL(NF(J_("image.desc"),o),2),d=f[0],p=wp(f[1]),h=vL(NF(J_("image.link"),i),2),g=h[0],v=wp(h[1]),y=vL(IF(a,J_("common.ok")),1)[0];if(null==this.$content){var m=wp("<div></div>");m.on("click","#"+a,(function(n){n.preventDefault();var a=m.find("#"+r).val(),u=m.find("#"+o).val(),s=m.find("#"+i).val();t.updateImage(e,a,u,s),e.hidePanelOrModal()})),this.$content=m}var b=this.$content;b.empty(),b.append(c),b.append(d),b.append(g),b.append(y);var w=u,E=w.src,A=w.alt,S=void 0===A?"":A,C=w.href,x=void 0===C?"":C;return l.val(E),p.val(S),v.val(x),setTimeout((function(){l.focus()})),b[0]},e.prototype.updateImage=function(e,t,n,r,o){void 0===n&&(n=""),void 0===r&&(r=""),void 0===o&&(o={}),t&&(e.restoreSelection(),this.isDisabled(e)||function(e,t,n,r,o){void 0===n&&(n=""),void 0===r&&(r=""),void 0===o&&(o={}),pL(this,void 0,void 0,(function(){var i,a,u,s,c,l;return hL(this,(function(f){switch(f.label){case 0:return[4,kz("editImage",e,t,n,r)];case 1:return f.sent()?[4,Bz("editImage",e,t)]:[2];case 2:return i=f.sent(),null==(a=gO.getSelectedNodeByType(e,"image"))||(u=a.style,s={src:i,alt:n,href:r,style:dL(dL({},void 0===u?{}:u),o)},ad.setNodes(e,s,{match:function(e){return gO.checkNodeType(e,"image")}}),c=gO.getSelectedNodeByType(e,"image"),(l=e.getMenuConfig("editImage").onUpdatedImage)&&l(c)),[2]}}))}))}(e,t,n,r,o))},e}(),Iz=function(){function e(){this.title=J_("image.viewLink"),this.iconSvg=LL,this.tag="button"}return e.prototype.getValue=function(e){var t=gO.getSelectedNodeByType(e,"image");return t&&t.href||""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return null==e.selection||!this.getValue(e)},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){if(!t||"string"!=typeof t)throw new Error("View image link failed, image.href is '"+t+"'");window.open(t,"_blank")}},e}(),Lz=function(){function e(){this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.getSelectedNode=function(e){return gO.getSelectedNodeByType(e,"image")},e.prototype.isDisabled=function(e){return null==e.selection||null==this.getSelectedNode(e)},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){var n=this.getSelectedNode(e);if(null!=n){var r=gO.getHoverbar(e);r&&r.hideAndClean();var o=n.style,i={style:dL(dL({},void 0===o?{}:o),{width:this.value,height:""})};ad.setNodes(e,i,{match:function(e){return gO.checkNodeType(e,"image")}})}}},e}(),Mz=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title="30%",t.value="30%",t}return fL(t,e),t}(Lz),zz=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title="50%",t.value="50%",t}return fL(t,e),t}(Lz),$z=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title="100%",t.value="100%",t}return fL(t,e),t}(Lz),Hz={onInsertedImage:function(e){},onUpdatedImage:function(e){},checkImage:function(e,t,n){return!0},parseImageSrc:function(e){return e}},Uz={renderElems:[Dz],elemsToHtml:[{type:"image",elemToHtml:function(e,t){var n=e,r=n.src,o=n.alt,i=void 0===o?"":o,a=n.href,u=void 0===a?"":a,s=n.style,c=void 0===s?{}:s,l=c.width,f=void 0===l?"":l,d=c.height,p=void 0===d?"":d,h="";return f&&(h+="width: "+f+";"),p&&(h+="height: "+p+";"),'<img src="'+r+'" alt="'+i+'" data-href="'+u+'" style="'+h+'"/>'}}],parseElemsHtml:[Oz],menus:[{key:"insertImage",factory:function(){return new Pz},config:Hz},{key:"deleteImage",factory:function(){return new jz}},{key:"editImage",factory:function(){return new Rz},config:Hz},{key:"viewImageLink",factory:function(){return new Iz}},{key:"imageWidth30",factory:function(){return new Mz}},{key:"imageWidth50",factory:function(){return new zz}},{key:"imageWidth100",factory:function(){return new $z}}],editorPlugin:function(e){var t=e.isInline,n=e.isVoid;e.insertNode;var r=e;return r.isInline=function(e){return"image"===e.type||t(e)},r.isVoid=function(e){return"image"===e.type||n(e)},r}},Vz={type:"todo",renderElem:function(e,t,n){var r=!1;n.isDisabled()&&(r=!0);var o=cg("div",{style:{margin:"5px 0"}},cg("span",{contentEditable:!1,style:{marginRight:"0.5em"}},cg("input",{type:"checkbox",checked:e.checked,disabled:r,on:{change:function(t){var r=gO.findPath(n,e),o={checked:t.target.checked};ad.setNodes(n,o,{at:r})}}})),cg("span",null,t));return o}},qz=function(){function e(){this.title=J_("todo.todo"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M278.755556 403.911111l-79.644445 79.644445L455.111111 739.555556l568.888889-568.888889-79.644444-79.644445L455.111111 580.266667l-176.355555-176.355556zM910.222222 910.222222H113.777778V113.777778h568.888889V0H113.777778C51.2 0 0 51.2 0 113.777778v796.444444c0 62.577778 51.2 113.777778 113.777778 113.777778h796.444444c62.577778 0 113.777778-51.2 113.777778-113.777778V455.111111h-113.777778v455.111111z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!!gO.getSelectedNodeByType(e,"todo")},e.prototype.isDisabled=function(e){return null==e.selection||!!gO.getSelectedElems(e).some((function(t){if(yf.isVoid(e,t)&&yf.isBlock(e,t))return!0;var n=t.type;return!!["pre","table","list-item"].includes(n)||void 0}))},e.prototype.exec=function(e,t){var n=this.isActive(e);ad.setNodes(e,{type:n?"paragraph":"todo"})},e}(),Wz={selector:'div[data-w-e-type="todo"]',parseElemHtml:function(e,t,n){var r=wp(e);0===(t=t.filter((function(e){return!!Hf.isText(e)||!!n.isInline(e)}))).length&&(t=[{text:r.text().replace(/\s+/gm," ")}]);var o=!1;return null!=r.find('input[type="checkbox"]').attr("checked")&&(o=!0),{type:"todo",checked:o,children:t}}},Gz={renderElems:[Vz],elemsToHtml:[{type:"todo",elemToHtml:function(e,t){return'<div data-w-e-type="todo"><input type="checkbox" disabled '+(e.checked?"checked":"")+">"+t+"</div>"}}],preParseHtml:[{selector:"ul.w-e-todo",preParseHtml:function(e){var t=wp(e).find("li"),n=wp('<div data-w-e-type="todo"></div>'),r=t.find("input[type]");return n.append(r),t.children()[0].remove(),n[0].innerHTML=n[0].innerHTML+t[0].innerHTML,n[0]}}],parseElemsHtml:[Wz],menus:[{key:"todo",factory:function(){return new qz}}],editorPlugin:function(e){var t=e.deleteBackward,n=e;return n.deleteBackward=function(n){var r=e.selection;if(r&&Nf.isCollapsed(r)){var o=gO.getSelectedNodeByType(e,"todo");if(o&&0===Sf.string(o).length)return void ad.setNodes(e,{type:"paragraph"},{mode:"highest"})}t(n)},n}},Kz={type:"blockquote",renderElem:function(e,t,n){return cg("blockquote",null,t)}},Yz={selector:"blockquote:not([data-w-e-type])",parseElemHtml:function(e,t,n){var r=wp(e);return 0===(t=t.filter((function(e){return!!Hf.isText(e)||!!n.isInline(e)}))).length&&(t=[{text:r.text().replace(/\s+/gm," ")}]),{type:"blockquote",children:t}}},Xz=function(){function e(){this.title=J_("blockQuote.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M894.6 907.1H605.4c-32.6 0-59-26.4-59-59V608.2l-4-14.9c0-315.9 125.5-485.1 376.5-507.5v59.8C752.7 180.4 711.3 315.8 711.3 442.4v41.2l31.5 12.3h151.8c32.6 0 59 26.4 59 59v293.2c0 32.5-26.4 59-59 59z m-472 0H133.4c-32.6 0-59-26.4-59-59V608.2l-4-14.9c0-315.9 125.5-485.1 376.5-507.5v59.8C280.7 180.4 239.3 315.8 239.3 442.4v41.2l31.5 12.3h151.8c32.6 0 59 26.4 59 59v293.2c0 32.5-26.4 59-59 59z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!!gO.getSelectedNodeByType(e,"blockquote")},e.prototype.isDisabled=function(e){return null==e.selection||!vL(yf.nodes(e,{match:function(e){var t=gO.getNodeType(e);return"paragraph"===t||"blockquote"===t},universal:!0,mode:"highest"}),1)[0]},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){var n=this.isActive(e)?"paragraph":"blockquote";ad.setNodes(e,{type:n},{mode:"highest"})}},e}(),Jz={key:"blockquote",factory:function(){return new Xz}},Zz=LP([].slice),Qz=gR("slice"),e$=Tj("species"),t$=CP.Array,n$=Math.max;qN({target:"Array",proto:!0,forced:!Qz},{slice:function(e,t){var n,r,o,i=GP(this),a=CN(i),u=EN(e,a),s=EN(void 0===t?a:t,a);if(GN(i)&&(n=i.constructor,(uR(n)&&(n===t$||GN(n.prototype))||YP(n)&&null===(n=n[e$]))&&(n=void 0),n===t$||void 0===n))return Zz(i,u,s);for(r=new(void 0===n?t$:n)(n$(s-u,0)),o=0;u<s;u++,o++)u in i&&zI(r,o,i[u]);return r.length=o,r}});var r$={renderElems:[Kz],elemsToHtml:[{type:"blockquote",elemToHtml:function(e,t){return"<blockquote>"+t+"</blockquote>"}}],parseElemsHtml:[Yz],menus:[Jz],editorPlugin:function(e){var t=e.insertBreak,n=e.insertText,r=e;return r.insertBreak=function(){var o=r.selection;if(null==o)return t();var i=vL(yf.nodes(e,{match:function(e){return gO.checkNodeType(e,"blockquote")},universal:!0}),1)[0];if(!i)return t();var a=i[0],u=gO.findPath(e,a),s=yf.end(e,u);if(Ff.equals(s,o.focus)){var c=Sf.string(a);if(c&&"\n"===c.slice(-1))return e.deleteBackward("character"),void ad.insertNodes(r,{type:"paragraph",children:[{text:""}]},{mode:"highest"})}n("\n")},r}},o$=function(){function e(){this.title=J_("emotion.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M512 1024C230.4 1024 0 793.6 0 512S230.4 0 512 0s512 230.4 512 512-230.4 512-512 512z m0-102.4c226.742857 0 409.6-182.857143 409.6-409.6S738.742857 102.4 512 102.4 102.4 285.257143 102.4 512s182.857143 409.6 409.6 409.6z m-204.8-358.4h409.6c0 113.371429-91.428571 204.8-204.8 204.8s-204.8-91.428571-204.8-204.8z m0-102.4c-43.885714 0-76.8-32.914286-76.8-76.8s32.914286-76.8 76.8-76.8 76.8 32.914286 76.8 76.8-32.914286 76.8-76.8 76.8z m409.6 0c-43.885714 0-76.8-32.914286-76.8-76.8s32.914286-76.8 76.8-76.8c43.885714 0 76.8 32.914286 76.8 76.8s-32.914286 76.8-76.8 76.8z"></path></svg>',this.tag="button",this.showDropPanel=!0,this.$content=null}return e.prototype.exec=function(e,t){},e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return null==e.selection||!!vL(yf.nodes(e,{match:function(t){return"pre"===gO.getNodeType(t)||!!yf.isVoid(e,t)},universal:!0}),1)[0]},e.prototype.getPanelContentElem=function(e){if(null==this.$content){var t=wp('<ul class="w-e-panel-content-emotion"></ul>');t.on("click","li",(function(t){var n=t.target;if(null!=n){t.preventDefault();var r=wp(n).text();e.insertText(r)}})),this.$content=t}var n=this.$content;if(null==n)return document.createElement("ul");n.empty();var r=e.getMenuConfig("emotion").emotions;return(void 0===r?[]:r).forEach((function(e){var t=wp("<li>"+e+"</li>");n.append(t)})),n[0]},e}(),i$={menus:[{key:"emotion",factory:function(){return new o$},config:{emotions:"ð ð ð ð ð ð ð ð¤£ ð ð ð ð ð ð ð ð ð ð ð ð ð ð ð ð¤ ð ð ð ð ð ð ð ð ð£ ð ð« ð© ð¢ ð­ ð¤ ð  ð¡ ð³ ð± ð¨ ð¤ ð¤ ð¶ ð ð¬ ð ð¯ ð´ ð· ð¤ ð ð¤¡ ð© ð» ð ð ð£ ð ð ð ð¤ ð ð ð â ð¤ ð¤ ð¤ âï¸ ð¤ ð ð ð ð ð âï¸ â ð¤ ð ð ð ð¤ ðª ð âï¸ ð".split(" ")}}]},a$={1:"12px",2:"14px",3:"16px",4:"19px",5:"24px",6:"32px",7:"48px"},u$={selector:"font",preParseHtml:function(e){var t=wp(e);if("font"!==uL(t))return e;var n=t.attr("size")||"";n&&(t.removeAttr("size"),t.css("font-size",a$[n]));var r=t.attr("face")||"";return r&&(t.removeAttr("face"),t.css("font-family",r)),t[0]}},s$=LP("".indexOf);qN({target:"String",proto:!0,forced:!lM("includes")},{includes:function(e){return!!~s$(wR(WP(this)),wR(sM(e)),arguments.length>1?arguments[1]:void 0)}});var c$,l$,f$=function(e){return e&&e.Math==Math&&e},d$=f$("object"==typeof globalThis&&globalThis)||f$("object"==typeof window&&window)||f$("object"==typeof self&&self)||f$("object"==typeof bP&&bP)||function(){return this}()||Function("return this")(),p$=Function.prototype,h$=p$.apply,g$=p$.bind,v$=p$.call,y$="object"==typeof Reflect&&Reflect.apply||(g$?v$.bind(h$):function(){return v$.apply(h$,arguments)}),m$=Function.prototype,b$=m$.bind,w$=m$.call,E$=b$&&b$.bind(w$),A$=b$?function(e){return e&&E$(w$,e)}:function(e){return e&&function(){return w$.apply(e,arguments)}},S$=function(e){return"function"==typeof e},C$=function(e){try{return!!e()}catch(e){return!0}},x$=!C$((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),D$=Function.prototype.call,O$=D$.bind?D$.bind(D$):function(){return D$.apply(D$,arguments)},k$={}.propertyIsEnumerable,B$=Object.getOwnPropertyDescriptor,T$=B$&&!k$.call({1:2},1)?function(e){var t=B$(this,e);return!!t&&t.enumerable}:k$,F$={f:T$},_$=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},P$=A$({}.toString),j$=A$("".slice),N$=function(e){return j$(P$(e),8,-1)},R$=d$.Object,I$=A$("".split),L$=C$((function(){return!R$("z").propertyIsEnumerable(0)}))?function(e){return"String"==N$(e)?I$(e,""):R$(e)}:R$,M$=d$.TypeError,z$=function(e){if(null==e)throw M$("Can't call method on "+e);return e},$$=function(e){return L$(z$(e))},H$=function(e){return"object"==typeof e?null!==e:S$(e)},U$={},V$=function(e){return S$(e)?e:void 0},q$=function(e,t){return arguments.length<2?V$(U$[e])||V$(d$[e]):U$[e]&&U$[e][t]||d$[e]&&d$[e][t]},W$=A$({}.isPrototypeOf),G$=q$("navigator","userAgent")||"",K$=d$.process,Y$=d$.Deno,X$=K$&&K$.versions||Y$&&Y$.version,J$=X$&&X$.v8;J$&&(l$=(c$=J$.split("."))[0]>0&&c$[0]<4?1:+(c$[0]+c$[1])),!l$&&G$&&(!(c$=G$.match(/Edge\/(\d+)/))||c$[1]>=74)&&(c$=G$.match(/Chrome\/(\d+)/))&&(l$=+c$[1]);var Z$=l$,Q$=!!Object.getOwnPropertySymbols&&!C$((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&Z$&&Z$<41})),eH=Q$&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,tH=d$.Object,nH=eH?function(e){return"symbol"==typeof e}:function(e){var t=q$("Symbol");return S$(t)&&W$(t.prototype,tH(e))},rH=d$.String,oH=d$.TypeError,iH=function(e){if(S$(e))return e;throw oH(function(e){try{return rH(e)}catch(e){return"Object"}}(e)+" is not a function")},aH=d$.TypeError,uH=Object.defineProperty,sH=d$["__core-js_shared__"]||function(e,t){try{uH(d$,e,{value:t,configurable:!0,writable:!0})}catch(n){d$[e]=t}return t}("__core-js_shared__",{}),cH=wP((function(e){(e.exports=function(e,t){return sH[e]||(sH[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"pure",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),lH=d$.Object,fH=function(e){return lH(z$(e))},dH=A$({}.hasOwnProperty),pH=Object.hasOwn||function(e,t){return dH(fH(e),t)},hH=0,gH=Math.random(),vH=A$(1..toString),yH=function(e){return"Symbol("+(void 0===e?"":e)+")_"+vH(++hH+gH,36)},mH=cH("wks"),bH=d$.Symbol,wH=bH&&bH.for,EH=eH?bH:bH&&bH.withoutSetter||yH,AH=function(e){if(!pH(mH,e)||!Q$&&"string"!=typeof mH[e]){var t="Symbol."+e;Q$&&pH(bH,e)?mH[e]=bH[e]:mH[e]=eH&&wH?wH(t):EH(t)}return mH[e]},SH=d$.TypeError,CH=AH("toPrimitive"),xH=function(e){var t=function(e,t){if(!H$(e)||nH(e))return e;var n,r,o=null==(n=e[CH])?void 0:iH(n);if(o){if(void 0===t&&(t="default"),r=O$(o,e,t),!H$(r)||nH(r))return r;throw SH("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&S$(n=e.toString)&&!H$(r=O$(n,e)))return r;if(S$(n=e.valueOf)&&!H$(r=O$(n,e)))return r;if("string"!==t&&S$(n=e.toString)&&!H$(r=O$(n,e)))return r;throw aH("Can't convert object to primitive value")}(e,t)}(e,"string");return nH(t)?t:t+""},DH=d$.document,OH=H$(DH)&&H$(DH.createElement),kH=function(e){return OH?DH.createElement(e):{}},BH=!x$&&!C$((function(){return 7!=Object.defineProperty(kH("div"),"a",{get:function(){return 7}}).a})),TH=Object.getOwnPropertyDescriptor,FH={f:x$?TH:function(e,t){if(e=$$(e),t=xH(t),BH)try{return TH(e,t)}catch(e){}if(pH(e,t))return _$(!O$(F$.f,e,t),e[t])}},_H=/#|\.prototype\./,PH=function(e,t){var n=NH[jH(e)];return n==IH||n!=RH&&(S$(t)?C$(t):!!t)},jH=PH.normalize=function(e){return String(e).replace(_H,".").toLowerCase()},NH=PH.data={},RH=PH.NATIVE="N",IH=PH.POLYFILL="P",LH=PH,MH=A$(A$.bind),zH=function(e,t){return iH(e),void 0===t?e:MH?MH(e,t):function(){return e.apply(t,arguments)}},$H=d$.String,HH=d$.TypeError,UH=function(e){if(H$(e))return e;throw HH($H(e)+" is not an object")},VH=d$.TypeError,qH=Object.defineProperty,WH={f:x$?qH:function(e,t,n){if(UH(e),t=xH(t),UH(n),BH)try{return qH(e,t,n)}catch(e){}if("get"in n||"set"in n)throw VH("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},GH=x$?function(e,t,n){return WH.f(e,t,_$(1,n))}:function(e,t,n){return e[t]=n,e},KH=FH.f,YH=function(e){var t=function(n,r,o){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(n);case 2:return new e(n,r)}return new e(n,r,o)}return y$(e,this,arguments)};return t.prototype=e.prototype,t},XH=function(e,t){var n,r,o,i,a,u,s,c,l=e.target,f=e.global,d=e.stat,p=e.proto,h=f?d$:d?d$[l]:(d$[l]||{}).prototype,g=f?U$:U$[l]||GH(U$,l,{})[l],v=g.prototype;for(o in t)n=!LH(f?o:l+(d?".":"#")+o,e.forced)&&h&&pH(h,o),a=g[o],n&&(u=e.noTargetGet?(c=KH(h,o))&&c.value:h[o]),i=n&&u?u:t[o],n&&typeof a==typeof i||(s=e.bind&&n?zH(i,d$):e.wrap&&n?YH(i):p&&S$(i)?A$(i):i,(e.sham||i&&i.sham||a&&a.sham)&&GH(s,"sham",!0),GH(g,o,s),p&&(pH(U$,r=l+"Prototype")||GH(U$,r,{}),GH(U$[r],o,i),e.real&&v&&!v[o]&&GH(v,o,i)))},JH=Array.isArray||function(e){return"Array"==N$(e)},ZH=Math.ceil,QH=Math.floor,eU=function(e){var t=+e;return t!=t||0===t?0:(t>0?QH:ZH)(t)},tU=Math.min,nU=function(e){return(t=e.length)>0?tU(eU(t),9007199254740991):0;var t},rU=function(e,t,n){var r=xH(t);r in e?WH.f(e,r,_$(0,n)):e[r]=n},oU={};oU[AH("toStringTag")]="z";var iU="[object z]"===String(oU),aU=AH("toStringTag"),uU=d$.Object,sU="Arguments"==N$(function(){return arguments}()),cU=iU?N$:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=uU(e),aU))?n:sU?N$(t):"Object"==(r=N$(t))&&S$(t.callee)?"Arguments":r},lU=A$(Function.toString);S$(sH.inspectSource)||(sH.inspectSource=function(e){return lU(e)});var fU=sH.inspectSource,dU=function(){},pU=[],hU=q$("Reflect","construct"),gU=/^\s*(?:class|function)\b/,vU=A$(gU.exec),yU=!gU.exec(dU),mU=function(e){if(!S$(e))return!1;try{return hU(dU,pU,e),!0}catch(e){return!1}},bU=!hU||C$((function(){var e;return mU(mU.call)||!mU(Object)||!mU((function(){e=!0}))||e}))?function(e){if(!S$(e))return!1;switch(cU(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return yU||!!vU(gU,fU(e))}:mU,wU=AH("species"),EU=d$.Array,AU=function(e,t){return new(function(e){var t;return JH(e)&&(t=e.constructor,(bU(t)&&(t===EU||JH(t.prototype))||H$(t)&&null===(t=t[wU]))&&(t=void 0)),void 0===t?EU:t}(e))(0===t?0:t)},SU=AH("species"),CU=AH("isConcatSpreadable"),xU=d$.TypeError,DU=Z$>=51||!C$((function(){var e=[];return e[CU]=!1,e.concat()[0]!==e})),OU=Z$>=51||!C$((function(){var e=[];return(e.constructor={})[SU]=function(){return{foo:1}},1!==e.concat(Boolean).foo})),kU=function(e){if(!H$(e))return!1;var t=e[CU];return void 0!==t?!!t:JH(e)};XH({target:"Array",proto:!0,forced:!DU||!OU},{concat:function(e){var t,n,r,o,i,a=fH(this),u=AU(a,0),s=0;for(t=-1,r=arguments.length;t<r;t++)if(kU(i=-1===t?a:arguments[t])){if(s+(o=nU(i))>9007199254740991)throw xU("Maximum allowed index exceeded");for(n=0;n<o;n++,s++)n in i&&rU(u,s,i[n])}else{if(s>=9007199254740991)throw xU("Maximum allowed index exceeded");rU(u,s++,i)}return u.length=s,u}});var BU,TU=d$.String,FU=function(e){if("Symbol"===cU(e))throw TypeError("Cannot convert a Symbol value to a string");return TU(e)},_U=Math.max,PU=Math.min,jU=function(e,t){var n=eU(e);return n<0?_U(n+t,0):PU(n,t)},NU=function(e){return function(t,n,r){var o,i=$$(t),a=nU(i),u=jU(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},RU={includes:NU(!0),indexOf:NU(!1)},IU={},LU=RU.indexOf,MU=A$([].push),zU=function(e,t){var n,r=$$(e),o=0,i=[];for(n in r)!pH(IU,n)&&pH(r,n)&&MU(i,n);for(;t.length>o;)pH(r,n=t[o++])&&(~LU(i,n)||MU(i,n));return i},$U=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],HU=Object.keys||function(e){return zU(e,$U)},UU=x$?Object.defineProperties:function(e,t){UH(e);for(var n,r=$$(t),o=HU(t),i=o.length,a=0;i>a;)WH.f(e,n=o[a++],r[n]);return e},VU=q$("document","documentElement"),qU=cH("keys"),WU=function(e){return qU[e]||(qU[e]=yH(e))},GU=WU("IE_PROTO"),KU=function(){},YU=function(e){return"<script>"+e+"<\/script>"},XU=function(e){e.write(YU("")),e.close();var t=e.parentWindow.Object;return e=null,t},JU=function(){try{BU=new ActiveXObject("htmlfile")}catch(e){}var e,t;JU="undefined"!=typeof document?document.domain&&BU?XU(BU):((t=kH("iframe")).style.display="none",VU.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(YU("document.F=Object")),e.close(),e.F):XU(BU);for(var n=$U.length;n--;)delete JU.prototype[$U[n]];return JU()};IU[GU]=!0;var ZU,QU,eV,tV=Object.create||function(e,t){var n;return null!==e?(KU.prototype=UH(e),n=new KU,KU.prototype=null,n[GU]=e):n=JU(),void 0===t?n:UU(n,t)},nV=$U.concat("length","prototype"),rV={f:Object.getOwnPropertyNames||function(e){return zU(e,nV)}},oV=d$.Array,iV=Math.max,aV=rV.f,uV="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],sV={f:function(e){return uV&&"Window"==N$(e)?function(e){try{return aV(e)}catch(e){return function(e){for(var t=nU(e),n=jU(void 0,t),r=jU(t,t),o=oV(iV(r-n,0)),i=0;n<r;n++,i++)rU(o,i,e[n]);return o.length=i,o}(uV)}}(e):aV($$(e))}},cV={f:Object.getOwnPropertySymbols},lV=A$([].slice),fV=function(e,t,n,r){r&&r.enumerable?e[t]=n:GH(e,t,n)},dV={f:AH},pV=WH.f,hV=function(e){var t=U$.Symbol||(U$.Symbol={});pH(t,e)||pV(t,e,{value:dV.f(e)})},gV=iU?{}.toString:function(){return"[object "+cU(this)+"]"},vV=WH.f,yV=AH("toStringTag"),mV=function(e,t,n,r){if(e){var o=n?e:e.prototype;pH(o,yV)||vV(o,yV,{configurable:!0,value:t}),r&&!iU&&GH(o,"toString",gV)}},bV=d$.WeakMap,wV=S$(bV)&&/native code/.test(fU(bV)),EV=d$.TypeError,AV=d$.WeakMap;if(wV||sH.state){var SV=sH.state||(sH.state=new AV),CV=A$(SV.get),xV=A$(SV.has),DV=A$(SV.set);ZU=function(e,t){if(xV(SV,e))throw new EV("Object already initialized");return t.facade=e,DV(SV,e,t),t},QU=function(e){return CV(SV,e)||{}},eV=function(e){return xV(SV,e)}}else{var OV=WU("state");IU[OV]=!0,ZU=function(e,t){if(pH(e,OV))throw new EV("Object already initialized");return t.facade=e,GH(e,OV,t),t},QU=function(e){return pH(e,OV)?e[OV]:{}},eV=function(e){return pH(e,OV)}}var kV={set:ZU,get:QU,has:eV,enforce:function(e){return eV(e)?QU(e):ZU(e,{})},getterFor:function(e){return function(t){var n;if(!H$(t)||(n=QU(t)).type!==e)throw EV("Incompatible receiver, "+e+" required");return n}}},BV=A$([].push),TV=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=fH(s),g=L$(h),v=zH(c,l),y=nU(g),m=0,b=f||AU,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:BV(w,d)}else switch(e){case 4:return!1;case 7:BV(w,d)}return i?-1:r||o?o:w}},FV=[TV(0),TV(1),TV(2),TV(3),TV(4),TV(5),TV(6),TV(7)][0],_V=WU("hidden"),PV=AH("toPrimitive"),jV=kV.set,NV=kV.getterFor("Symbol"),RV=Object.prototype,IV=d$.Symbol,LV=IV&&IV.prototype,MV=d$.TypeError,zV=d$.QObject,$V=q$("JSON","stringify"),HV=FH.f,UV=WH.f,VV=sV.f,qV=F$.f,WV=A$([].push),GV=cH("symbols"),KV=cH("op-symbols"),YV=cH("string-to-symbol-registry"),XV=cH("symbol-to-string-registry"),JV=cH("wks"),ZV=!zV||!zV.prototype||!zV.prototype.findChild,QV=x$&&C$((function(){return 7!=tV(UV({},"a",{get:function(){return UV(this,"a",{value:7}).a}})).a}))?function(e,t,n){var r=HV(RV,t);r&&delete RV[t],UV(e,t,n),r&&e!==RV&&UV(RV,t,r)}:UV,eq=function(e,t){var n=GV[e]=tV(LV);return jV(n,{type:"Symbol",tag:e,description:t}),x$||(n.description=t),n},tq=function(e,t,n){e===RV&&tq(KV,t,n),UH(e);var r=xH(t);return UH(n),pH(GV,r)?(n.enumerable?(pH(e,_V)&&e[_V][r]&&(e[_V][r]=!1),n=tV(n,{enumerable:_$(0,!1)})):(pH(e,_V)||UV(e,_V,_$(1,{})),e[_V][r]=!0),QV(e,r,n)):UV(e,r,n)},nq=function(e,t){UH(e);var n=$$(t),r=HU(n).concat(aq(n));return FV(r,(function(t){x$&&!O$(rq,n,t)||tq(e,t,n[t])})),e},rq=function(e){var t=xH(e),n=O$(qV,this,t);return!(this===RV&&pH(GV,t)&&!pH(KV,t))&&(!(n||!pH(this,t)||!pH(GV,t)||pH(this,_V)&&this[_V][t])||n)},oq=function(e,t){var n=$$(e),r=xH(t);if(n!==RV||!pH(GV,r)||pH(KV,r)){var o=HV(n,r);return!o||!pH(GV,r)||pH(n,_V)&&n[_V][r]||(o.enumerable=!0),o}},iq=function(e){var t=VV($$(e)),n=[];return FV(t,(function(e){pH(GV,e)||pH(IU,e)||WV(n,e)})),n},aq=function(e){var t=e===RV,n=VV(t?KV:$$(e)),r=[];return FV(n,(function(e){!pH(GV,e)||t&&!pH(RV,e)||WV(r,GV[e])})),r};if(Q$||(LV=(IV=function(){if(W$(LV,this))throw MV("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?FU(arguments[0]):void 0,t=yH(e),n=function(e){this===RV&&O$(n,KV,e),pH(this,_V)&&pH(this[_V],t)&&(this[_V][t]=!1),QV(this,t,_$(1,e))};return x$&&ZV&&QV(RV,t,{configurable:!0,set:n}),eq(t,e)}).prototype,fV(LV,"toString",(function(){return NV(this).tag})),fV(IV,"withoutSetter",(function(e){return eq(yH(e),e)})),F$.f=rq,WH.f=tq,FH.f=oq,rV.f=sV.f=iq,cV.f=aq,dV.f=function(e){return eq(AH(e),e)},x$&&UV(LV,"description",{configurable:!0,get:function(){return NV(this).description}})),XH({global:!0,wrap:!0,forced:!Q$,sham:!Q$},{Symbol:IV}),FV(HU(JV),(function(e){hV(e)})),XH({target:"Symbol",stat:!0,forced:!Q$},{for:function(e){var t=FU(e);if(pH(YV,t))return YV[t];var n=IV(t);return YV[t]=n,XV[n]=t,n},keyFor:function(e){if(!nH(e))throw MV(e+" is not a symbol");if(pH(XV,e))return XV[e]},useSetter:function(){ZV=!0},useSimple:function(){ZV=!1}}),XH({target:"Object",stat:!0,forced:!Q$,sham:!x$},{create:function(e,t){return void 0===t?tV(e):nq(tV(e),t)},defineProperty:tq,defineProperties:nq,getOwnPropertyDescriptor:oq}),XH({target:"Object",stat:!0,forced:!Q$},{getOwnPropertyNames:iq,getOwnPropertySymbols:aq}),XH({target:"Object",stat:!0,forced:C$((function(){cV.f(1)}))},{getOwnPropertySymbols:function(e){return cV.f(fH(e))}}),$V){var uq=!Q$||C$((function(){var e=IV();return"[null]"!=$V([e])||"{}"!=$V({a:e})||"{}"!=$V(Object(e))}));XH({target:"JSON",stat:!0,forced:uq},{stringify:function(e,t,n){var r=lV(arguments),o=t;if((H$(t)||void 0!==e)&&!nH(e))return JH(t)||(t=function(e,t){if(S$(o)&&(t=O$(o,this,e,t)),!nH(t))return t}),r[1]=t,y$($V,null,r)}})}if(!LV[PV]){var sq=LV.valueOf;fV(LV,PV,(function(e){return O$(sq,this)}))}mV(IV,"Symbol"),IU[_V]=!0,hV("asyncIterator"),hV("hasInstance"),hV("isConcatSpreadable"),hV("iterator"),hV("match"),hV("matchAll"),hV("replace"),hV("search"),hV("species"),hV("split"),hV("toPrimitive"),hV("toStringTag"),hV("unscopables"),mV(d$.JSON,"JSON",!0);var cq,lq,fq,dq=U$.Symbol,pq={},hq=Function.prototype,gq=x$&&Object.getOwnPropertyDescriptor,vq=pH(hq,"name"),yq={EXISTS:vq,PROPER:vq&&"something"===function(){}.name,CONFIGURABLE:vq&&(!x$||x$&&gq(hq,"name").configurable)},mq=!C$((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),bq=WU("IE_PROTO"),wq=d$.Object,Eq=wq.prototype,Aq=mq?wq.getPrototypeOf:function(e){var t=fH(e);if(pH(t,bq))return t[bq];var n=t.constructor;return S$(n)&&t instanceof n?n.prototype:t instanceof wq?Eq:null},Sq=AH("iterator"),Cq=!1;[].keys&&("next"in(fq=[].keys())?(lq=Aq(Aq(fq)))!==Object.prototype&&(cq=lq):Cq=!0);var xq=null==cq||C$((function(){var e={};return cq[Sq].call(e)!==e}));cq=xq?{}:tV(cq),S$(cq[Sq])||fV(cq,Sq,(function(){return this}));var Dq={IteratorPrototype:cq,BUGGY_SAFARI_ITERATORS:Cq},Oq=Dq.IteratorPrototype,kq=function(){return this};d$.String,d$.TypeError,Object.setPrototypeOf||"__proto__"in{}&&function(){try{A$(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set)({},[])}catch(e){}}();var Bq=yq.PROPER,Tq=Dq.BUGGY_SAFARI_ITERATORS,Fq=AH("iterator"),_q=function(){return this},Pq=function(e,t,n,r,o,i,a){!function(e,t,n){var r=t+" Iterator";e.prototype=tV(Oq,{next:_$(1,n)}),mV(e,r,!1,!0),pq[r]=kq}(n,t,r);var u,s,c,l=function(e){if(e===o&&g)return g;if(!Tq&&e in p)return p[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},f=t+" Iterator",d=!1,p=e.prototype,h=p[Fq]||p["@@iterator"]||o&&p[o],g=!Tq&&h||l(o),v="Array"==t&&p.entries||h;if(v&&(u=Aq(v.call(new e)))!==Object.prototype&&u.next&&(mV(u,f,!0,!0),pq[f]=_q),Bq&&"values"==o&&h&&"values"!==h.name&&(d=!0,g=function(){return O$(h,this)}),o)if(s={values:l("values"),keys:i?g:l("keys"),entries:l("entries")},a)for(c in s)(Tq||d||!(c in p))&&fV(p,c,s[c]);else XH({target:t,proto:!0,forced:Tq||d},s);return a&&p[Fq]!==g&&fV(p,Fq,g,{name:o}),pq[t]=g,s},jq=kV.set,Nq=kV.getterFor("Array Iterator");Pq(Array,"Array",(function(e,t){jq(this,{type:"Array Iterator",target:$$(e),index:0,kind:t})}),(function(){var e=Nq(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values"),pq.Arguments=pq.Array;var Rq=AH("toStringTag");for(var Iq in{CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var Lq=d$[Iq],Mq=Lq&&Lq.prototype;Mq&&cU(Mq)!==Rq&&GH(Mq,Rq,Iq),pq[Iq]=pq.Array}var zq=dq;hV("asyncDispose"),hV("dispose"),hV("matcher"),hV("metadata"),hV("observable"),hV("patternMatch"),hV("replaceAll");var $q=zq,Hq=A$("".charAt),Uq=A$("".charCodeAt),Vq=A$("".slice),qq=function(e){return function(t,n){var r,o,i=FU(z$(t)),a=eU(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=Uq(i,a))<55296||r>56319||a+1===u||(o=Uq(i,a+1))<56320||o>57343?e?Hq(i,a):r:e?Vq(i,a,a+2):o-56320+(r-55296<<10)+65536}},Wq=(qq(!1),qq(!0)),Gq=kV.set,Kq=kV.getterFor("String Iterator");Pq(String,"String",(function(e){Gq(this,{type:"String Iterator",string:FU(e),index:0})}),(function(){var e,t=Kq(this),n=t.string,r=t.index;return r>=n.length?{value:void 0,done:!0}:(e=Wq(n,r),t.index+=e.length,{value:e,done:!1})}));var Yq=dV.f("iterator"),Xq=wP((function(e){function t(n){return"function"==typeof $q&&"symbol"==typeof Yq?(e.exports=t=function(e){return typeof e},e.exports.default=e.exports,e.exports.__esModule=!0):(e.exports=t=function(e){return e&&"function"==typeof $q&&e.constructor===$q&&e!==$q.prototype?"symbol":typeof e},e.exports.default=e.exports,e.exports.__esModule=!0),t(n)}e.exports=t,e.exports.default=e.exports,e.exports.__esModule=!0})),Jq=function(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}(Xq),Zq=hN.EXISTS,Qq=qj.f,eW=Function.prototype,tW=LP(eW.toString),nW=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,rW=LP(nW.exec);DP&&!Zq&&Qq(eW,"name",{configurable:!0,get:function(){try{return rW(nW,tW(this))[1]}catch(e){return""}}});var oW=function(){function e(){this.tag="select",this.width=80}return e.prototype.isActive=function(e){return!1},e.prototype.getValue=function(e){var t=this.mark,n=yf.marks(e);return n&&n[t]?n[t]:""},e.prototype.isDisabled=function(e){return null==e.selection||(this.mark,!!vL(yf.nodes(e,{match:function(t){return"pre"===gO.getNodeType(t)||!!yf.isVoid(e,t)},universal:!0}),1)[0])},e.prototype.exec=function(e,t){var n=this.mark;t?e.addMark(n,t):e.removeMark(n)},e}(),iW=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("fontSize.title"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M64 512h384v128h-128V1024h-128V640h-128z m896-256H708.2496v768h-136.4992V256H320V128h640z"></path></svg>',t.mark="fontSize",t}return fL(t,e),t.prototype.getOptions=function(e){var t=[],n=e.getMenuConfig(this.mark).fontSizeList,r=void 0===n?[]:n;t.push({text:J_("fontSize.default"),value:""}),r.forEach((function(e){if("string"==typeof e)t.push({text:e,value:e});else if("object"===Jq(e)){var n=e.name,r=e.value;t.push({text:n,value:r})}}));var o=this.getValue(e);return t.forEach((function(e){e.value===o?e.selected=!0:delete e.selected})),t},t}(oW),aW=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("fontFamily.title"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M956.788364 152.110545h-24.110546l23.924364 9.029819 0.186182 121.018181h-65.070546l-86.574545-130.048H566.551273v650.14691l130.048 64.977454v65.163636h-390.050909v-65.163636l129.954909-64.977454V152.110545H198.283636L111.429818 282.065455H46.545455V69.259636C46.545455 33.792 82.664727 22.062545 98.955636 22.062545h812.683637c23.738182 0 45.056 15.173818 45.056 41.053091V169.425455v-17.221819z"></path></svg>',t.mark="fontFamily",t.selectPanelWidth=150,t}return fL(t,e),t.prototype.getOptions=function(e){var t=[],n=e.getMenuConfig(this.mark).fontFamilyList,r=void 0===n?[]:n;t.push({text:J_("fontFamily.default"),value:""}),r.forEach((function(e){if("string"==typeof e)t.push({text:e,value:e,styleForRenderMenuList:{"font-family":e}});else if("object"===Jq(e)){var n=e.name,r=e.value;t.push({text:n,value:r,styleForRenderMenuList:{"font-family":r}})}}));var o=this.getValue(e);return t.forEach((function(e){e.value===o?e.selected=!0:delete e.selected})),t},t}(oW),uW={renderStyle:function(e,t){var n=e,r=n.fontSize,o=n.fontFamily,i=t;return r&&MM(i,{fontSize:r}),o&&MM(i,{fontFamily:o}),i},styleToHtml:function(e,t){if(!Hf.isText(e))return t;var n,r=e,o=r.fontSize,i=r.fontFamily;return o||i?((iL(t)||"span"!==uL(n=wp(t)))&&(n=wp("<span>"+t+"</span>")),o&&n.css("font-size",o),i&&n.css("font-family",i),aL(n)):t},preParseHtml:[u$],parseStyleHtml:function(e,t,n){var r=wp(e);if(!Hf.isText(t))return t;var o=t,i=n.getMenuConfig("fontSize").fontSizeList,a=void 0===i?[]:i,u=sL(r,"font-size"),s=a.find((function(e){return e.value&&e.value===u}))||a.includes(u);u&&s&&(o.fontSize=u);var c=n.getMenuConfig("fontFamily").fontFamilyList,l=void 0===c?[]:c,f=sL(r,"font-family").replace(/"/g,""),d=l.find((function(e){return e.value&&e.value===f}))||l.includes(f);return f&&d&&(o.fontFamily=f),o},menus:[{key:"fontSize",factory:function(){return new iW},config:{fontSizeList:["12px",{name:"13px",value:"13px"},"14px","15px","16px","19px",{name:"22px",value:"22px"},"24px","29px","32px","40px","48px"]}},{key:"fontFamily",factory:function(){return new aW},config:{fontFamilyList:["é»ä½",{name:"ä»¿å®",value:"ä»¿å®"},"æ¥·ä½","æ æ¥·ä½","åæä»¿å®","åææ¥·ä½",{name:"å®ä½",value:"å®ä½"},"å¾®è½¯éé»","Arial","Tahoma","Verdana","Times New Roman","Courier New"]}}]},sW={selector:"p,h1,h2,h3,h4,h5",preParseHtml:function(e){var t=wp(e),n=sL(t,"padding-left");return/\dem/.test(n)&&t.css("text-indent","2em"),/\dpx/.test(n)&&parseInt(n,10)%32==0&&t.css("text-indent","2em"),t[0]}},cW=function(){function e(){this.tag="button"}return e.prototype.getValue=function(e){var t=vL(yf.nodes(e,{match:function(e){return!!e.indent},universal:!0}),1),n=t[0];return null==n?"":vL(n,1)[0].indent||""},e.prototype.isActive=function(e){return!1},e.prototype.getMatchNode=function(e){var t=vL(yf.nodes(e,{match:function(e){var t=gO.getNodeType(e);return"paragraph"===t||!!t.startsWith("header")},universal:!0,mode:"highest"}),1)[0];return null==t?null:t[0]},e}(),lW=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("indent.decrease"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M0 64h1024v128H0z m384 192h640v128H384z m0 192h640v128H384z m0 192h640v128H384zM0 832h1024v128H0z m256-512v384l-256-192z"></path></svg>',t}return fL(t,e),t.prototype.isDisabled=function(e){var t=this.getMatchNode(e);return null==t||!t.indent},t.prototype.exec=function(e,t){ad.setNodes(e,{indent:null},{match:function(e){return ff.isElement(e)}})},t}(cW),fW=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("indent.increase"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M0 64h1024v128H0z m384 192h640v128H384z m0 192h640v128H384z m0 192h640v128H384zM0 832h1024v128H0z m0-128V320l256 192z"></path></svg>',t}return fL(t,e),t.prototype.isDisabled=function(e){var t=this.getMatchNode(e);return null==t||!!t.indent},t.prototype.exec=function(e,t){ad.setNodes(e,{indent:"2em"},{match:function(e){return ff.isElement(e)},mode:"highest"})},t}(cW),dW={renderStyle:function(e,t){if(!ff.isElement(e))return t;var n=e.indent,r=t;return n&&MM(r,{textIndent:n}),r},styleToHtml:function(e,t){if(!ff.isElement(e))return t;var n=e.indent;if(!n)return t;var r=wp(t);return r.css("text-indent",n),aL(r)},preParseHtml:[sW],parseStyleHtml:function(e,t,n){var r=wp(e);if(!ff.isElement(t))return t;var o=t,i=sL(r,"text-indent"),a=parseInt(i,10);return i&&a>0&&(o.indent=i),o},menus:[{key:"indent",factory:function(){return new fW}},{key:"delIndent",factory:function(){return new lW}}]},pW=function(){function e(){this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.getMatchNode=function(e){var t=vL(yf.nodes(e,{match:function(e){var t=gO.getNodeType(e);return"paragraph"===t||"blockquote"===t||!!t.startsWith("header")},universal:!0,mode:"highest"}),1)[0];return null==t?null:t[0]},e.prototype.isDisabled=function(e){return null==e.selection||!!gO.getSelectedElems(e).some((function(t){if(yf.isVoid(e,t)&&yf.isBlock(e,t))return!0;var n=t.type;return!!["pre","code"].includes(n)||void 0}))},e}(),hW=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("justify.left"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M768 793.6v102.4H51.2v-102.4h716.8z m204.8-230.4v102.4H51.2v-102.4h921.6z m-204.8-230.4v102.4H51.2v-102.4h716.8zM972.8 102.4v102.4H51.2V102.4h921.6z"></path></svg>',t}return fL(t,e),t.prototype.exec=function(e,t){ad.setNodes(e,{textAlign:"left"},{match:function(t){return ff.isElement(t)&&!e.isInline(t)}})},t}(pW),gW=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("justify.right"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M972.8 793.6v102.4H256v-102.4h716.8z m0-230.4v102.4H51.2v-102.4h921.6z m0-230.4v102.4H256v-102.4h716.8zM972.8 102.4v102.4H51.2V102.4h921.6z"></path></svg>',t}return fL(t,e),t.prototype.exec=function(e,t){ad.setNodes(e,{textAlign:"right"},{match:function(t){return ff.isElement(t)&&!e.isInline(t)}})},t}(pW),vW=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("justify.center"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M870.4 793.6v102.4H153.6v-102.4h716.8z m102.4-230.4v102.4H51.2v-102.4h921.6z m-102.4-230.4v102.4H153.6v-102.4h716.8zM972.8 102.4v102.4H51.2V102.4h921.6z"></path></svg>',t}return fL(t,e),t.prototype.exec=function(e,t){ad.setNodes(e,{textAlign:"center"},{match:function(t){return ff.isElement(t)&&!e.isInline(t)}})},t}(pW),yW=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=J_("justify.justify"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M0 64h1024v128H0z m0 192h1024v128H0z m0 192h1024v128H0z m0 192h1024v128H0z m0 192h1024v128H0z"></path></svg>',t}return fL(t,e),t.prototype.exec=function(e,t){ad.setNodes(e,{textAlign:"justify"},{match:function(t){return ff.isElement(t)&&!e.isInline(t)}})},t}(pW),mW={renderStyle:function(e,t){if(!ff.isElement(e))return t;var n=e.textAlign,r=t;return n&&MM(r,{textAlign:n}),r},styleToHtml:function(e,t){if(!ff.isElement(e))return t;var n=e.textAlign;if(!n)return t;var r=wp(t);return r.css("text-align",n),aL(r)},parseStyleHtml:function(e,t,n){var r=wp(e);if(!ff.isElement(t))return t;var o=t,i=sL(r,"text-align");return i&&(o.textAlign=i),o},menus:[{key:"justifyLeft",factory:function(){return new hW}},{key:"justifyRight",factory:function(){return new gW}},{key:"justifyCenter",factory:function(){return new vW}},{key:"justifyJustify",factory:function(){return new yW}}]},bW=function(){function e(){this.title=J_("lineHeight.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M964 788a8 8 0 0 1 8 8v98a8 8 0 0 1-8 8H438a8 8 0 0 1-8-8v-98a8 8 0 0 1 8-8h526zM198.93 144.306c6.668-5.798 16.774-5.094 22.573 1.574l122.26 140.582a16 16 0 0 1 3.927 10.5c0 8.836-7.164 16-16 16h-61.8a8 8 0 0 0-8 8v390.077h69.819a16 16 0 0 1 10.502 3.928c6.666 5.8 7.37 15.906 1.57 22.573L221.476 878.123a16 16 0 0 1-1.57 1.57c-6.668 5.8-16.774 5.097-22.574-1.57L75.051 737.538a16 16 0 0 1-3.928-10.5c0-8.837 7.163-16 16-16h69.822V312.96H87.127a16 16 0 0 1-10.502-3.928c-6.666-5.8-7.37-15.906-1.57-22.573l122.303-140.582a16 16 0 0 1 1.572-1.572zM964 465a8 8 0 0 1 8 8v98a8 8 0 0 1-8 8H438a8 8 0 0 1-8-8v-98a8 8 0 0 1 8-8h526z m0-323a8 8 0 0 1 8 8v98a8 8 0 0 1-8 8H438a8 8 0 0 1-8-8v-98a8 8 0 0 1 8-8h526z"></path></svg>',this.tag="select",this.width=80}return e.prototype.getOptions=function(e){var t=[],n=e.getMenuConfig("lineHeight").lineHeightList,r=void 0===n?[]:n;t.push({text:J_("lineHeight.default"),value:""}),r.forEach((function(e){t.push({text:e,value:e})}));var o=this.getValue(e);return t.forEach((function(e){e.value===o?e.selected=!0:delete e.selected})),t},e.prototype.getMatchNode=function(e){var t=vL(yf.nodes(e,{match:function(e){var t=gO.getNodeType(e);return!!t.startsWith("header")||!!["paragraph","blockquote","list-item"].includes(t)},universal:!0,mode:"highest"}),1)[0];return null==t?null:t[0]},e.prototype.isActive=function(e){return!1},e.prototype.getValue=function(e){var t=this.getMatchNode(e);return null==t?"":ff.isElement(t)&&t.lineHeight||""},e.prototype.isDisabled=function(e){return null==e.selection||null==this.getMatchNode(e)},e.prototype.exec=function(e,t){ad.setNodes(e,{lineHeight:t.toString()},{mode:"highest"})},e}(),wW={renderStyle:function(e,t){if(!ff.isElement(e))return t;var n=e.lineHeight,r=t;return n&&MM(r,{lineHeight:n}),r},styleToHtml:function(e,t){if(!ff.isElement(e))return t;var n=e.lineHeight;if(!n)return t;var r=wp(t);return r.css("line-height",n),aL(r)},parseStyleHtml:function(e,t,n){var r=wp(e);if(!ff.isElement(t))return t;var o=t,i=n.getMenuConfig("lineHeight").lineHeightList,a=void 0===i?[]:i,u=sL(r,"line-height");return u&&a.includes(u)&&(o.lineHeight=u),o},menus:[{key:"lineHeight",factory:function(){return new bW},config:{lineHeightList:["1","1.15","1.5","2","2.5","3"]}}]},EW=function(){function e(){this.title=J_("undo.redo"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M0.00032 576a510.72 510.72 0 0 0 173.344 384l84.672-96A383.136 383.136 0 0 1 128.00032 576C128.00032 363.936 299.93632 192 512.00032 192c106.048 0 202.048 42.976 271.52 112.48L640.00032 448h384V64l-149.984 149.984A510.272 510.272 0 0 0 512.00032 64C229.21632 64 0.00032 293.216 0.00032 576z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return null==e.selection},e.prototype.exec=function(e,t){"function"==typeof e.redo&&e.redo()},e}(),AW=function(){function e(){this.title=J_("undo.undo"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M512 64A510.272 510.272 0 0 0 149.984 213.984L0.032 64v384h384L240.512 304.48A382.784 382.784 0 0 1 512.032 192c212.064 0 384 171.936 384 384 0 114.688-50.304 217.632-130.016 288l84.672 96a510.72 510.72 0 0 0 173.344-384c0-282.784-229.216-512-512-512z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return null==e.selection},e.prototype.exec=function(e,t){"function"==typeof e.undo&&e.undo()},e}(),SW={menus:[{key:"redo",factory:function(){return new EW}},{key:"undo",factory:function(){return new AW}}]},CW={type:"divider",renderElem:function(e,t,n){return Uh("div",{props:{contentEditable:!1,className:"w-e-textarea-divider"},dataset:{selected:gO.isNodeSelected(n,e)?"true":""},style:{},on:{mousedown:function(e){return e.preventDefault()}}},[Uh("hr")])}},xW=function(){function e(){this.title=J_("divider.title"),this.iconSvg='<svg viewBox="0 0 1092 1024"><path d="M0 51.2m51.2 0l989.866667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-989.866667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path><path d="M0 460.8m51.2 0l170.666667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-170.666667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path><path d="M819.2 460.8m51.2 0l170.666667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-170.666667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path><path d="M409.6 460.8m51.2 0l170.666667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-170.666667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path><path d="M0 870.4m51.2 0l989.866667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-989.866667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return null==e.selection||!!gO.getSelectedElems(e).some((function(t){if(e.isVoid(t))return!0;var n=gO.getNodeType(t);return"table"===n||"pre"===n||void 0}))},e.prototype.exec=function(e,t){ad.insertNodes(e,{type:"divider",children:[{text:""}]},{mode:"highest"})},e}(),DW={renderElems:[CW],elemsToHtml:[{type:"divider",elemToHtml:function(e,t){return"<hr/>"}}],parseElemsHtml:[{selector:"hr:not([data-w-e-type])",parseElemHtml:function(e,t,n){return{type:"divider",children:[{text:""}]}}}],menus:[{key:"divider",factory:function(){return new xW}}],editorPlugin:function(e){var t=e.isVoid,n=e.normalizeNode,r=e;return r.isVoid=function(e){return"divider"===e.type||t(e)},r.normalizeNode=function(e){var t=vL(e,2),o=t[0],i=t[1];if("divider"!==gO.getNodeType(o))return n([o,i]);gO.isLastNode(r,o)&&ad.insertNodes(r,gO.genEmptyParagraph(),{at:[i[0]+1]})},r}},OW=pR.map;qN({target:"Array",proto:!0,forced:!gR("map")},{map:function(e){return OW(this,e,arguments.length>1?arguments[1]:void 0)}});var kW=LP([].join),BW=VP!=Object,TW=BL("join",",");qN({target:"Array",proto:!0,forced:BW||!TW},{join:function(e){return kW(GP(this),void 0===e?",":e)}});var FW=function(){function e(){this.title=J_("codeBlock.title"),this.iconSvg='<svg viewBox="0 0 1280 1024"><path d="M832 736l96 96 320-320L928 192l-96 96 224 224zM448 288l-96-96L32 512l320 320 96-96-224-224zM701.312 150.528l69.472 18.944-192 704.032-69.472-18.944 192-704.032z"></path></svg>',this.tag="button"}return e.prototype.getSelectCodeElem=function(e){var t=gO.getSelectedNodeByType(e,"code");if(null==t)return null;var n=gO.getParentNode(e,t);return null==n||"pre"!==gO.getNodeType(n)?null:t},e.prototype.getValue=function(e){var t=this.getSelectCodeElem(e);return null==t?"":t.language||""},e.prototype.isActive=function(e){return!!this.getSelectCodeElem(e)},e.prototype.isDisabled=function(e){if(null==e.selection)return!0;var t=gO.getSelectedElems(e);return!!t.some((function(t){return e.isVoid(t)}))||!t.some((function(e){var t=gO.getNodeType(e);if("pre"===t||"paragraph"===t)return!0}))},e.prototype.exec=function(e,t){this.isActive(e)?this.changeToPlainText(e):this.changeToCodeBlock(e,t.toString())},e.prototype.changeToPlainText=function(e){var t=this.getSelectCodeElem(e);if(null!=t){var n=Sf.string(t);ad.removeNodes(e,{mode:"highest"});var r=n.split("\n").map((function(e){return{type:"paragraph",children:[{text:e}]}}));ad.insertNodes(e,r,{mode:"highest"})}},e.prototype.changeToCodeBlock=function(e,t){var n,r,o=[],i=yf.nodes(e,{match:function(t){return e.children.includes(t)},universal:!0});try{for(var a=gL(i),u=a.next();!u.done;u=a.next()){var s=vL(u.value,1)[0];s&&o.push(Sf.string(s))}}catch(e){n={error:e}}finally{try{u&&!u.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}ad.removeNodes(e,{mode:"highest"});var c={type:"pre",children:[{type:"code",language:t,children:[{text:o.join("\n")}]}]};ad.insertNodes(e,c,{mode:"highest"})},e}(),_W={key:"codeBlock",factory:function(){return new FW}};qN({target:"String",proto:!0,forced:AL("anchor")},{anchor:function(e){return EL(this,"a","name",e)}}),aI("match",(function(e,t,n){return[function(t){var n=WP(this),r=null==t?void 0:dj(t,e);return r?kP(r,t,n):new RegExp(t)[e](wR(n))},function(e){var r=Hj(this),o=wR(e),i=n(t,r,o);if(i.done)return i.value;if(!r.global)return EI(r,o);var a=r.unicode;r.lastIndex=0;for(var u,s=[],c=0;null!==(u=EI(r,o));){var l=wR(u[0]);s[c]=l,""===l&&(r.lastIndex=dI(o,SN(r.lastIndex),a)),c++}return 0===c?null:s}]}));var PW={selector:"pre:not([data-w-e-type])",parseElemHtml:function(e,t,n){var r=wp(e);return 0===(t=t.filter((function(e){return"code"===gO.getNodeType(e)}))).length&&(t=[{type:"code",language:"",children:[{text:r[0].textContent||""}]}]),{type:"pre",children:t.filter((function(e){return"code"===gO.getNodeType(e)}))}}},jW={menus:[_W],editorPlugin:function(e){var t=e.insertBreak,n=e.normalizeNode,r=e.insertData;e.insertNode;var o=e;return o.insertBreak=function(){var e=gO.getSelectedNodeByType(o,"code");if(null!=e){var n=function(e,t){var n=t.selection;if(null==n)return"";var r=Sf.string(e),o=n.anchor.offset,i=r.slice(0,o).split("\n"),a=i.length;return 0===a?"":i[a-1]}(e,o);if(n){var r=n.match(/^\s+/);if(null!=r&&null!=r[0]){var i=r[0];return void o.insertText("\n"+i)}}o.insertText("\n")}else t()},o.normalizeNode=function(e){var t=vL(e,2),r=t[0],i=t[1],a=gO.getNodeType(r);return"code"===a&&i.length<=1&&ad.setNodes(o,{type:"paragraph"},{at:i}),"pre"===a&&(gO.isLastNode(o,r)&&ad.insertNodes(o,gO.genEmptyParagraph(),{at:[i[0]+1]}),"code"!==gO.getNodeType(r.children[0])&&(ad.unwrapNodes(o),ad.setNodes(o,{type:"paragraph"},{mode:"highest"}))),n([r,i])},o.insertData=function(e){if(null!=gO.getSelectedNodeByType(o,"code")){var t=e.getData("text/plain");yf.insertText(o,t)}else r(e)},o},renderElems:[{type:"pre",renderElem:function(e,t,n){return cg("pre",null,t)}},{type:"code",renderElem:function(e,t,n){return cg("code",null,t)}}],elemsToHtml:[{type:"code",elemToHtml:function(e,t){return"<code>"+t+"</code>"}},{type:"pre",elemToHtml:function(e,t){return"<pre>"+t+"</pre>"}}],preParseHtml:[{selector:"pre>code",preParseHtml:function(e){var t=wp(e);if("code"!==uL(t))return e;var n=t.find("xmp");if(0===n.length)return e;var r=n.text();return n.remove(),t.text(r),t[0]}}],parseElemsHtml:[{selector:"pre:not([data-w-e-type])>code",parseElemHtml:function(e,t,n){return{type:"code",language:"",children:[{text:wp(e)[0].textContent||""}]}}},PW]},NW=function(){function e(){this.title=J_("fullScreen.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M133.705143 335.433143V133.851429h201.581714a29.622857 29.622857 0 0 0 29.622857-29.549715V68.754286a29.622857 29.622857 0 0 0-29.622857-29.622857H61.732571A22.893714 22.893714 0 0 0 38.765714 62.025143V335.725714c0 16.310857 13.238857 29.622857 29.622857 29.622857h35.547429a29.842286 29.842286 0 0 0 29.696-29.842285zM690.980571 133.851429h201.581715v201.654857c0 16.310857 13.238857 29.549714 29.622857 29.549714h35.547428a29.622857 29.622857 0 0 0 29.549715-29.549714V61.952a22.893714 22.893714 0 0 0-22.820572-22.893714h-273.554285a29.622857 29.622857 0 0 0-29.549715 29.622857v35.547428c0 16.310857 13.238857 29.696 29.622857 29.696zM335.286857 892.781714H133.705143V691.2a29.622857 29.622857 0 0 0-29.622857-29.622857H68.534857a29.622857 29.622857 0 0 0-29.549714 29.622857v273.554286c0 12.653714 10.24 22.893714 22.820571 22.893714h273.554286a29.622857 29.622857 0 0 0 29.696-29.622857v-35.547429a29.769143 29.769143 0 0 0-29.769143-29.696z m557.348572-201.581714v201.581714H690.907429a29.622857 29.622857 0 0 0-29.622858 29.622857v35.547429c0 16.310857 13.238857 29.622857 29.622858 29.622857h273.554285c12.580571 0 22.893714-10.313143 22.893715-22.893714V691.2a29.622857 29.622857 0 0 0-29.622858-29.622857h-35.547428a29.622857 29.622857 0 0 0-29.696 29.622857z"></path></svg>',this.tag="button",this.alwaysEnable=!0}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return e.isFullScreen},e.prototype.isDisabled=function(e){return!1},e.prototype.exec=function(e,t){e.isFullScreen?e.unFullScreen():e.fullScreen()},e}(),RW={menus:[{key:"fullScreen",factory:function(){return new NW}}]},IW=function(){function e(){this.title=J_("common.enter"),this.iconSvg='<svg viewBox="0 0 1255 1024"><path d="M1095.111111 731.477333h-625.777778V1024L0 658.318222 469.333333 292.408889v292.636444h625.777778V0h156.444445v731.477333z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!!Nf.isExpanded(t)},e.prototype.exec=function(e,t){var n=e.selection;if(null!=n){var r=[n.anchor.path[0]];ad.insertNodes(e,{type:"paragraph",children:[{text:""}]},{at:r}),e.select(yf.start(e,r))}},e}(),LW=[GL,qM,uW,dW,mW,wW,Uz,DW,i$,dz,jW,r$,jM,mL,Gz,SW,RW,{menus:[{key:"enter",factory:function(){return new IW}}]}];K_("en",{listModule:{unOrderedList:"Unordered list",orderedList:"Ordered list"}}),K_("zh-CN",{listModule:{unOrderedList:"æ åºåè¡¨",orderedList:"æåºåè¡¨"}});var MW="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function zW(e){var t={exports:{}};return e(t,t.exports),t.exports}var $W,HW,UW=function(e){return e&&e.Math==Math&&e},VW=UW("object"==typeof globalThis&&globalThis)||UW("object"==typeof window&&window)||UW("object"==typeof self&&self)||UW("object"==typeof MW&&MW)||function(){return this}()||Function("return this")(),qW=Function.prototype,WW=qW.bind,GW=qW.call,KW=WW&&WW.bind(GW),YW=WW?function(e){return e&&KW(GW,e)}:function(e){return e&&function(){return GW.apply(e,arguments)}},XW=function(e){try{return!!e()}catch(e){return!0}},JW=YW({}.toString),ZW=YW("".slice),QW=function(e){return ZW(JW(e),8,-1)},eG=VW.Object,tG=YW("".split),nG=XW((function(){return!eG("z").propertyIsEnumerable(0)}))?function(e){return"String"==QW(e)?tG(e,""):eG(e)}:eG,rG=VW.TypeError,oG=function(e){if(null==e)throw rG("Can't call method on "+e);return e},iG=function(e){return nG(oG(e))},aG=Object.defineProperty,uG=function(e,t){try{aG(VW,e,{value:t,configurable:!0,writable:!0})}catch(n){VW[e]=t}return t},sG=VW["__core-js_shared__"]||uG("__core-js_shared__",{}),cG=zW((function(e){(e.exports=function(e,t){return sG[e]||(sG[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"global",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),lG=VW.Object,fG=function(e){return lG(oG(e))},dG=YW({}.hasOwnProperty),pG=Object.hasOwn||function(e,t){return dG(fG(e),t)},hG=0,gG=Math.random(),vG=YW(1..toString),yG=function(e){return"Symbol("+(void 0===e?"":e)+")_"+vG(++hG+gG,36)},mG=function(e){return"function"==typeof e},bG=function(e,t){return arguments.length<2?function(e){return mG(e)?e:void 0}(VW[e]):VW[e]&&VW[e][t]},wG=bG("navigator","userAgent")||"",EG=VW.process,AG=VW.Deno,SG=EG&&EG.versions||AG&&AG.version,CG=SG&&SG.v8;CG&&(HW=($W=CG.split("."))[0]>0&&$W[0]<4?1:+($W[0]+$W[1])),!HW&&wG&&(!($W=wG.match(/Edge\/(\d+)/))||$W[1]>=74)&&($W=wG.match(/Chrome\/(\d+)/))&&(HW=+$W[1]);var xG,DG=HW,OG=!!Object.getOwnPropertySymbols&&!XW((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&DG&&DG<41})),kG=OG&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,BG=cG("wks"),TG=VW.Symbol,FG=TG&&TG.for,_G=kG?TG:TG&&TG.withoutSetter||yG,PG=function(e){if(!pG(BG,e)||!OG&&"string"!=typeof BG[e]){var t="Symbol."+e;OG&&pG(TG,e)?BG[e]=TG[e]:BG[e]=kG&&FG?FG(t):_G(t)}return BG[e]},jG=function(e){return"object"==typeof e?null!==e:mG(e)},NG=VW.String,RG=VW.TypeError,IG=function(e){if(jG(e))return e;throw RG(NG(e)+" is not an object")},LG=!XW((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),MG=VW.document,zG=jG(MG)&&jG(MG.createElement),$G=function(e){return zG?MG.createElement(e):{}},HG=!LG&&!XW((function(){return 7!=Object.defineProperty($G("div"),"a",{get:function(){return 7}}).a})),UG=Function.prototype.call,VG=UG.bind?UG.bind(UG):function(){return UG.apply(UG,arguments)},qG=YW({}.isPrototypeOf),WG=VW.Object,GG=kG?function(e){return"symbol"==typeof e}:function(e){var t=bG("Symbol");return mG(t)&&qG(t.prototype,WG(e))},KG=VW.String,YG=function(e){try{return KG(e)}catch(e){return"Object"}},XG=VW.TypeError,JG=function(e){if(mG(e))return e;throw XG(YG(e)+" is not a function")},ZG=function(e,t){var n=e[t];return null==n?void 0:JG(n)},QG=VW.TypeError,eK=VW.TypeError,tK=PG("toPrimitive"),nK=function(e){var t=function(e,t){if(!jG(e)||GG(e))return e;var n,r=ZG(e,tK);if(r){if(void 0===t&&(t="default"),n=VG(r,e,t),!jG(n)||GG(n))return n;throw eK("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&mG(n=e.toString)&&!jG(r=VG(n,e)))return r;if(mG(n=e.valueOf)&&!jG(r=VG(n,e)))return r;if("string"!==t&&mG(n=e.toString)&&!jG(r=VG(n,e)))return r;throw QG("Can't convert object to primitive value")}(e,t)}(e,"string");return GG(t)?t:t+""},rK=VW.TypeError,oK=Object.defineProperty,iK={f:LG?oK:function(e,t,n){if(IG(e),t=nK(t),IG(n),HG)try{return oK(e,t,n)}catch(e){}if("get"in n||"set"in n)throw rK("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},aK=Math.ceil,uK=Math.floor,sK=function(e){var t=+e;return t!=t||0===t?0:(t>0?uK:aK)(t)},cK=Math.max,lK=Math.min,fK=function(e,t){var n=sK(e);return n<0?cK(n+t,0):lK(n,t)},dK=Math.min,pK=function(e){return e>0?dK(sK(e),9007199254740991):0},hK=function(e){return pK(e.length)},gK=function(e){return function(t,n,r){var o,i=iG(t),a=hK(i),u=fK(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},vK={includes:gK(!0),indexOf:gK(!1)},yK={},mK=vK.indexOf,bK=YW([].push),wK=function(e,t){var n,r=iG(e),o=0,i=[];for(n in r)!pG(yK,n)&&pG(r,n)&&bK(i,n);for(;t.length>o;)pG(r,n=t[o++])&&(~mK(i,n)||bK(i,n));return i},EK=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],AK=Object.keys||function(e){return wK(e,EK)},SK=LG?Object.defineProperties:function(e,t){IG(e);for(var n,r=iG(t),o=AK(t),i=o.length,a=0;i>a;)iK.f(e,n=o[a++],r[n]);return e},CK=bG("document","documentElement"),xK=cG("keys"),DK=function(e){return xK[e]||(xK[e]=yG(e))},OK=DK("IE_PROTO"),kK=function(){},BK=function(e){return"<script>"+e+"<\/script>"},TK=function(e){e.write(BK("")),e.close();var t=e.parentWindow.Object;return e=null,t},FK=function(){try{xG=new ActiveXObject("htmlfile")}catch(e){}var e,t;FK="undefined"!=typeof document?document.domain&&xG?TK(xG):((t=$G("iframe")).style.display="none",CK.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(BK("document.F=Object")),e.close(),e.F):TK(xG);for(var n=EK.length;n--;)delete FK.prototype[EK[n]];return FK()};yK[OK]=!0;var _K=Object.create||function(e,t){var n;return null!==e?(kK.prototype=IG(e),n=new kK,kK.prototype=null,n[OK]=e):n=FK(),void 0===t?n:SK(n,t)},PK=PG("unscopables"),jK=Array.prototype;null==jK[PK]&&iK.f(jK,PK,{configurable:!0,value:_K(null)});var NK=function(e){jK[PK][e]=!0},RK={},IK=YW(Function.toString);mG(sG.inspectSource)||(sG.inspectSource=function(e){return IK(e)});var LK,MK,zK,$K=sG.inspectSource,HK=VW.WeakMap,UK=mG(HK)&&/native code/.test($K(HK)),VK=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},qK=LG?function(e,t,n){return iK.f(e,t,VK(1,n))}:function(e,t,n){return e[t]=n,e},WK=VW.TypeError,GK=VW.WeakMap;if(UK||sG.state){var KK=sG.state||(sG.state=new GK),YK=YW(KK.get),XK=YW(KK.has),JK=YW(KK.set);LK=function(e,t){if(XK(KK,e))throw new WK("Object already initialized");return t.facade=e,JK(KK,e,t),t},MK=function(e){return YK(KK,e)||{}},zK=function(e){return XK(KK,e)}}else{var ZK=DK("state");yK[ZK]=!0,LK=function(e,t){if(pG(e,ZK))throw new WK("Object already initialized");return t.facade=e,qK(e,ZK,t),t},MK=function(e){return pG(e,ZK)?e[ZK]:{}},zK=function(e){return pG(e,ZK)}}var QK,eY,tY,nY={set:LK,get:MK,has:zK,enforce:function(e){return zK(e)?MK(e):LK(e,{})},getterFor:function(e){return function(t){var n;if(!jG(t)||(n=MK(t)).type!==e)throw WK("Incompatible receiver, "+e+" required");return n}}},rY={}.propertyIsEnumerable,oY=Object.getOwnPropertyDescriptor,iY={f:oY&&!rY.call({1:2},1)?function(e){var t=oY(this,e);return!!t&&t.enumerable}:rY},aY=Object.getOwnPropertyDescriptor,uY={f:LG?aY:function(e,t){if(e=iG(e),t=nK(t),HG)try{return aY(e,t)}catch(e){}if(pG(e,t))return VK(!VG(iY.f,e,t),e[t])}},sY=Function.prototype,cY=LG&&Object.getOwnPropertyDescriptor,lY=pG(sY,"name"),fY={EXISTS:lY,PROPER:lY&&"something"===function(){}.name,CONFIGURABLE:lY&&(!LG||LG&&cY(sY,"name").configurable)},dY=zW((function(e){var t=fY.CONFIGURABLE,n=nY.get,r=nY.enforce,o=String(String).split("String");(e.exports=function(e,n,i,a){var u,s=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,l=!!a&&!!a.noTargetGet,f=a&&void 0!==a.name?a.name:n;mG(i)&&("Symbol("===String(f).slice(0,7)&&(f="["+String(f).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!pG(i,"name")||t&&i.name!==f)&&qK(i,"name",f),(u=r(i)).source||(u.source=o.join("string"==typeof f?f:""))),e!==VW?(s?!l&&e[n]&&(c=!0):delete e[n],c?e[n]=i:qK(e,n,i)):c?e[n]=i:uG(n,i)})(Function.prototype,"toString",(function(){return mG(this)&&n(this).source||$K(this)}))})),pY=EK.concat("length","prototype"),hY={f:Object.getOwnPropertyNames||function(e){return wK(e,pY)}},gY={f:Object.getOwnPropertySymbols},vY=YW([].concat),yY=bG("Reflect","ownKeys")||function(e){var t=hY.f(IG(e)),n=gY.f;return n?vY(t,n(e)):t},mY=function(e,t){for(var n=yY(t),r=iK.f,o=uY.f,i=0;i<n.length;i++){var a=n[i];pG(e,a)||r(e,a,o(t,a))}},bY=/#|\.prototype\./,wY=function(e,t){var n=AY[EY(e)];return n==CY||n!=SY&&(mG(t)?XW(t):!!t)},EY=wY.normalize=function(e){return String(e).replace(bY,".").toLowerCase()},AY=wY.data={},SY=wY.NATIVE="N",CY=wY.POLYFILL="P",xY=wY,DY=uY.f,OY=function(e,t){var n,r,o,i,a,u=e.target,s=e.global,c=e.stat;if(n=s?VW:c?VW[u]||uG(u,{}):(VW[u]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(a=DY(n,r))&&a.value:n[r],!xY(s?r:u+(c?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;mY(i,o)}(e.sham||o&&o.sham)&&qK(i,"sham",!0),dY(n,r,i,e)}},kY=!XW((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),BY=DK("IE_PROTO"),TY=VW.Object,FY=TY.prototype,_Y=kY?TY.getPrototypeOf:function(e){var t=fG(e);if(pG(t,BY))return t[BY];var n=t.constructor;return mG(n)&&t instanceof n?n.prototype:t instanceof TY?FY:null},PY=PG("iterator"),jY=!1;[].keys&&("next"in(tY=[].keys())?(eY=_Y(_Y(tY)))!==Object.prototype&&(QK=eY):jY=!0);var NY=null==QK||XW((function(){var e={};return QK[PY].call(e)!==e}));NY&&(QK={}),mG(QK[PY])||dY(QK,PY,(function(){return this}));var RY={IteratorPrototype:QK,BUGGY_SAFARI_ITERATORS:jY},IY=iK.f,LY=PG("toStringTag"),MY=function(e,t,n){e&&!pG(e=n?e:e.prototype,LY)&&IY(e,LY,{configurable:!0,value:t})},zY=RY.IteratorPrototype,$Y=function(){return this},HY=VW.String,UY=VW.TypeError,VY=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=YW(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return IG(n),function(e){if("object"==typeof e||mG(e))return e;throw UY("Can't set "+HY(e)+" as a prototype")}(r),t?e(n,r):n.__proto__=r,n}}():void 0),qY=fY.PROPER,WY=fY.CONFIGURABLE,GY=RY.IteratorPrototype,KY=RY.BUGGY_SAFARI_ITERATORS,YY=PG("iterator"),XY=function(){return this},JY=function(e,t,n,r,o,i,a){!function(e,t,n){var r=t+" Iterator";e.prototype=_K(zY,{next:VK(1,n)}),MY(e,r,!1),RK[r]=$Y}(n,t,r);var u,s,c,l=function(e){if(e===o&&g)return g;if(!KY&&e in p)return p[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},f=t+" Iterator",d=!1,p=e.prototype,h=p[YY]||p["@@iterator"]||o&&p[o],g=!KY&&h||l(o),v="Array"==t&&p.entries||h;if(v&&(u=_Y(v.call(new e)))!==Object.prototype&&u.next&&(_Y(u)!==GY&&(VY?VY(u,GY):mG(u[YY])||dY(u,YY,XY)),MY(u,f,!0)),qY&&"values"==o&&h&&"values"!==h.name&&(WY?qK(p,"name","values"):(d=!0,g=function(){return VG(h,this)})),o)if(s={values:l("values"),keys:i?g:l("keys"),entries:l("entries")},a)for(c in s)(KY||d||!(c in p))&&dY(p,c,s[c]);else OY({target:t,proto:!0,forced:KY||d},s);return p[YY]!==g&&dY(p,YY,g,{name:o}),RK[t]=g,s},ZY=nY.set,QY=nY.getterFor("Array Iterator"),eX=JY(Array,"Array",(function(e,t){ZY(this,{type:"Array Iterator",target:iG(e),index:0,kind:t})}),(function(){var e=QY(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values");RK.Arguments=RK.Array,NK("keys"),NK("values"),NK("entries");var tX={};tX[PG("toStringTag")]="z";var nX="[object z]"===String(tX),rX=PG("toStringTag"),oX=VW.Object,iX="Arguments"==QW(function(){return arguments}()),aX=nX?QW:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=oX(e),rX))?n:iX?QW(t):"Object"==(r=QW(t))&&mG(t.callee)?"Arguments":r},uX=nX?{}.toString:function(){return"[object "+aX(this)+"]"};nX||dY(Object.prototype,"toString",uX,{unsafe:!0});var sX=VW.String,cX=function(e){if("Symbol"===aX(e))throw TypeError("Cannot convert a Symbol value to a string");return sX(e)},lX=YW("".charAt),fX=YW("".charCodeAt),dX=YW("".slice),pX=function(e){return function(t,n){var r,o,i=cX(oG(t)),a=sK(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=fX(i,a))<55296||r>56319||a+1===u||(o=fX(i,a+1))<56320||o>57343?e?lX(i,a):r:e?dX(i,a,a+2):o-56320+(r-55296<<10)+65536}},hX={codeAt:pX(!1),charAt:pX(!0)},gX=hX.charAt,vX=nY.set,yX=nY.getterFor("String Iterator");JY(String,"String",(function(e){vX(this,{type:"String Iterator",string:cX(e),index:0})}),(function(){var e,t=yX(this),n=t.string,r=t.index;return r>=n.length?{value:void 0,done:!0}:(e=gX(n,r),t.index+=e.length,{value:e,done:!1})}));var mX=function(e,t,n){for(var r in t)dY(e,r,t[r],n);return e},bX=VW.Array,wX=Math.max,EX=hY.f,AX="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],SX={f:function(e){return AX&&"Window"==QW(e)?function(e){try{return EX(e)}catch(e){return function(e){for(var t,n,r,o,i=hK(e),a=fK(void 0,i),u=fK(i,i),s=bX(wX(u-a,0)),c=0;a<u;a++,c++)t=s,n=c,r=e[a],(o=nK(n))in t?iK.f(t,o,VK(0,r)):t[o]=r;return s.length=c,s}(AX)}}(e):EX(iG(e))}},CX=XW((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}})),xX=Object.isExtensible,DX=XW((function(){xX(1)}))||CX?function(e){return!!jG(e)&&(!CX||"ArrayBuffer"!=QW(e))&&(!xX||xX(e))}:xX,OX=!XW((function(){return Object.isExtensible(Object.preventExtensions({}))})),kX=zW((function(e){var t=iK.f,n=!1,r=yG("meta"),o=0,i=function(e){t(e,r,{value:{objectID:"O"+o++,weakData:{}}})},a=e.exports={enable:function(){a.enable=function(){},n=!0;var e=hY.f,t=YW([].splice),o={};o[r]=1,e(o).length&&(hY.f=function(n){for(var o=e(n),i=0,a=o.length;i<a;i++)if(o[i]===r){t(o,i,1);break}return o},OY({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:SX.f}))},fastKey:function(e,t){if(!jG(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!pG(e,r)){if(!DX(e))return"F";if(!t)return"E";i(e)}return e[r].objectID},getWeakData:function(e,t){if(!pG(e,r)){if(!DX(e))return!0;if(!t)return!1;i(e)}return e[r].weakData},onFreeze:function(e){return OX&&n&&DX(e)&&!pG(e,r)&&i(e),e}};yK[r]=!0})),BX=YW(YW.bind),TX=function(e,t){return JG(e),void 0===t?e:BX?BX(e,t):function(){return e.apply(t,arguments)}},FX=PG("iterator"),_X=Array.prototype,PX=PG("iterator"),jX=function(e){if(null!=e)return ZG(e,PX)||ZG(e,"@@iterator")||RK[aX(e)]},NX=VW.TypeError,RX=function(e,t,n){var r,o;IG(e);try{if(!(r=ZG(e,"return"))){if("throw"===t)throw n;return n}r=VG(r,e)}catch(e){o=!0,r=e}if("throw"===t)throw n;if(o)throw r;return IG(r),n},IX=VW.TypeError,LX=function(e,t){this.stopped=e,this.result=t},MX=LX.prototype,zX=function(e,t,n){var r,o,i,a,u,s,c,l,f=n&&n.that,d=!(!n||!n.AS_ENTRIES),p=!(!n||!n.IS_ITERATOR),h=!(!n||!n.INTERRUPTED),g=TX(t,f),v=function(e){return r&&RX(r,"normal",e),new LX(!0,e)},y=function(e){return d?(IG(e),h?g(e[0],e[1],v):g(e[0],e[1])):h?g(e,v):g(e)};if(p)r=e;else{if(!(o=jX(e)))throw IX(YG(e)+" is not iterable");if(void 0!==(l=o)&&(RK.Array===l||_X[FX]===l)){for(i=0,a=hK(e);a>i;i++)if((u=y(e[i]))&&qG(MX,u))return u;return new LX(!1)}r=function(e,t){var n=arguments.length<2?jX(e):t;if(JG(n))return IG(VG(n,e));throw NX(YG(e)+" is not iterable")}(e,o)}for(s=r.next;!(c=VG(s,r)).done;){try{u=y(c.value)}catch(e){RX(r,"throw",e)}if("object"==typeof u&&u&&qG(MX,u))return u}return new LX(!1)},$X=VW.TypeError,HX=function(e,t){if(qG(t,e))return e;throw $X("Incorrect invocation")},UX=PG("iterator"),VX=!1;try{var qX=0,WX={next:function(){return{done:!!qX++}},return:function(){VX=!0}};WX[UX]=function(){return this},Array.from(WX,(function(){throw 2}))}catch(kc){}var GX=Array.isArray||function(e){return"Array"==QW(e)},KX=function(){},YX=[],XX=bG("Reflect","construct"),JX=/^\s*(?:class|function)\b/,ZX=YW(JX.exec),QX=!JX.exec(KX),eJ=function(e){if(!mG(e))return!1;try{return XX(KX,YX,e),!0}catch(e){return!1}},tJ=!XX||XW((function(){var e;return eJ(eJ.call)||!eJ(Object)||!eJ((function(){e=!0}))||e}))?function(e){if(!mG(e))return!1;switch(aX(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return QX||!!ZX(JX,$K(e))}:eJ,nJ=PG("species"),rJ=VW.Array,oJ=function(e,t){return new(function(e){var t;return GX(e)&&(t=e.constructor,(tJ(t)&&(t===rJ||GX(t.prototype))||jG(t)&&null===(t=t[nJ]))&&(t=void 0)),void 0===t?rJ:t}(e))(0===t?0:t)},iJ=YW([].push),aJ=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=fG(s),g=nG(h),v=TX(c,l),y=hK(g),m=0,b=f||oJ,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:iJ(w,d)}else switch(e){case 4:return!1;case 7:iJ(w,d)}return i?-1:r||o?o:w}},uJ={forEach:aJ(0),map:aJ(1),filter:aJ(2),some:aJ(3),every:aJ(4),find:aJ(5),findIndex:aJ(6),filterReject:aJ(7)},sJ=kX.getWeakData,cJ=nY.set,lJ=nY.getterFor,fJ=uJ.find,dJ=uJ.findIndex,pJ=YW([].splice),hJ=0,gJ=function(e){return e.frozen||(e.frozen=new vJ)},vJ=function(){this.entries=[]},yJ=function(e,t){return fJ(e.entries,(function(e){return e[0]===t}))};vJ.prototype={get:function(e){var t=yJ(this,e);if(t)return t[1]},has:function(e){return!!yJ(this,e)},set:function(e,t){var n=yJ(this,e);n?n[1]=t:this.entries.push([e,t])},delete:function(e){var t=dJ(this.entries,(function(t){return t[0]===e}));return~t&&pJ(this.entries,t,1),!!~t}};var mJ,bJ={getConstructor:function(e,t,n,r){var o=e((function(e,o){HX(e,i),cJ(e,{type:t,id:hJ++,frozen:void 0}),null!=o&&zX(o,e[r],{that:e,AS_ENTRIES:n})})),i=o.prototype,a=lJ(t),u=function(e,t,n){var r=a(e),o=sJ(IG(t),!0);return!0===o?gJ(r).set(t,n):o[r.id]=n,e};return mX(i,{delete:function(e){var t=a(this);if(!jG(e))return!1;var n=sJ(e);return!0===n?gJ(t).delete(e):n&&pG(n,t.id)&&delete n[t.id]},has:function(e){var t=a(this);if(!jG(e))return!1;var n=sJ(e);return!0===n?gJ(t).has(e):n&&pG(n,t.id)}}),mX(i,n?{get:function(e){var t=a(this);if(jG(e)){var n=sJ(e);return!0===n?gJ(t).get(e):n?n[t.id]:void 0}},set:function(e,t){return u(this,e,t)}}:{add:function(e){return u(this,e,!0)}}),o}},wJ=nY.enforce,EJ=!VW.ActiveXObject&&"ActiveXObject"in VW,AJ=function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}},SJ=function(e,t,n){var r=-1!==e.indexOf("Map"),o=-1!==e.indexOf("Weak"),i=r?"set":"add",a=VW[e],u=a&&a.prototype,s=a,c={},l=function(e){var t=YW(u[e]);dY(u,e,"add"==e?function(e){return t(this,0===e?0:e),this}:"delete"==e?function(e){return!(o&&!jG(e))&&t(this,0===e?0:e)}:"get"==e?function(e){return o&&!jG(e)?void 0:t(this,0===e?0:e)}:"has"==e?function(e){return!(o&&!jG(e))&&t(this,0===e?0:e)}:function(e,n){return t(this,0===e?0:e,n),this})};if(xY(e,!mG(a)||!(o||u.forEach&&!XW((function(){(new a).entries().next()})))))s=n.getConstructor(t,e,r,i),kX.enable();else if(xY(e,!0)){var f=new s,d=f[i](o?{}:-0,1)!=f,p=XW((function(){f.has(1)})),h=function(){if(!VX)return!1;var e=!1;try{var t={};t[UX]=function(){return{next:function(){return{done:e=!0}}}},function(e){new a(e)}(t)}catch(e){}return e}(),g=!o&&XW((function(){for(var e=new a,t=5;t--;)e[i](t,t);return!e.has(-0)}));h||((s=t((function(e,t){HX(e,u);var n=function(e,t,n){var r,o;return VY&&mG(r=t.constructor)&&r!==n&&jG(o=r.prototype)&&o!==n.prototype&&VY(e,o),e}(new a,e,s);return null!=t&&zX(t,n[i],{that:n,AS_ENTRIES:r}),n}))).prototype=u,u.constructor=s),(p||g)&&(l("delete"),l("has"),r&&l("get")),(g||d)&&l(i),o&&u.clear&&delete u.clear}return c[e]=s,OY({global:!0,forced:s!=a},c),MY(s,e),o||n.setStrong(s,e,r),s}("WeakMap",AJ,bJ);if(UK&&EJ){mJ=bJ.getConstructor(AJ,"WeakMap",!0),kX.enable();var CJ=SJ.prototype,xJ=YW(CJ.delete),DJ=YW(CJ.has),OJ=YW(CJ.get),kJ=YW(CJ.set);mX(CJ,{delete:function(e){if(jG(e)&&!DX(e)){var t=wJ(this);return t.frozen||(t.frozen=new mJ),xJ(this,e)||t.frozen.delete(e)}return xJ(this,e)},has:function(e){if(jG(e)&&!DX(e)){var t=wJ(this);return t.frozen||(t.frozen=new mJ),DJ(this,e)||t.frozen.has(e)}return DJ(this,e)},get:function(e){if(jG(e)&&!DX(e)){var t=wJ(this);return t.frozen||(t.frozen=new mJ),DJ(this,e)?OJ(this,e):t.frozen.get(e)}return OJ(this,e)},set:function(e,t){if(jG(e)&&!DX(e)){var n=wJ(this);n.frozen||(n.frozen=new mJ),DJ(this,e)?kJ(this,e,t):n.frozen.set(e,t)}else kJ(this,e,t);return this}})}var BJ={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},TJ=$G("span").classList,FJ=TJ&&TJ.constructor&&TJ.constructor.prototype,_J=FJ===Object.prototype?void 0:FJ,PJ=PG("iterator"),jJ=PG("toStringTag"),NJ=eX.values,RJ=function(e,t){if(e){if(e[PJ]!==NJ)try{qK(e,PJ,NJ)}catch(t){e[PJ]=NJ}if(e[jJ]||qK(e,jJ,t),BJ[t])for(var n in eX)if(e[n]!==eX[n])try{qK(e,n,eX[n])}catch(t){e[n]=eX[n]}}};for(var IJ in BJ)RJ(VW[IJ]&&VW[IJ].prototype,IJ);RJ(_J,"DOMTokenList");var LJ=new WeakMap,MJ={type:"list-item",renderElem:function(e,t,n){LJ.set(e,n);var r=e,o=r.level,i=void 0===o?0:o,a=r.ordered,u={margin:"5px 0 5px "+20*i+"px"},s="";if(void 0!==a&&a){var c=function(e,t){var n=t,r=n.type,o=n.level,i=void 0===o?0:o,a=n.ordered,u=void 0!==a&&a;if(!u)return-1;var s=1,c=t,l=gO.findPath(e,c);if(0===l[0])return 1;for(;l[0]>0;){var f=Of.previous(l),d=yf.node(e,f);if(null==d)break;var p=d[0],h=p.level,g=void 0===h?0:h,v=p.type,y=p.ordered;if(v!==r)break;if(g<i)break;if(g===i){if(y!==u)break;s++}c=p,l=f}return s}(n,e);s=c+"."}else s=function(e){void 0===e&&(e=0);var t="";switch(e){case 0:t="â¢";break;case 1:t="â¦";break;default:t="âª"}return t}(i);var l=function(e){var t,n=e.children||[],r=n.length;if(0===r)return"";for(var o=0;o<r&&!t;o++){var i=n[o];Hf.isText(i)&&(t=i)}return null==t?"":t.color||""}(e);return cg("div",{style:u},cg("span",{contentEditable:!1,style:{marginRight:"0.5em",color:l},"data-w-e-reserve":!0},s),cg("span",null,t))}},zJ=function(e,t){return zJ=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},zJ(e,t)};function $J(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e}zJ(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function HJ(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function UJ(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}function VJ(e){return yf.nodes(e,{at:e.selection||void 0,match:function(t){return 1===gO.findPath(e,t).length}})}var qJ=vK.includes;OY({target:"Array",proto:!0},{includes:function(e){return qJ(this,e,arguments.length>1?arguments[1]:void 0)}}),NK("includes");var WJ,GJ,KJ=function(){var e=IG(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},YJ=VW.RegExp,XJ=XW((function(){var e=YJ("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),JJ=XJ||XW((function(){return!YJ("a","y").sticky})),ZJ={BROKEN_CARET:XJ||XW((function(){var e=YJ("^r","gy");return e.lastIndex=2,null!=e.exec("str")})),MISSED_STICKY:JJ,UNSUPPORTED_Y:XJ},QJ=VW.RegExp,eZ=XW((function(){var e=QJ(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)})),tZ=VW.RegExp,nZ=XW((function(){var e=tZ("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")})),rZ=nY.get,oZ=cG("native-string-replace",String.prototype.replace),iZ=RegExp.prototype.exec,aZ=iZ,uZ=YW("".charAt),sZ=YW("".indexOf),cZ=YW("".replace),lZ=YW("".slice),fZ=(GJ=/b*/g,VG(iZ,WJ=/a/,"a"),VG(iZ,GJ,"a"),0!==WJ.lastIndex||0!==GJ.lastIndex),dZ=ZJ.BROKEN_CARET,pZ=void 0!==/()??/.exec("")[1];(fZ||pZ||dZ||eZ||nZ)&&(aZ=function(e){var t,n,r,o,i,a,u,s=this,c=rZ(s),l=cX(e),f=c.raw;if(f)return f.lastIndex=s.lastIndex,t=VG(aZ,f,l),s.lastIndex=f.lastIndex,t;var d=c.groups,p=dZ&&s.sticky,h=VG(KJ,s),g=s.source,v=0,y=l;if(p&&(h=cZ(h,"y",""),-1===sZ(h,"g")&&(h+="g"),y=lZ(l,s.lastIndex),s.lastIndex>0&&(!s.multiline||s.multiline&&"\n"!==uZ(l,s.lastIndex-1))&&(g="(?: "+g+")",y=" "+y,v++),n=new RegExp("^(?:"+g+")",h)),pZ&&(n=new RegExp("^"+g+"$(?!\\s)",h)),fZ&&(r=s.lastIndex),o=VG(iZ,p?n:s,y),p?o?(o.input=lZ(o.input,v),o[0]=lZ(o[0],v),o.index=s.lastIndex,s.lastIndex+=o[0].length):s.lastIndex=0:fZ&&o&&(s.lastIndex=s.global?o.index+o[0].length:r),pZ&&o&&o.length>1&&VG(oZ,o[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&d)for(o.groups=a=_K(null),i=0;i<d.length;i++)a[(u=d[i])[0]]=o[u[1]];return o});var hZ=aZ;OY({target:"RegExp",proto:!0,forced:/./.exec!==hZ},{exec:hZ});var gZ=function(){function e(){this.type="list-item",this.tag="button"}return e.prototype.getListNode=function(e){var t=this.type;return gO.getSelectedNodeByType(e,t)},e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){var t=this.getListNode(e);if(null==t)return!1;var n=t.ordered;return(void 0!==n&&n)===this.ordered},e.prototype.isDisabled=function(e){return null==e.selection||!!gO.getSelectedElems(e).some((function(t){if(yf.isVoid(e,t)&&yf.isBlock(e,t))return!0;var n=t.type;return!!["pre","code","table"].includes(n)||void 0}))},e.prototype.exec=function(e,t){this.isActive(e)?ad.setNodes(e,{type:"paragraph",ordered:void 0,level:void 0}):ad.setNodes(e,{type:"list-item",ordered:this.ordered,indent:void 0})},e}(),vZ=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.ordered=!1,t.title=J_("listModule.unOrderedList"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M384 64h640v128H384V64z m0 384h640v128H384v-128z m0 384h640v128H384v-128zM0 128a128 128 0 1 1 256 0 128 128 0 0 1-256 0z m0 384a128 128 0 1 1 256 0 128 128 0 0 1-256 0z m0 384a128 128 0 1 1 256 0 128 128 0 0 1-256 0z"></path></svg>',t}return $J(t,e),t}(gZ),yZ=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.ordered=!0,t.title=J_("listModule.orderedList"),t.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M384 832h640v128H384z m0-384h640v128H384z m0-384h640v128H384zM192 0v256H128V64H64V0zM128 526.016v50.016h128v64H64v-146.016l128-60V384H64v-64h192v146.016zM256 704v320H64v-64h128v-64H64v-64h128v-64H64v-64z"></path></svg>',t}return $J(t,e),t}(gZ),mZ={key:"bulletedList",factory:function(){return new vZ}},bZ={key:"numberedList",factory:function(){return new yZ}},wZ=[],EZ={type:"list-item",elemToHtml:function(e,t){var n="",r="",o=e.ordered,i=void 0!==o&&o?"ol":"ul",a=function(e){var t=LJ.get(e);if(null==t)return 0;var n=e,r=n.type,o=n.ordered,i=void 0!==o&&o,a=n.level,u=void 0===a?0:a,s=gO.findPath(t,e);if(0===s[0])return u+1;var c=Of.previous(s),l=yf.node(t,c);if(!l)return 0;var f=UJ(l,1)[0];if(gO.getNodeType(f)!==r)return u+1;var d=f,p=d.ordered,h=void 0!==p&&p,g=d.level,v=void 0===g?0:g;return v<u?u-v:v>u?0:v===u?h===i?0:1:0}(e);if(a>0)for(var u=0;u<a;u++)n+="<"+i+">",wZ.push(i);var s=function(e){var t=LJ.get(e);if(null==t)return 0;var n=e,r=n.type,o=n.ordered,i=void 0!==o&&o,a=n.level,u=void 0===a?0:a,s=gO.findPath(t,e);if(s[0]===t.children.length-1)return u+1;var c=Of.next(s),l=yf.node(t,c);if(!l)return 0;var f=UJ(l,1)[0];if(gO.getNodeType(f)!==r)return u+1;var d=f,p=d.ordered,h=void 0!==p&&p,g=d.level,v=void 0===g?0:g;return v<u?u-v:v>u?0:v===u?h===i?0:1:0}(e);if(s>0)for(u=0;u<s;u++)r+="</"+wZ.pop()+">";return{html:"<li>"+t+"</li>",prefix:n,suffix:r}}},AZ=PG("species"),SZ=uJ.filter,CZ=DG>=51||!XW((function(){var e=[];return(e.constructor={})[AZ]=function(){return{foo:1}},1!==e.filter(Boolean).foo}));OY({target:"Array",proto:!0,forced:!CZ},{filter:function(e){return SZ(this,e,arguments.length>1?arguments[1]:void 0)}});var xZ=Function.prototype,DZ=xZ.apply,OZ=xZ.bind,kZ=xZ.call,BZ="object"==typeof Reflect&&Reflect.apply||(OZ?kZ.bind(DZ):function(){return kZ.apply(DZ,arguments)}),TZ=(PG("species"),RegExp.prototype),FZ=hX.charAt,_Z=function(e,t,n){return t+(n?FZ(e,t).length:1)},PZ=Math.floor,jZ=YW("".charAt),NZ=YW("".replace),RZ=YW("".slice),IZ=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,LZ=/\$([$&'`]|\d{1,2})/g,MZ=function(e,t,n,r,o,i){var a=n+e.length,u=r.length,s=LZ;return void 0!==o&&(o=fG(o),s=IZ),NZ(i,s,(function(i,s){var c;switch(jZ(s,0)){case"$":return"$";case"&":return e;case"`":return RZ(t,0,n);case"'":return RZ(t,a);case"<":c=o[RZ(s,1,-1)];break;default:var l=+s;if(0===l)return i;if(l>u){var f=PZ(l/10);return 0===f?i:f<=u?void 0===r[f-1]?jZ(s,1):r[f-1]+jZ(s,1):i}c=r[l-1]}return void 0===c?"":c}))},zZ=VW.TypeError,$Z=function(e,t){var n=e.exec;if(mG(n)){var r=VG(n,e,t);return null!==r&&IG(r),r}if("RegExp"===QW(e))return VG(hZ,e,t);throw zZ("RegExp#exec called on incompatible receiver")},HZ=PG("replace"),UZ=Math.max,VZ=Math.min,qZ=YW([].concat),WZ=YW([].push),GZ=YW("".indexOf),KZ=YW("".slice),YZ="$0"==="a".replace(/./,"$0"),XZ=!!/./[HZ]&&""===/./[HZ]("a","$0");!function(e,t,n){var r=PG(e),o=!XW((function(){var t={};return t[r]=function(){return 7},7!=""[e](t)})),i=o&&!XW((function(){var e=!1,t=/a/;return t.exec=function(){return e=!0,null},t[r](""),!e}));if(!o||!i||n){var a=YW(/./[r]),u=function(e,t,n){var r=XZ?"$":"$0";return[function(e,n){var r=oG(this),o=null==e?void 0:ZG(e,HZ);return o?VG(o,e,r,n):VG(t,cX(r),e,n)},function(e,o){var i=IG(this),a=cX(e);if("string"==typeof o&&-1===GZ(o,r)&&-1===GZ(o,"$<")){var u=n(t,i,a,o);if(u.done)return u.value}var s=mG(o);s||(o=cX(o));var c=i.global;if(c){var l=i.unicode;i.lastIndex=0}for(var f=[];;){var d=$Z(i,a);if(null===d)break;if(WZ(f,d),!c)break;""===cX(d[0])&&(i.lastIndex=_Z(a,pK(i.lastIndex),l))}for(var p,h="",g=0,v=0;v<f.length;v++){for(var y=cX((d=f[v])[0]),m=UZ(VZ(sK(d.index),a.length),0),b=[],w=1;w<d.length;w++)WZ(b,void 0===(p=d[w])?p:String(p));var E=d.groups;if(s){var A=qZ([y],b,m,a);void 0!==E&&WZ(A,E);var S=cX(BZ(o,void 0,A))}else S=MZ(y,a,m,b,E,o);m>=g&&(h+=KZ(a,g,m)+S,g=m+y.length)}return h+KZ(a,g)}]}(0,""[e],(function(e,t,n,r,i){var u=YW(e),s=t.exec;return s===hZ||s===TZ.exec?o&&!i?{done:!0,value:a(t,n,r)}:{done:!0,value:u(n,t,r)}:{done:!1}}));dY(String.prototype,e,u[0]),dY(TZ,r,u[1])}}("replace",0,!!XW((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!YZ||XZ);var JZ=VW.TypeError,ZZ=function(e,t,n,r,o,i,a,u){for(var s,c,l=o,f=0,d=!!a&&TX(a,u);f<r;){if(f in n){if(s=d?d(n[f],f,t):n[f],i>0&&GX(s))c=hK(s),l=ZZ(e,t,s,c,l,i-1)-1;else{if(l>=9007199254740991)throw JZ("Exceed the acceptable array length");e[l]=s}l++}f++}return l},QZ=ZZ;function eQ(e){return e.length?e[0].tagName.toLowerCase():""}OY({target:"Array",proto:!0},{flat:function(){var e=arguments.length?arguments[0]:void 0,t=fG(this),n=hK(t),r=oJ(t,0);return r.length=QZ(r,t,t,n,0,void 0===e?1:sK(e)),r}}),NK("flat"),OY({global:!0},{globalThis:VW}),$p&&(wp.fn.append=$p),Cp&&(wp.fn.attr=Cp),Up&&(wp.fn.parent=Up);var tQ={renderElems:[MJ],editorPlugin:function(e){var t=e.deleteBackward,n=e.handleTab,r=e.normalizeNode,o=e;return o.deleteBackward=function(e){var n=o.selection;if(null!=n)if(Nf.isExpanded(n))t(e);else{var r=gO.getSelectedNodeByType(o,"list-item");if(null!=r)if(0!==n.focus.offset)t(e);else{var i=r.level,a=void 0===i?0:i;a>0?ad.setNodes(o,{level:a-1}):ad.setNodes(o,{type:"paragraph",ordered:void 0,level:void 0})}else t(e)}else t(e)},o.handleTab=function(){var e,t,r,i,a=o.selection;if(null!=a){if(Nf.isCollapsed(a)){var u=gO.getSelectedNodeByType(o,"list-item");if(null==u)return void n();if(0===a.focus.offset){var s=u.level,c=void 0===s?0:s;return void ad.setNodes(o,{level:c+1})}}if(Nf.isExpanded(a)){var l=0,f=!1;try{for(var d=HJ(VJ(o)),p=d.next();!p.done;p=d.next()){var h=UJ(p.value,1)[0];"list-item"===gO.getNodeType(h)?l++:f=!0}}catch(t){e={error:t}}finally{try{p&&!p.done&&(t=d.return)&&t.call(d)}finally{if(e)throw e.error}}if(f||l<=1)return void n();try{for(var g=HJ(VJ(o)),v=g.next();!v.done;v=g.next()){var y=UJ(v.value,2),m=(h=y[0],y[1]),b=h.level;c=void 0===b?0:b,ad.setNodes(o,{level:c+1},{at:m})}}catch(e){r={error:e}}finally{try{v&&!v.done&&(i=g.return)&&i.call(g)}finally{if(r)throw r.error}}}else n()}else n()},o.normalizeNode=function(e){var t=UJ(e,2),n=t[0],i=t[1],a=gO.getNodeType(n);return"bulleted-list"!==a&&"numbered-list"!==a||ad.unwrapNodes(o,{at:i}),r([n,i])},o},menus:[mZ,bZ],elemsToHtml:[EZ],parseElemsHtml:[{selector:"ul:not([data-w-e-type]),ol:not([data-w-e-type])",parseElemHtml:function(e,t,n){return t.flat(1/0)}},{selector:"li:not([data-w-e-type])",parseElemHtml:function(e,t,n){var r=wp(e);0===(t=t.filter((function(e){return!!Hf.isText(e)||!!n.isInline(e)}))).length&&(t=[{text:r.text().replace(/\s+/gm," ")}]);var o=function(e){return"ol"===eQ(e.parent())}(r),i=function(e){for(var t=0,n=e.parent(),r=eQ(n);"ul"===r||"ol"===r;)r=eQ(n=n.parent()),t++;return t-1}(r);return{type:"list-item",ordered:o,level:i,children:t}}}]},nQ=o((function(e,t){var n="__lodash_hash_undefined__",o=9007199254740991,i="[object Arguments]",a="[object Array]",u="[object Boolean]",s="[object Date]",c="[object Error]",l="[object Function]",f="[object Map]",d="[object Number]",p="[object Object]",h="[object Promise]",g="[object RegExp]",v="[object Set]",y="[object String]",m="[object WeakMap]",b="[object ArrayBuffer]",w="[object DataView]",E=/^\[object .+?Constructor\]$/,A=/^(?:0|[1-9]\d*)$/,S={};S["[object Float32Array]"]=S["[object Float64Array]"]=S["[object Int8Array]"]=S["[object Int16Array]"]=S["[object Int32Array]"]=S["[object Uint8Array]"]=S["[object Uint8ClampedArray]"]=S["[object Uint16Array]"]=S["[object Uint32Array]"]=!0,S[i]=S[a]=S[b]=S[u]=S[w]=S[s]=S[c]=S[l]=S[f]=S[d]=S[p]=S[g]=S[v]=S[y]=S[m]=!1;var C="object"==typeof r&&r&&r.Object===Object&&r,x="object"==typeof self&&self&&self.Object===Object&&self,D=C||x||Function("return this")(),O=t&&!t.nodeType&&t,k=O&&e&&!e.nodeType&&e,B=k&&k.exports===O,T=B&&C.process,F=function(){try{return T&&T.binding&&T.binding("util")}catch(e){}}(),_=F&&F.isTypedArray;function P(e,t){for(var n=-1,r=null==e?0:e.length;++n<r;)if(t(e[n],n,e))return!0;return!1}function j(e){var t=-1,n=Array(e.size);return e.forEach((function(e,r){n[++t]=[r,e]})),n}function N(e){var t=-1,n=Array(e.size);return e.forEach((function(e){n[++t]=e})),n}var R=Array.prototype,I=Function.prototype,L=Object.prototype,M=D["__core-js_shared__"],z=I.toString,$=L.hasOwnProperty,H=function(){var e=/[^.]+$/.exec(M&&M.keys&&M.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),U=L.toString,V=RegExp("^"+z.call($).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),q=B?D.Buffer:void 0,W=D.Symbol,G=D.Uint8Array,K=L.propertyIsEnumerable,Y=R.splice,X=W?W.toStringTag:void 0,J=Object.getOwnPropertySymbols,Z=q?q.isBuffer:void 0,Q=function(e,t){return function(n){return e(t(n))}}(Object.keys,Object),ee=xe(D,"DataView"),te=xe(D,"Map"),ne=xe(D,"Promise"),re=xe(D,"Set"),oe=xe(D,"WeakMap"),ie=xe(Object,"create"),ae=Be(ee),ue=Be(te),se=Be(ne),ce=Be(re),le=Be(oe),fe=W?W.prototype:void 0,de=fe?fe.valueOf:void 0;function pe(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function he(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function ge(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function ve(e){var t=-1,n=null==e?0:e.length;for(this.__data__=new ge;++t<n;)this.add(e[t])}function ye(e){var t=this.__data__=new he(e);this.size=t.size}function me(e,t){for(var n=e.length;n--;)if(Te(e[n][0],t))return n;return-1}function be(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":X&&X in Object(e)?function(e){var t=$.call(e,X),n=e[X];try{e[X]=void 0;var r=!0}catch(e){}var o=U.call(e);return r&&(t?e[X]=n:delete e[X]),o}(e):function(e){return U.call(e)}(e)}function we(e){return Ie(e)&&be(e)==i}function Ee(e,t,n,r,o){return e===t||(null==e||null==t||!Ie(e)&&!Ie(t)?e!=e&&t!=t:function(e,t,n,r,o,l){var h=_e(e),m=_e(t),E=h?a:Oe(e),A=m?a:Oe(t),S=(E=E==i?p:E)==p,C=(A=A==i?p:A)==p,x=E==A;if(x&&Pe(e)){if(!Pe(t))return!1;h=!0,S=!1}if(x&&!S)return l||(l=new ye),h||Le(e)?Ae(e,t,n,r,o,l):function(e,t,n,r,o,i,a){switch(n){case w:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case b:return!(e.byteLength!=t.byteLength||!i(new G(e),new G(t)));case u:case s:case d:return Te(+e,+t);case c:return e.name==t.name&&e.message==t.message;case g:case y:return e==t+"";case f:var l=j;case v:var p=1&r;if(l||(l=N),e.size!=t.size&&!p)return!1;var h=a.get(e);if(h)return h==t;r|=2,a.set(e,t);var m=Ae(l(e),l(t),r,o,i,a);return a.delete(e),m;case"[object Symbol]":if(de)return de.call(e)==de.call(t)}return!1}(e,t,E,n,r,o,l);if(!(1&n)){var D=S&&$.call(e,"__wrapped__"),O=C&&$.call(t,"__wrapped__");if(D||O){var k=D?e.value():e,B=O?t.value():t;return l||(l=new ye),o(k,B,n,r,l)}}return!!x&&(l||(l=new ye),function(e,t,n,r,o,i){var a=1&n,u=Se(e),s=u.length;if(s!=Se(t).length&&!a)return!1;for(var c=s;c--;){var l=u[c];if(!(a?l in t:$.call(t,l)))return!1}var f=i.get(e);if(f&&i.get(t))return f==t;var d=!0;i.set(e,t),i.set(t,e);for(var p=a;++c<s;){var h=e[l=u[c]],g=t[l];if(r)var v=a?r(g,h,l,t,e,i):r(h,g,l,e,t,i);if(!(void 0===v?h===g||o(h,g,n,r,i):v)){d=!1;break}p||(p="constructor"==l)}if(d&&!p){var y=e.constructor,m=t.constructor;y==m||!("constructor"in e)||!("constructor"in t)||"function"==typeof y&&y instanceof y&&"function"==typeof m&&m instanceof m||(d=!1)}return i.delete(e),i.delete(t),d}(e,t,n,r,o,l))}(e,t,n,r,Ee,o))}function Ae(e,t,n,r,o,i){var a=1&n,u=e.length,s=t.length;if(u!=s&&!(a&&s>u))return!1;var c=i.get(e);if(c&&i.get(t))return c==t;var l=-1,f=!0,d=2&n?new ve:void 0;for(i.set(e,t),i.set(t,e);++l<u;){var p=e[l],h=t[l];if(r)var g=a?r(h,p,l,t,e,i):r(p,h,l,e,t,i);if(void 0!==g){if(g)continue;f=!1;break}if(d){if(!P(t,(function(e,t){if(a=t,!d.has(a)&&(p===e||o(p,e,n,r,i)))return d.push(t);var a}))){f=!1;break}}else if(p!==h&&!o(p,h,n,r,i)){f=!1;break}}return i.delete(e),i.delete(t),f}function Se(e){return function(e,t,n){var r=t(e);return _e(e)?r:function(e,t){for(var n=-1,r=t.length,o=e.length;++n<r;)e[o+n]=t[n];return e}(r,n(e))}(e,Me,De)}function Ce(e,t){var n,r,o=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?o["string"==typeof t?"string":"hash"]:o.map}function xe(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return function(e){return!(!Re(e)||function(e){return!!H&&H in e}(e))&&(je(e)?V:E).test(Be(e))}(n)?n:void 0}pe.prototype.clear=function(){this.__data__=ie?ie(null):{},this.size=0},pe.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},pe.prototype.get=function(e){var t=this.__data__;if(ie){var r=t[e];return r===n?void 0:r}return $.call(t,e)?t[e]:void 0},pe.prototype.has=function(e){var t=this.__data__;return ie?void 0!==t[e]:$.call(t,e)},pe.prototype.set=function(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=ie&&void 0===t?n:t,this},he.prototype.clear=function(){this.__data__=[],this.size=0},he.prototype.delete=function(e){var t=this.__data__,n=me(t,e);return!(n<0||(n==t.length-1?t.pop():Y.call(t,n,1),--this.size,0))},he.prototype.get=function(e){var t=this.__data__,n=me(t,e);return n<0?void 0:t[n][1]},he.prototype.has=function(e){return me(this.__data__,e)>-1},he.prototype.set=function(e,t){var n=this.__data__,r=me(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},ge.prototype.clear=function(){this.size=0,this.__data__={hash:new pe,map:new(te||he),string:new pe}},ge.prototype.delete=function(e){var t=Ce(this,e).delete(e);return this.size-=t?1:0,t},ge.prototype.get=function(e){return Ce(this,e).get(e)},ge.prototype.has=function(e){return Ce(this,e).has(e)},ge.prototype.set=function(e,t){var n=Ce(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},ve.prototype.add=ve.prototype.push=function(e){return this.__data__.set(e,n),this},ve.prototype.has=function(e){return this.__data__.has(e)},ye.prototype.clear=function(){this.__data__=new he,this.size=0},ye.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},ye.prototype.get=function(e){return this.__data__.get(e)},ye.prototype.has=function(e){return this.__data__.has(e)},ye.prototype.set=function(e,t){var n=this.__data__;if(n instanceof he){var r=n.__data__;if(!te||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new ge(r)}return n.set(e,t),this.size=n.size,this};var De=J?function(e){return null==e?[]:(e=Object(e),function(e,t){for(var n=-1,r=null==e?0:e.length,o=0,i=[];++n<r;){var a=e[n];t(a)&&(i[o++]=a)}return i}(J(e),(function(t){return K.call(e,t)})))}:function(){return[]},Oe=be;function ke(e,t){return!!(t=null==t?o:t)&&("number"==typeof e||A.test(e))&&e>-1&&e%1==0&&e<t}function Be(e){if(null!=e){try{return z.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function Te(e,t){return e===t||e!=e&&t!=t}(ee&&Oe(new ee(new ArrayBuffer(1)))!=w||te&&Oe(new te)!=f||ne&&Oe(ne.resolve())!=h||re&&Oe(new re)!=v||oe&&Oe(new oe)!=m)&&(Oe=function(e){var t=be(e),n=t==p?e.constructor:void 0,r=n?Be(n):"";if(r)switch(r){case ae:return w;case ue:return f;case se:return h;case ce:return v;case le:return m}return t});var Fe=we(function(){return arguments}())?we:function(e){return Ie(e)&&$.call(e,"callee")&&!K.call(e,"callee")},_e=Array.isArray,Pe=Z||function(){return!1};function je(e){if(!Re(e))return!1;var t=be(e);return t==l||"[object GeneratorFunction]"==t||"[object AsyncFunction]"==t||"[object Proxy]"==t}function Ne(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=o}function Re(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function Ie(e){return null!=e&&"object"==typeof e}var Le=_?function(e){return function(t){return e(t)}}(_):function(e){return Ie(e)&&Ne(e.length)&&!!S[be(e)]};function Me(e){return null!=(t=e)&&Ne(t.length)&&!je(t)?function(e){var t=_e(e),n=!t&&Fe(e),r=!t&&!n&&Pe(e),o=!t&&!n&&!r&&Le(e),i=t||n||r||o,a=i?function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}(e.length,String):[],u=a.length;for(var s in e)!$.call(e,s)||i&&("length"==s||r&&("offset"==s||"parent"==s)||o&&("buffer"==s||"byteLength"==s||"byteOffset"==s)||ke(s,u))||a.push(s);return a}(e):function(e){if(n=(t=e)&&t.constructor,t!==("function"==typeof n&&n.prototype||L))return Q(e);var t,n,r=[];for(var o in Object(e))$.call(e,o)&&"constructor"!=o&&r.push(o);return r}(e);var t}e.exports=function(e,t){return Ee(e,t)}}));K_("en",{tableModule:{deleteCol:"Delete column",deleteRow:"Delete row",deleteTable:"Delete table",widthAuto:"Width auto",insertCol:"Insert column",insertRow:"Insert row",insertTable:"Insert table",header:"Header"}}),K_("zh-CN",{tableModule:{deleteCol:"å é¤å",deleteRow:"å é¤è¡",deleteTable:"å é¤è¡¨æ ¼",widthAuto:"å®½åº¦èªéåº",insertCol:"æå¥å",insertRow:"æå¥è¡",insertTable:"æå¥è¡¨æ ¼",header:"è¡¨å¤´"}});var rQ="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function oQ(e){var t={exports:{}};return e(t,t.exports),t.exports}var iQ,aQ,uQ=function(e){return e&&e.Math==Math&&e},sQ=uQ("object"==typeof globalThis&&globalThis)||uQ("object"==typeof window&&window)||uQ("object"==typeof self&&self)||uQ("object"==typeof rQ&&rQ)||function(){return this}()||Function("return this")(),cQ=function(e){try{return!!e()}catch(e){return!0}},lQ=!cQ((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),fQ=Function.prototype.call,dQ=fQ.bind?fQ.bind(fQ):function(){return fQ.apply(fQ,arguments)},pQ={}.propertyIsEnumerable,hQ=Object.getOwnPropertyDescriptor,gQ={f:hQ&&!pQ.call({1:2},1)?function(e){var t=hQ(this,e);return!!t&&t.enumerable}:pQ},vQ=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},yQ=Function.prototype,mQ=yQ.bind,bQ=yQ.call,wQ=mQ&&mQ.bind(bQ),EQ=mQ?function(e){return e&&wQ(bQ,e)}:function(e){return e&&function(){return bQ.apply(e,arguments)}},AQ=EQ({}.toString),SQ=EQ("".slice),CQ=function(e){return SQ(AQ(e),8,-1)},xQ=sQ.Object,DQ=EQ("".split),OQ=cQ((function(){return!xQ("z").propertyIsEnumerable(0)}))?function(e){return"String"==CQ(e)?DQ(e,""):xQ(e)}:xQ,kQ=sQ.TypeError,BQ=function(e){if(null==e)throw kQ("Can't call method on "+e);return e},TQ=function(e){return OQ(BQ(e))},FQ=function(e){return"function"==typeof e},_Q=function(e){return"object"==typeof e?null!==e:FQ(e)},PQ=function(e,t){return arguments.length<2?function(e){return FQ(e)?e:void 0}(sQ[e]):sQ[e]&&sQ[e][t]},jQ=EQ({}.isPrototypeOf),NQ=PQ("navigator","userAgent")||"",RQ=sQ.process,IQ=sQ.Deno,LQ=RQ&&RQ.versions||IQ&&IQ.version,MQ=LQ&&LQ.v8;MQ&&(aQ=(iQ=MQ.split("."))[0]>0&&iQ[0]<4?1:+(iQ[0]+iQ[1])),!aQ&&NQ&&(!(iQ=NQ.match(/Edge\/(\d+)/))||iQ[1]>=74)&&(iQ=NQ.match(/Chrome\/(\d+)/))&&(aQ=+iQ[1]);var zQ=aQ,$Q=!!Object.getOwnPropertySymbols&&!cQ((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&zQ&&zQ<41})),HQ=$Q&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,UQ=sQ.Object,VQ=HQ?function(e){return"symbol"==typeof e}:function(e){var t=PQ("Symbol");return FQ(t)&&jQ(t.prototype,UQ(e))},qQ=sQ.String,WQ=function(e){try{return qQ(e)}catch(e){return"Object"}},GQ=sQ.TypeError,KQ=function(e){if(FQ(e))return e;throw GQ(WQ(e)+" is not a function")},YQ=function(e,t){var n=e[t];return null==n?void 0:KQ(n)},XQ=sQ.TypeError,JQ=Object.defineProperty,ZQ=function(e,t){try{JQ(sQ,e,{value:t,configurable:!0,writable:!0})}catch(n){sQ[e]=t}return t},QQ=sQ["__core-js_shared__"]||ZQ("__core-js_shared__",{}),e0=oQ((function(e){(e.exports=function(e,t){return QQ[e]||(QQ[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"global",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),t0=sQ.Object,n0=function(e){return t0(BQ(e))},r0=EQ({}.hasOwnProperty),o0=Object.hasOwn||function(e,t){return r0(n0(e),t)},i0=0,a0=Math.random(),u0=EQ(1..toString),s0=function(e){return"Symbol("+(void 0===e?"":e)+")_"+u0(++i0+a0,36)},c0=e0("wks"),l0=sQ.Symbol,f0=l0&&l0.for,d0=HQ?l0:l0&&l0.withoutSetter||s0,p0=function(e){if(!o0(c0,e)||!$Q&&"string"!=typeof c0[e]){var t="Symbol."+e;$Q&&o0(l0,e)?c0[e]=l0[e]:c0[e]=HQ&&f0?f0(t):d0(t)}return c0[e]},h0=sQ.TypeError,g0=p0("toPrimitive"),v0=function(e){var t=function(e,t){if(!_Q(e)||VQ(e))return e;var n,r=YQ(e,g0);if(r){if(void 0===t&&(t="default"),n=dQ(r,e,t),!_Q(n)||VQ(n))return n;throw h0("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&FQ(n=e.toString)&&!_Q(r=dQ(n,e)))return r;if(FQ(n=e.valueOf)&&!_Q(r=dQ(n,e)))return r;if("string"!==t&&FQ(n=e.toString)&&!_Q(r=dQ(n,e)))return r;throw XQ("Can't convert object to primitive value")}(e,t)}(e,"string");return VQ(t)?t:t+""},y0=sQ.document,m0=_Q(y0)&&_Q(y0.createElement),b0=function(e){return m0?y0.createElement(e):{}},w0=!lQ&&!cQ((function(){return 7!=Object.defineProperty(b0("div"),"a",{get:function(){return 7}}).a})),E0=Object.getOwnPropertyDescriptor,A0={f:lQ?E0:function(e,t){if(e=TQ(e),t=v0(t),w0)try{return E0(e,t)}catch(e){}if(o0(e,t))return vQ(!dQ(gQ.f,e,t),e[t])}},S0=sQ.String,C0=sQ.TypeError,x0=function(e){if(_Q(e))return e;throw C0(S0(e)+" is not an object")},D0=sQ.TypeError,O0=Object.defineProperty,k0={f:lQ?O0:function(e,t,n){if(x0(e),t=v0(t),x0(n),w0)try{return O0(e,t,n)}catch(e){}if("get"in n||"set"in n)throw D0("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},B0=lQ?function(e,t,n){return k0.f(e,t,vQ(1,n))}:function(e,t,n){return e[t]=n,e},T0=EQ(Function.toString);FQ(QQ.inspectSource)||(QQ.inspectSource=function(e){return T0(e)});var F0,_0,P0,j0=QQ.inspectSource,N0=sQ.WeakMap,R0=FQ(N0)&&/native code/.test(j0(N0)),I0=e0("keys"),L0=function(e){return I0[e]||(I0[e]=s0(e))},M0={},z0=sQ.TypeError,$0=sQ.WeakMap;if(R0||QQ.state){var H0=QQ.state||(QQ.state=new $0),U0=EQ(H0.get),V0=EQ(H0.has),q0=EQ(H0.set);F0=function(e,t){if(V0(H0,e))throw new z0("Object already initialized");return t.facade=e,q0(H0,e,t),t},_0=function(e){return U0(H0,e)||{}},P0=function(e){return V0(H0,e)}}else{var W0=L0("state");M0[W0]=!0,F0=function(e,t){if(o0(e,W0))throw new z0("Object already initialized");return t.facade=e,B0(e,W0,t),t},_0=function(e){return o0(e,W0)?e[W0]:{}},P0=function(e){return o0(e,W0)}}var G0={set:F0,get:_0,has:P0,enforce:function(e){return P0(e)?_0(e):F0(e,{})},getterFor:function(e){return function(t){var n;if(!_Q(t)||(n=_0(t)).type!==e)throw z0("Incompatible receiver, "+e+" required");return n}}},K0=Function.prototype,Y0=lQ&&Object.getOwnPropertyDescriptor,X0=o0(K0,"name"),J0={EXISTS:X0,PROPER:X0&&"something"===function(){}.name,CONFIGURABLE:X0&&(!lQ||lQ&&Y0(K0,"name").configurable)},Z0=oQ((function(e){var t=J0.CONFIGURABLE,n=G0.get,r=G0.enforce,o=String(String).split("String");(e.exports=function(e,n,i,a){var u,s=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,l=!!a&&!!a.noTargetGet,f=a&&void 0!==a.name?a.name:n;FQ(i)&&("Symbol("===String(f).slice(0,7)&&(f="["+String(f).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!o0(i,"name")||t&&i.name!==f)&&B0(i,"name",f),(u=r(i)).source||(u.source=o.join("string"==typeof f?f:""))),e!==sQ?(s?!l&&e[n]&&(c=!0):delete e[n],c?e[n]=i:B0(e,n,i)):c?e[n]=i:ZQ(n,i)})(Function.prototype,"toString",(function(){return FQ(this)&&n(this).source||j0(this)}))})),Q0=Math.ceil,e1=Math.floor,t1=function(e){var t=+e;return t!=t||0===t?0:(t>0?e1:Q0)(t)},n1=Math.max,r1=Math.min,o1=function(e,t){var n=t1(e);return n<0?n1(n+t,0):r1(n,t)},i1=Math.min,a1=function(e){return e>0?i1(t1(e),9007199254740991):0},u1=function(e){return a1(e.length)},s1=function(e){return function(t,n,r){var o,i=TQ(t),a=u1(i),u=o1(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},c1=(s1(!0),s1(!1)),l1=EQ([].push),f1=function(e,t){var n,r=TQ(e),o=0,i=[];for(n in r)!o0(M0,n)&&o0(r,n)&&l1(i,n);for(;t.length>o;)o0(r,n=t[o++])&&(~c1(i,n)||l1(i,n));return i},d1=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],p1=d1.concat("length","prototype"),h1={f:Object.getOwnPropertyNames||function(e){return f1(e,p1)}},g1={f:Object.getOwnPropertySymbols},v1=EQ([].concat),y1=PQ("Reflect","ownKeys")||function(e){var t=h1.f(x0(e)),n=g1.f;return n?v1(t,n(e)):t},m1=function(e,t){for(var n=y1(t),r=k0.f,o=A0.f,i=0;i<n.length;i++){var a=n[i];o0(e,a)||r(e,a,o(t,a))}},b1=/#|\.prototype\./,w1=function(e,t){var n=A1[E1(e)];return n==C1||n!=S1&&(FQ(t)?cQ(t):!!t)},E1=w1.normalize=function(e){return String(e).replace(b1,".").toLowerCase()},A1=w1.data={},S1=w1.NATIVE="N",C1=w1.POLYFILL="P",x1=w1,D1=A0.f,O1=function(e,t){var n,r,o,i,a,u=e.target,s=e.global,c=e.stat;if(n=s?sQ:c?sQ[u]||ZQ(u,{}):(sQ[u]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(a=D1(n,r))&&a.value:n[r],!x1(s?r:u+(c?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;m1(i,o)}(e.sham||o&&o.sham)&&B0(i,"sham",!0),Z0(n,r,i,e)}},k1={};k1[p0("toStringTag")]="z";var B1="[object z]"===String(k1),T1=p0("toStringTag"),F1=sQ.Object,_1="Arguments"==CQ(function(){return arguments}()),P1=B1?CQ:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=F1(e),T1))?n:_1?CQ(t):"Object"==(r=CQ(t))&&FQ(t.callee)?"Arguments":r},j1=sQ.String,N1=function(e){if("Symbol"===P1(e))throw TypeError("Cannot convert a Symbol value to a string");return j1(e)},R1=/"/g,I1=EQ("".replace);O1({target:"String",proto:!0,forced:cQ((function(){var e="".anchor('"');return e!==e.toLowerCase()||e.split('"').length>3}))},{anchor:function(e){return t=e,n=N1(BQ(this)),r="<a",(r+=' name="'+I1(N1(t),R1,"&quot;")+'"')+">"+n+"</a>";var t,n,r}});var L1,M1=function(){var e=x0(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},z1=sQ.RegExp,$1=cQ((function(){var e=z1("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),H1=$1||cQ((function(){return!z1("a","y").sticky})),U1={BROKEN_CARET:$1||cQ((function(){var e=z1("^r","gy");return e.lastIndex=2,null!=e.exec("str")})),MISSED_STICKY:H1,UNSUPPORTED_Y:$1},V1=Object.keys||function(e){return f1(e,d1)},q1=lQ?Object.defineProperties:function(e,t){x0(e);for(var n,r=TQ(t),o=V1(t),i=o.length,a=0;i>a;)k0.f(e,n=o[a++],r[n]);return e},W1=PQ("document","documentElement"),G1=L0("IE_PROTO"),K1=function(){},Y1=function(e){return"<script>"+e+"<\/script>"},X1=function(e){e.write(Y1("")),e.close();var t=e.parentWindow.Object;return e=null,t},J1=function(){try{L1=new ActiveXObject("htmlfile")}catch(e){}var e,t;J1="undefined"!=typeof document?document.domain&&L1?X1(L1):((t=b0("iframe")).style.display="none",W1.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(Y1("document.F=Object")),e.close(),e.F):X1(L1);for(var n=d1.length;n--;)delete J1.prototype[d1[n]];return J1()};M0[G1]=!0;var Z1,Q1,e2=Object.create||function(e,t){var n;return null!==e?(K1.prototype=x0(e),n=new K1,K1.prototype=null,n[G1]=e):n=J1(),void 0===t?n:q1(n,t)},t2=sQ.RegExp,n2=cQ((function(){var e=t2(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)})),r2=sQ.RegExp,o2=cQ((function(){var e=r2("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")})),i2=G0.get,a2=e0("native-string-replace",String.prototype.replace),u2=RegExp.prototype.exec,s2=u2,c2=EQ("".charAt),l2=EQ("".indexOf),f2=EQ("".replace),d2=EQ("".slice),p2=(Q1=/b*/g,dQ(u2,Z1=/a/,"a"),dQ(u2,Q1,"a"),0!==Z1.lastIndex||0!==Q1.lastIndex),h2=U1.BROKEN_CARET,g2=void 0!==/()??/.exec("")[1];(p2||g2||h2||n2||o2)&&(s2=function(e){var t,n,r,o,i,a,u,s=this,c=i2(s),l=N1(e),f=c.raw;if(f)return f.lastIndex=s.lastIndex,t=dQ(s2,f,l),s.lastIndex=f.lastIndex,t;var d=c.groups,p=h2&&s.sticky,h=dQ(M1,s),g=s.source,v=0,y=l;if(p&&(h=f2(h,"y",""),-1===l2(h,"g")&&(h+="g"),y=d2(l,s.lastIndex),s.lastIndex>0&&(!s.multiline||s.multiline&&"\n"!==c2(l,s.lastIndex-1))&&(g="(?: "+g+")",y=" "+y,v++),n=new RegExp("^(?:"+g+")",h)),g2&&(n=new RegExp("^"+g+"$(?!\\s)",h)),p2&&(r=s.lastIndex),o=dQ(u2,p?n:s,y),p?o?(o.input=d2(o.input,v),o[0]=d2(o[0],v),o.index=s.lastIndex,s.lastIndex+=o[0].length):s.lastIndex=0:p2&&o&&(s.lastIndex=s.global?o.index+o[0].length:r),g2&&o&&o.length>1&&dQ(a2,o[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&d)for(o.groups=a=e2(null),i=0;i<d.length;i++)a[(u=d[i])[0]]=o[u[1]];return o});var v2=s2;O1({target:"RegExp",proto:!0,forced:/./.exec!==v2},{exec:v2});var y2=Array.isArray||function(e){return"Array"==CQ(e)},m2=function(){},b2=[],w2=PQ("Reflect","construct"),E2=/^\s*(?:class|function)\b/,A2=EQ(E2.exec),S2=!E2.exec(m2),C2=function(e){if(!FQ(e))return!1;try{return w2(m2,b2,e),!0}catch(e){return!1}},x2=!w2||cQ((function(){var e;return C2(C2.call)||!C2(Object)||!C2((function(){e=!0}))||e}))?function(e){if(!FQ(e))return!1;switch(P1(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return S2||!!A2(E2,j0(e))}:C2,D2=function(e,t,n){var r=v0(t);r in e?k0.f(e,r,vQ(0,n)):e[r]=n},O2=p0("species"),k2=function(e){return zQ>=51||!cQ((function(){var t=[];return(t.constructor={})[O2]=function(){return{foo:1}},1!==t[e](Boolean).foo}))},B2=EQ([].slice),T2=k2("slice"),F2=p0("species"),_2=sQ.Array,P2=Math.max;function j2(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}function N2(e){var t=e.selection;if(null==t)return!1;var n=j2(yf.nodes(e,{match:function(e){return gO.checkNodeType(e,"table-cell")}}),1)[0];if(n){var r=j2(n,2)[1],o=yf.start(e,r);if(Ff.equals(t.anchor,o))return!0}return!1}function R2(e,t){var n,r,o=yf.nodes(e,{at:t,match:function(e){return"table"===gO.getNodeType(e)}}),i=!1;try{for(var a=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(o),u=a.next();!u.done;u=a.next())u.value,i=!0}catch(e){n={error:e}}finally{try{u&&!u.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}return i}O1({target:"Array",proto:!0,forced:!T2},{slice:function(e,t){var n,r,o,i=TQ(this),a=u1(i),u=o1(e,a),s=o1(void 0===t?a:t,a);if(y2(i)&&(n=i.constructor,(x2(n)&&(n===_2||y2(n.prototype))||_Q(n)&&null===(n=n[F2]))&&(n=void 0),n===_2||void 0===n))return B2(i,u,s);for(r=new(void 0===n?_2:n)(P2(s-u,0)),o=0;u<s;u++,o++)u in i&&D2(r,o,i[u]);return r.length=o,r}});var I2=EQ(EQ.bind),L2=p0("species"),M2=sQ.Array,z2=function(e,t){return new(function(e){var t;return y2(e)&&(t=e.constructor,(x2(t)&&(t===M2||y2(t.prototype))||_Q(t)&&null===(t=t[L2]))&&(t=void 0)),void 0===t?M2:t}(e))(0===t?0:t)},$2=EQ([].push),H2=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=n0(s),g=OQ(h),v=function(e,t){return KQ(e),void 0===t?e:I2?I2(e,t):function(){return e.apply(t,arguments)}}(c,l),y=u1(g),m=0,b=f||z2,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:$2(w,d)}else switch(e){case 4:return!1;case 7:$2(w,d)}return i?-1:r||o?o:w}},U2={forEach:H2(0),map:H2(1),filter:H2(2),some:H2(3),every:H2(4),find:H2(5),findIndex:H2(6),filterReject:H2(7)},V2=U2.map;O1({target:"Array",proto:!0,forced:!k2("map")},{map:function(e){return V2(this,e,arguments.length>1?arguments[1]:void 0)}});var q2=B1?{}.toString:function(){return"[object "+P1(this)+"]"};function W2(e){var t=e.children||[];return 0===t.length?[]:(t[0]||{}).children||[]}function G2(e){return W2(e).every((function(e){return!!e.isHeader}))}B1||Z0(Object.prototype,"toString",q2,{unsafe:!0});var K2=J0.PROPER,Y2=RegExp.prototype,X2=Y2.toString,J2=EQ(M1),Z2=cQ((function(){return"/a/b"!=X2.call({source:"a",flags:"b"})})),Q2=K2&&"toString"!=X2.name;(Z2||Q2)&&Z0(RegExp.prototype,"toString",(function(){var e=x0(this),t=N1(e.source),n=e.flags;return"/"+t+"/"+N1(void 0===n&&jQ(Y2,e)&&!("flags"in Y2)?J2(e):n)}),{unsafe:!0});var e4=p0("unscopables"),t4=Array.prototype;null==t4[e4]&&k0.f(t4,e4,{configurable:!0,value:e2(null)});var n4=U2.find,r4=!0;"find"in[]&&Array(1).find((function(){r4=!1})),O1({target:"Array",proto:!0,forced:r4},{find:function(e){return n4(this,e,arguments.length>1?arguments[1]:void 0)}}),t4[e4].find=!0;var o4=Function.prototype,i4=o4.apply,a4=o4.bind,u4=o4.call,s4="object"==typeof Reflect&&Reflect.apply||(a4?u4.bind(i4):function(){return u4.apply(i4,arguments)}),c4=p0("species"),l4=RegExp.prototype,f4=function(e,t,n,r){var o=p0(e),i=!cQ((function(){var t={};return t[o]=function(){return 7},7!=""[e](t)})),a=i&&!cQ((function(){var t=!1,n=/a/;return"split"===e&&((n={}).constructor={},n.constructor[c4]=function(){return n},n.flags="",n[o]=/./[o]),n.exec=function(){return t=!0,null},n[o](""),!t}));if(!i||!a||n){var u=EQ(/./[o]),s=t(o,""[e],(function(e,t,n,r,o){var a=EQ(e),s=t.exec;return s===v2||s===l4.exec?i&&!o?{done:!0,value:u(t,n,r)}:{done:!0,value:a(n,t,r)}:{done:!1}}));Z0(String.prototype,e,s[0]),Z0(l4,o,s[1])}r&&B0(l4[o],"sham",!0)},d4=p0("match"),p4=sQ.TypeError,h4=p0("species"),g4=EQ("".charAt),v4=EQ("".charCodeAt),y4=EQ("".slice),m4=function(e){return function(t,n){var r,o,i=N1(BQ(t)),a=t1(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=v4(i,a))<55296||r>56319||a+1===u||(o=v4(i,a+1))<56320||o>57343?e?g4(i,a):r:e?y4(i,a,a+2):o-56320+(r-55296<<10)+65536}},b4=(m4(!1),m4(!0)),w4=function(e,t,n){return t+(n?b4(e,t).length:1)},E4=sQ.Array,A4=Math.max,S4=function(e,t,n){for(var r=u1(e),o=o1(t,r),i=o1(void 0===n?r:n,r),a=E4(A4(i-o,0)),u=0;o<i;o++,u++)D2(a,u,e[o]);return a.length=u,a},C4=sQ.TypeError,x4=function(e,t){var n=e.exec;if(FQ(n)){var r=dQ(n,e,t);return null!==r&&x0(r),r}if("RegExp"===CQ(e))return dQ(v2,e,t);throw C4("RegExp#exec called on incompatible receiver")},D4=U1.UNSUPPORTED_Y,O4=Math.min,k4=[].push,B4=EQ(/./.exec),T4=EQ(k4),F4=EQ("".slice);f4("split",(function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r,o,i=N1(BQ(this)),a=void 0===n?4294967295:n>>>0;if(0===a)return[];if(void 0===e)return[i];if(!_Q(r=e)||!(void 0!==(o=r[d4])?o:"RegExp"==CQ(r)))return dQ(t,i,e,a);for(var u,s,c,l=[],f=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),d=0,p=new RegExp(e.source,f+"g");(u=dQ(v2,p,i))&&!((s=p.lastIndex)>d&&(T4(l,F4(i,d,u.index)),u.length>1&&u.index<i.length&&s4(k4,l,S4(u,1)),c=u[0].length,d=s,l.length>=a));)p.lastIndex===u.index&&p.lastIndex++;return d===i.length?!c&&B4(p,"")||T4(l,""):T4(l,F4(i,d)),l.length>a?S4(l,0,a):l}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:dQ(t,this,e,n)}:t,[function(t,n){var o=BQ(this),i=null==t?void 0:YQ(t,e);return i?dQ(i,t,o,n):dQ(r,N1(o),t,n)},function(e,o){var i=x0(this),a=N1(e),u=n(r,i,a,o,r!==t);if(u.done)return u.value;var s=function(e,t){var n,r=x0(e).constructor;return void 0===r||null==(n=x0(r)[h4])?t:function(e){if(x2(e))return e;throw p4(WQ(e)+" is not a constructor")}(n)}(i,RegExp),c=i.unicode,l=(i.ignoreCase?"i":"")+(i.multiline?"m":"")+(i.unicode?"u":"")+(D4?"g":"y"),f=new s(D4?"^(?:"+i.source+")":i,l),d=void 0===o?4294967295:o>>>0;if(0===d)return[];if(0===a.length)return null===x4(f,a)?[a]:[];for(var p=0,h=0,g=[];h<a.length;){f.lastIndex=D4?0:h;var v,y=x4(f,D4?F4(a,h):a);if(null===y||(v=O4(a1(f.lastIndex+(D4?h:0)),a.length))===p)h=w4(a,h,c);else{if(T4(g,F4(a,p,h)),g.length===d)return g;for(var m=1;m<=y.length-1;m++)if(T4(g,y[m]),g.length===d)return g;h=p=v}}return T4(g,F4(a,p)),g}]}),!!cQ((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),D4);var _4="\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff",P4=EQ("".replace),j4="["+_4+"]",N4=RegExp("^"+j4+j4+"*"),R4=RegExp(j4+j4+"*$"),I4=function(e){return function(t){var n=N1(BQ(t));return 1&e&&(n=P4(n,N4,"")),2&e&&(n=P4(n,R4,"")),n}},L4={start:I4(1),end:I4(2),trim:I4(3)},M4=J0.PROPER,z4=L4.trim;function $4(e){return e.length?e[0].tagName.toLowerCase():""}O1({target:"String",proto:!0,forced:function(e){return cQ((function(){return!!_4[e]()||"âÂá "!=="âÂá "[e]()||M4&&_4[e].name!==e}))}("trim")},{trim:function(){return z4(this)}}),O1({global:!0},{globalThis:sQ}),$p&&(wp.fn.append=$p),kp&&(wp.fn.on=kp),Zp&&(wp.fn.focus=Zp),Cp&&(wp.fn.attr=Cp),Op&&(wp.fn.val=Op),Lp&&(wp.fn.html=Lp),Dp&&(wp.fn.dataset=Dp),Ep&&(wp.fn.addClass=Ep),Ap&&(wp.fn.removeClass=Ap),Wp&&(wp.fn.children=Wp),Rp&&(wp.fn.each=Rp),qp&&(wp.fn.find=qp);var H4=!1,U4=0,V4=0,q4=null,W4=null,G4=wp("body");function K4(e){H4=!1,W4=null,q4=null,G4.off("mousemove",Y4),G4.off("mouseup",K4)}G4.on("mousedown",(function(e){var t=e.target;if(("TH"===t.tagName||"TD"===t.tagName)&&"col-resize"===t.style.cursor){t.style.cursor="auto",e.preventDefault(),H4=!0;var n=e.clientX;U4=n;var r=t.getBoundingClientRect().width;V4=r,G4.on("mousemove",Y4),G4.on("mouseup",K4)}}));var Y4=Fh((function(e){if(H4&&null!=W4&&null!=q4){e.preventDefault();var t=e.clientX,n=V4+(t-U4);(n=Math.floor(100*n)/100)<30&&(n=30),ad.setNodes(W4,{width:n.toString()},{at:q4})}}),100),X4={type:"table",renderElem:function(e,t,n){var r=function(e,t){if(e.isDisabled())return!1;var n=e.selection;if(null==n)return!0;if(Nf.isCollapsed(n))return!0;var r=n.anchor,o=n.focus,i=gO.findPath(e,t),a=yf.start(e,i),u=yf.end(e,i),s=Ff.compare(r,u)<=0&&Ff.compare(r,a)>=0,c=Ff.compare(o,u)<=0&&Ff.compare(o,a)>=0;return!!(s&&c&&Of.equals(r.path.slice(0,3),o.path.slice(0,3)))}(n,e),o=e.width,i=void 0===o?"auto":o,a=cg("div",{className:"table-container","data-selected":gO.isNodeSelected(n,e),on:{mousedown:function(t){if("DIV"===t.target.tagName&&t.preventDefault(),!n.isDisabled()){var r=gO.findPath(n,e),o=yf.start(n,r),i=n.selection;null!=i?i.anchor.path[0]!==r[0]&&n.select(o):n.select(o)}}}},cg("table",{width:i,contentEditable:r},cg("colgroup",null,W2(e).map((function(e){var t=e.width;return cg("col",{width:void 0===t?"auto":t})}))),cg("tbody",null,t)));return a}},J4={type:"table-row",renderElem:function(e,t,n){return cg("tr",null,t)}},Z4={type:"table-cell",renderElem:function(e,t,n){var r=function(e,t){var n=gO.getParentNode(e,t);if(null==n)return!1;var r=gO.getParentNode(e,n);return null!=r&&W2(r).some((function(e){return e===t}))}(n,e),o=e,i=o.colSpan,a=void 0===i?1:i,u=o.rowSpan,s=void 0===u?1:u,c=o.isHeader,l=void 0!==c&&c;if(!r)return cg("td",{colSpan:a,rowSpan:s},t);var f=cg(l?"th":"td",{colSpan:a,rowSpan:s,style:{borderRightWidth:"3px"},on:{mousemove:Fh((function(t){var r=this.elm;if(null!=r){var o=r.getBoundingClientRect(),i=o.left,a=o.width,u=o.top,s=o.height,c=t.clientX,l=t.clientY;H4||(c>i+a-5&&c<i+a&&l>u&&l<u+s?(r.style.cursor="col-resize",W4=n,q4=gO.findPath(n,e)):H4||(r.style.cursor="auto",W4=null,q4=null))}}),100)}},t);return f}},Q4={selector:"table",preParseHtml:function(e){var t=wp(e);if("table"!==$4(t))return e;var n=t.find("tbody");if(0===n.length)return e;var r=t.find("tr");return t.append(r),n.remove(),t[0]}},e6=U2.filter;O1({target:"Array",proto:!0,forced:!k2("filter")},{filter:function(e){return e6(this,e,arguments.length>1?arguments[1]:void 0)}});var t6=Math.floor,n6=EQ("".charAt),r6=EQ("".replace),o6=EQ("".slice),i6=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,a6=/\$([$&'`]|\d{1,2})/g,u6=function(e,t,n,r,o,i){var a=n+e.length,u=r.length,s=a6;return void 0!==o&&(o=n0(o),s=i6),r6(i,s,(function(i,s){var c;switch(n6(s,0)){case"$":return"$";case"&":return e;case"`":return o6(t,0,n);case"'":return o6(t,a);case"<":c=o[o6(s,1,-1)];break;default:var l=+s;if(0===l)return i;if(l>u){var f=t6(l/10);return 0===f?i:f<=u?void 0===r[f-1]?n6(s,1):r[f-1]+n6(s,1):i}c=r[l-1]}return void 0===c?"":c}))},s6=p0("replace"),c6=Math.max,l6=Math.min,f6=EQ([].concat),d6=EQ([].push),p6=EQ("".indexOf),h6=EQ("".slice),g6="$0"==="a".replace(/./,"$0"),v6=!!/./[s6]&&""===/./[s6]("a","$0");f4("replace",(function(e,t,n){var r=v6?"$":"$0";return[function(e,n){var r=BQ(this),o=null==e?void 0:YQ(e,s6);return o?dQ(o,e,r,n):dQ(t,N1(r),e,n)},function(e,o){var i=x0(this),a=N1(e);if("string"==typeof o&&-1===p6(o,r)&&-1===p6(o,"$<")){var u=n(t,i,a,o);if(u.done)return u.value}var s=FQ(o);s||(o=N1(o));var c=i.global;if(c){var l=i.unicode;i.lastIndex=0}for(var f=[];;){var d=x4(i,a);if(null===d)break;if(d6(f,d),!c)break;""===N1(d[0])&&(i.lastIndex=w4(a,a1(i.lastIndex),l))}for(var p,h="",g=0,v=0;v<f.length;v++){for(var y=N1((d=f[v])[0]),m=c6(l6(t1(d.index),a.length),0),b=[],w=1;w<d.length;w++)d6(b,void 0===(p=d[w])?p:String(p));var E=d.groups;if(s){var A=f6([y],b,m,a);void 0!==E&&d6(A,E);var S=N1(s4(o,void 0,A))}else S=u6(y,a,m,b,E,o);m>=g&&(h+=h6(a,g,m)+S,g=m+y.length)}return h+h6(a,g)}]}),!!cQ((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!g6||v6);var y6={selector:"td:not([data-w-e-type]),th:not([data-w-e-type])",parseElemHtml:function(e,t,n){var r=wp(e);0===(t=t.filter((function(e){return!!Hf.isText(e)||!!n.isInline(e)}))).length&&(t=[{text:r.text().replace(/\s+/gm," ")}]);var o=parseInt(r.attr("colSpan")||"1"),i=parseInt(r.attr("rowSpan")||"1"),a=r.attr("width")||"auto";return{type:"table-cell",isHeader:"th"===$4(r),colSpan:o,rowSpan:i,width:a,children:t}}},m6={selector:"tr:not([data-w-e-type])",parseElemHtml:function(e,t,n){return{type:"table-row",children:t.filter((function(e){return"table-cell"===gO.getNodeType(e)}))}}},b6={selector:"table:not([data-w-e-type])",parseElemHtml:function(e,t,n){var r=wp(e),o="auto";return"100%"===function(e){for(var t="",n=(e.attr("style")||"").split(";"),r=n.length,o=0;o<r;o++){var i=n[o];if(i){var a=i.split(":");"width"===a[0].trim()&&(t=a[1].trim())}}return t}(r)&&(o="100%"),"100%"===r.attr("width")&&(o="100%"),{type:"table",width:o,children:t.filter((function(e){return"table-row"===gO.getNodeType(e)}))}}},w6=function(){function e(){this.title=J_("tableModule.insertTable"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M0 64v896h1024V64H0z m384 576v-192h256v192h-256z m256 64v192h-256v-192h256z m0-512v192h-256V192h256zM320 192v192H64V192h256z m-256 256h256v192H64v-192z m640 0h256v192h-256v-192z m0-64V192h256v192h-256zM64 704h256v192H64v-192z m640 192v-192h256v192h-256z"></path></svg>',this.tag="button",this.showDropPanel=!0,this.$content=null}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.exec=function(e,t){},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||!!gO.getSelectedElems(e).some((function(t){var n=gO.getNodeType(t);return"pre"===n||"table"===n||"list-item"===n||!!e.isVoid(t)}))},e.prototype.getPanelContentElem=function(e){var t=this;if(this.$content)return this.$content[0];for(var n=wp('<div class="w-e-panel-content-table"></div>'),r=wp("<span>0 &times; 0</span>"),o=wp("<table></table>"),i=0;i<10;i++){for(var a=wp("<tr></tr>"),u=0;u<10;u++){var s=wp("<td></td>");s.attr("data-x",u.toString()),s.attr("data-y",i.toString()),a.append(s),s.on("mouseenter",(function(e){var t=e.target;if(null!=t){var n=wp(t).dataset(),i=n.x,a=n.y;r[0].innerHTML=i+1+" &times; "+(a+1),o.children().each((function(e){wp(e).children().each((function(e){var t=wp(e),n=t.dataset(),r=n.x,o=n.y;r<=i&&o<=a?t.addClass("active"):t.removeClass("active")}))}))}})),s.on("click",(function(n){n.preventDefault();var r=n.target;if(null!=r){var o=wp(r).dataset(),i=o.x,a=o.y;t.insertTable(e,a+1,i+1)}}))}o.append(a)}return n.append(o),n.append(r),this.$content=n,n[0]},e.prototype.insertTable=function(e,t,n){var r=parseInt(t,10),o=parseInt(n,10);if(r&&o&&!(r<=0||o<=0)){gO.isSelectedEmptyParagraph(e)&&ad.removeNodes(e,{mode:"highest"});var i=function(e,t){for(var n=[],r=0;r<e;r++){for(var o=[],i=0;i<t;i++){var a={type:"table-cell",children:[{text:""}]};0===r&&(a.isHeader=!0),o.push(a)}n.push({type:"table-row",children:o})}return{type:"table",width:"auto",children:n}}(r,o);ad.insertNodes(e,i,{mode:"highest"})}},e}(),E6=function(){function e(){this.title=J_("tableModule.deleteTable"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M826.8032 356.5312c-19.328 0-36.3776 15.6928-36.3776 35.0464v524.2624c0 19.328-16 34.56-35.328 34.56H264.9344c-19.328 0-35.5072-15.3088-35.5072-34.56V390.0416c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.6928-33.5104 35.0464V915.712c0 57.9328 44.6208 108.288 102.528 108.288H755.2c57.9328 0 108.0832-50.4576 108.0832-108.288V391.4752c-0.1024-19.2512-17.1264-34.944-36.48-34.944z" p-id="9577"></path><path d="M437.1712 775.7568V390.6048c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.616-33.5104 35.0464v385.152c0 19.328 14.1568 35.0464 33.5104 35.0464s33.5104-15.7184 33.5104-35.0464zM649.7024 775.7568V390.6048c0-19.328-17.0496-35.0464-36.3776-35.0464s-36.3776 15.616-36.3776 35.0464v385.152c0 19.328 17.0496 35.0464 36.3776 35.0464s36.3776-15.7184 36.3776-35.0464zM965.0432 217.0368h-174.6176V145.5104c0-57.9328-47.2064-101.76-104.6528-101.76h-350.976c-57.8304 0-105.3952 43.8528-105.3952 101.76v71.5264H54.784c-19.4304 0-35.0464 14.1568-35.0464 33.5104 0 19.328 15.616 33.5104 35.0464 33.5104h910.3616c19.328 0 35.0464-14.1568 35.0464-33.5104 0-19.3536-15.6928-33.5104-35.1488-33.5104z m-247.3728 0H297.3952V145.5104c0-19.328 18.2016-34.7648 37.4272-34.7648h350.976c19.1488 0 31.872 15.1296 31.872 34.7648v71.5264z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return null==e.selection||null==gO.getSelectedNodeByType(e,"table")},e.prototype.exec=function(e,t){this.isDisabled(e)||ad.removeNodes(e,{mode:"highest"})},e}(),A6=function(){function e(){this.title=J_("tableModule.insertRow"),this.iconSvg='<svg viewBox="0 0 1048 1024"><path d="M707.7888 521.0112h-147.456v-147.456H488.2432v147.456h-147.456v68.8128h147.456v147.456h72.0896v-147.456h147.456zM0 917.504V0h1048.576v917.504H0zM327.68 65.536H65.536v196.608H327.68V65.536z m327.68 0H393.216v196.608h262.144V65.536z m327.68 0h-262.144v196.608h262.144V65.536z m0 258.8672H65.536v462.0288H983.04V324.4032z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||null==gO.getSelectedNodeByType(e,"table")},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){var n=j2(yf.nodes(e,{match:function(e){return gO.checkNodeType(e,"table-cell")},universal:!0}),1),r=j2(n[0],2),o=r[0],i=r[1],a=gO.getParentNode(e,o),u=(null==a?void 0:a.children.length)||0;if(0!==u){for(var s={type:"table-row",children:[]},c=0;c<u;c++)s.children.push({type:"table-cell",children:[{text:""}]});var l=Of.parent(i),f=Of.next(l);ad.insertNodes(e,s,{at:f})}}},e}(),S6=function(){function e(){this.title=J_("tableModule.deleteRow"),this.iconSvg='<svg viewBox="0 0 1048 1024"><path d="M907.6736 586.5472L747.1104 425.984l163.84-163.84-78.6432-78.6432-163.84 163.84L507.904 186.7776 429.2608 262.144l163.84 163.84-167.1168 167.1168 78.6432 78.6432 167.1168-167.1168 160.5632 160.5632 75.3664-78.6432zM0 917.504V0h1048.576v917.504H0z m983.04-327.68h-22.9376l-65.536-65.536H983.04V327.68h-91.7504l65.536-65.536h26.2144V65.536H65.536v196.608h317.8496l65.536 65.536H65.536v196.608h380.1088l-65.536 65.536H65.536v196.608H983.04v-196.608z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||null==gO.getSelectedNodeByType(e,"table-row")},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){var n=j2(yf.nodes(e,{match:function(e){return gO.checkNodeType(e,"table-row")},universal:!0}),1),r=j2(n[0],2),o=r[0],i=r[1],a=gO.getParentNode(e,o);((null==a?void 0:a.children.length)||0)<=1?ad.removeNodes(e,{mode:"highest"}):ad.removeNodes(e,{at:i})}},e}(),C6={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},x6=b0("span").classList,D6=x6&&x6.constructor&&x6.constructor.prototype,O6=D6===Object.prototype?void 0:D6,k6=U2.forEach,B6=function(){var e=[].forEach;return!!e&&cQ((function(){e.call(null,(function(){throw 1}),1)}))}(),T6=B6?[].forEach:function(e){return k6(this,e,arguments.length>1?arguments[1]:void 0)},F6=function(e){if(e&&e.forEach!==T6)try{B0(e,"forEach",T6)}catch(t){e.forEach=T6}};for(var _6 in C6)C6[_6]&&F6(sQ[_6]&&sQ[_6].prototype);F6(O6);var P6=function(){function e(){this.title=J_("tableModule.insertCol"),this.iconSvg='<svg viewBox="0 0 1048 1024"><path d="M327.68 193.3312v186.7776H140.9024v91.7504H327.68v186.7776h88.4736V471.8592h190.0544V380.1088H416.1536V193.3312zM0 917.504V0h1048.576v917.504H0zM655.36 65.536H65.536v720.896H655.36V65.536z m327.68 0h-262.144v196.608h262.144V65.536z m0 262.144h-262.144v196.608h262.144V327.68z m0 262.144h-262.144v196.608h262.144v-196.608z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||null==gO.getSelectedNodeByType(e,"table")},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){var n=j2(yf.nodes(e,{match:function(e){return gO.checkNodeType(e,"table-cell")},universal:!0}),1),r=j2(n[0],2),o=r[0],i=r[1],a=gO.getParentNode(e,o);if(null!=a){var u=gO.getParentNode(e,a);null!=u&&(u.children||[]).forEach((function(t,n){ff.isElement(t)&&(t.children||[]).forEach((function(t){var r=gO.findPath(e,t);if(r.length===i.length&&nQ(r.slice(-1),i.slice(-1))){var o={type:"table-cell",children:[{text:""}]};0===n&&G2(u)&&(o.isHeader=!0),ad.insertNodes(e,o,{at:r})}}))}))}}},e}(),j6=function(){function e(){this.title=J_("tableModule.deleteCol"),this.iconSvg='<svg viewBox="0 0 1048 1024"><path d="M327.68 510.976L393.216 445.44v-13.1072L327.68 366.7968V510.976z m327.68-78.4384l65.536-65.536V507.904L655.36 442.368v-9.8304z m393.216 484.9664V0H0v917.504h1048.576z m-65.536-131.072h-262.144v-52.4288l-13.1072 13.1072-52.4288-52.4288v91.7504H393.216v-91.7504l-52.4288 52.4288-13.1072-13.1072v52.4288H65.536V65.536H327.68v121.2416l36.0448-36.0448 29.4912 29.4912V62.2592h262.144V180.224l49.152-49.152 16.384 16.384V62.2592h262.144V786.432z m-294.912-108.1344l-160.5632-160.5632-167.1168 167.1168-78.6432-78.6432 167.1168-167.1168L288.3584 278.528l78.6432-78.6432 160.5632 160.5632 163.84-163.84 78.6432 78.6432-163.84 163.84 160.5632 160.5632-78.6432 78.6432z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||null==gO.getSelectedNodeByType(e,"table-cell")},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){var n=j2(yf.nodes(e,{match:function(e){return gO.checkNodeType(e,"table-cell")},universal:!0}),1),r=j2(n[0],2),o=r[0],i=r[1],a=gO.getParentNode(e,o),u=(null==a?void 0:a.children.length)||0;if(!a||u<=1)ad.removeNodes(e,{mode:"highest"});else{var s=gO.getParentNode(e,a);null!=s&&(s.children||[]).forEach((function(t){ff.isElement(t)&&(t.children||[]).forEach((function(t){var n=gO.findPath(e,t);n.length===i.length&&nQ(n.slice(-1),i.slice(-1))&&ad.removeNodes(e,{at:n})}))}))}}},e}(),N6=function(){function e(){this.title=J_("tableModule.header"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M704 128l-64 0L384 128 320 128 0 128l0 256 0 64 0 192 0 64 0 256 320 0 64 0 256 0 64 0 320 0 0-256 0-64L1024 448 1024 384 1024 128 704 128zM640 640 384 640 384 448l256 0L640 640zM64 448l256 0 0 192L64 640 64 448zM320 896 64 896l0-192 256 0L320 896zM640 896 384 896l0-192 256 0L640 896zM960 896l-256 0 0-192 256 0L960 896zM960 640l-256 0L704 448l256 0L960 640z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){var t=gO.getSelectedNodeByType(e,"table");return null!=t&&G2(t)},e.prototype.isActive=function(e){return!!this.getValue(e)},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||null==gO.getSelectedNodeByType(e,"table")},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){var n=!t,r=gO.getSelectedNodeByType(e,"table");null!=r&&W2(r).forEach((function(t){return ad.setNodes(e,{isHeader:n},{at:gO.findPath(e,t)})}))}},e}(),R6=function(){function e(){this.title=J_("tableModule.widthAuto"),this.iconSvg='<svg viewBox="0 0 1228 1024"><path d="M862.514337 563.200461H404.581995v121.753478a13.311987 13.311987 0 0 1-6.655993 11.468789 10.23999 10.23999 0 0 1-12.083188-1.433599l-204.799795-179.199821a13.721586 13.721586 0 0 1 0-20.479979l204.799795-179.302221a10.23999 10.23999 0 0 1 12.185588-1.535998 13.209587 13.209587 0 0 1 6.553593 11.673588v115.097485h457.932342V319.693504a11.571188 11.571188 0 0 1 18.841582-10.239989l204.799795 179.19982a13.721586 13.721586 0 0 1 0 20.47998l-204.799795 179.199821a10.23999 10.23999 0 0 1-12.185588 1.535998 13.311987 13.311987 0 0 1-6.655994-11.571188V563.200461zM136.499064 14.951409v993.893406a15.257585 15.257585 0 0 1-15.155185 15.052785H15.155185A15.155185 15.155185 0 0 1 0 1008.844815V14.951409a15.257585 15.257585 0 0 1 15.155185-15.052785h106.086294a15.155185 15.155185 0 0 1 15.257585 15.155185zM1228.798771 14.951409v993.893406a15.257585 15.257585 0 0 1-15.155185 15.052785h-106.188693a15.155185 15.155185 0 0 1-15.155185-15.052785V14.951409a15.257585 15.257585 0 0 1 15.155185-15.052785h106.086293A15.155185 15.155185 0 0 1 1228.798771 15.053809z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){var t=gO.getSelectedNodeByType(e,"table");return null!=t&&"100%"===t.width},e.prototype.isActive=function(e){return!!this.getValue(e)},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||null==gO.getSelectedNodeByType(e,"table")},e.prototype.exec=function(e,t){if(!this.isDisabled(e)){var n={width:t?"auto":"100%"};ad.setNodes(e,n,{mode:"highest"})}},e}(),I6={renderElems:[X4,J4,Z4],elemsToHtml:[{type:"table",elemToHtml:function(e,t){var n=e.width;return'<table style="width: '+(void 0===n?"auto":n)+';"><tbody>'+t+"</tbody></table>"}},{type:"table-row",elemToHtml:function(e,t){return"<tr>"+t+"</tr>"}},{type:"table-cell",elemToHtml:function(e,t){var n=e,r=n.colSpan,o=void 0===r?1:r,i=n.rowSpan,a=void 0===i?1:i,u=n.isHeader,s=void 0!==u&&u,c=n.width,l=s?"th":"td";return"<"+l+' colSpan="'+o+'" rowSpan="'+a+'" width="'+(void 0===c?"auto":c)+'">'+t+"</"+l+">"}}],preParseHtml:[Q4],parseElemsHtml:[y6,m6,b6],menus:[{key:"insertTable",factory:function(){return new w6}},{key:"deleteTable",factory:function(){return new E6}},{key:"insertTableRow",factory:function(){return new A6}},{key:"deleteTableRow",factory:function(){return new S6}},{key:"insertTableCol",factory:function(){return new P6}},{key:"deleteTableCol",factory:function(){return new j6}},{key:"tableHeader",factory:function(){return new N6}},{key:"tableFullWidth",factory:function(){return new R6}}],editorPlugin:function(e){var t=e.insertBreak,n=e.deleteBackward,r=e.deleteForward,o=e.normalizeNode,i=e.insertData,a=e.handleTab,u=e.selectAll,s=e;return s.insertBreak=function(){null==gO.getSelectedNodeByType(s,"table")?t():s.insertText("\n")},s.deleteBackward=function(e){if(!N2(s)){var t=s.selection;if(t){var r=yf.before(s,t);if(r){var o=R2(s,r),i=R2(s,t);if(o&&!i)return}}n(e)}},s.handleTab=function(){var t;if(gO.getSelectedNodeByType(s,"table")){var n=yf.above(e);gO.checkNodeType(n[0],"table-cell")&&ad.select(e,n[1]);var r=yf.next(e);if(r)r[0]&&r[0].text&&(r=null!==(t=yf.above(e,{at:r[1]}))&&void 0!==t?t:r),ad.select(e,r[1]);else{var o=s.children||[],i=o.length;if(gO.checkNodeType(o[i-1],"table")){var u=gO.genEmptyParagraph();ad.insertNodes(s,u,{at:[i]}),s.handleTab()}}}else a()},s.deleteForward=function(e){N2(s)||r(e)},s.normalizeNode=function(e){var t=j2(e,2),n=t[0],r=t[1];if("table"!==gO.getNodeType(n))return o([n,r]);if(gO.isLastNode(s,n)){var i=gO.genEmptyParagraph();ad.insertNodes(s,i,{at:[r[0]+1]})}},s.insertData=function(e){if(null!=gO.getSelectedNodeByType(s,"table")){var t=e.getData("text/plain");"\n"===t||/<img[^>]+>/.test(e.getData("text/html"))?i(e):yf.insertText(s,t)}else i(e)},s.selectAll=function(){var e=s.selection;if(null!=e){var t=gO.getSelectedNodeByType(s,"table-cell");if(null!=t){var n=e.anchor,r=e.focus;if(Of.equals(n.path.slice(0,3),r.path.slice(0,3)))if(0!==Sf.string(t).length){var o=gO.findPath(s,t),i={anchor:yf.start(s,o),focus:yf.end(s,o)};s.select(i)}else u();else u()}else u()}else u()},s}};K_("en",{videoModule:{delete:"Delete",uploadVideo:"Upload video",insertVideo:"Insert video",videoSrc:"Video source",videoSrcPlaceHolder:"Video file url, or third-party <iframe>",videoPoster:"Video poster",videoPosterPlaceHolder:"Poster image url",ok:"Ok",editSize:"Edit size",width:"Width",height:"Height"}}),K_("zh-CN",{videoModule:{delete:"å é¤è§é¢",uploadVideo:"ä¸ä¼ è§é¢",insertVideo:"æå¥è§é¢",videoSrc:"è§é¢å°å",videoSrcPlaceHolder:"è§é¢æä»¶ url æç¬¬ä¸æ¹ <iframe>",videoPoster:"è§é¢å°é¢",videoPosterPlaceHolder:"å°é¢å¾ç url",ok:"ç¡®å®",editSize:"ä¿®æ¹å°ºå¯¸",width:"å®½åº¦",height:"é«åº¦"}});var L6=function(){return L6=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},L6.apply(this,arguments)};function M6(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function u(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}s((r=r.apply(e,t||[])).next())}))}function z6(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}}function $6(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}var H6="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function U6(e){var t={exports:{}};return e(t,t.exports),t.exports}var V6,q6,W6=function(e){return e&&e.Math==Math&&e},G6=W6("object"==typeof globalThis&&globalThis)||W6("object"==typeof window&&window)||W6("object"==typeof self&&self)||W6("object"==typeof H6&&H6)||function(){return this}()||Function("return this")(),K6=function(e){try{return!!e()}catch(e){return!0}},Y6=!K6((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),X6=Function.prototype.call,J6=X6.bind?X6.bind(X6):function(){return X6.apply(X6,arguments)},Z6={}.propertyIsEnumerable,Q6=Object.getOwnPropertyDescriptor,e3={f:Q6&&!Z6.call({1:2},1)?function(e){var t=Q6(this,e);return!!t&&t.enumerable}:Z6},t3=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},n3=Function.prototype,r3=n3.bind,o3=n3.call,i3=r3&&r3.bind(o3),a3=r3?function(e){return e&&i3(o3,e)}:function(e){return e&&function(){return o3.apply(e,arguments)}},u3=a3({}.toString),s3=a3("".slice),c3=function(e){return s3(u3(e),8,-1)},l3=G6.Object,f3=a3("".split),d3=K6((function(){return!l3("z").propertyIsEnumerable(0)}))?function(e){return"String"==c3(e)?f3(e,""):l3(e)}:l3,p3=G6.TypeError,h3=function(e){if(null==e)throw p3("Can't call method on "+e);return e},g3=function(e){return d3(h3(e))},v3=function(e){return"function"==typeof e},y3=function(e){return"object"==typeof e?null!==e:v3(e)},m3=function(e,t){return arguments.length<2?function(e){return v3(e)?e:void 0}(G6[e]):G6[e]&&G6[e][t]},b3=a3({}.isPrototypeOf),w3=m3("navigator","userAgent")||"",E3=G6.process,A3=G6.Deno,S3=E3&&E3.versions||A3&&A3.version,C3=S3&&S3.v8;C3&&(q6=(V6=C3.split("."))[0]>0&&V6[0]<4?1:+(V6[0]+V6[1])),!q6&&w3&&(!(V6=w3.match(/Edge\/(\d+)/))||V6[1]>=74)&&(V6=w3.match(/Chrome\/(\d+)/))&&(q6=+V6[1]);var x3=q6,D3=!!Object.getOwnPropertySymbols&&!K6((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&x3&&x3<41})),O3=D3&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,k3=G6.Object,B3=O3?function(e){return"symbol"==typeof e}:function(e){var t=m3("Symbol");return v3(t)&&b3(t.prototype,k3(e))},T3=G6.String,F3=function(e){try{return T3(e)}catch(e){return"Object"}},_3=G6.TypeError,P3=function(e){if(v3(e))return e;throw _3(F3(e)+" is not a function")},j3=function(e,t){var n=e[t];return null==n?void 0:P3(n)},N3=G6.TypeError,R3=Object.defineProperty,I3=function(e,t){try{R3(G6,e,{value:t,configurable:!0,writable:!0})}catch(n){G6[e]=t}return t},L3=G6["__core-js_shared__"]||I3("__core-js_shared__",{}),M3=U6((function(e){(e.exports=function(e,t){return L3[e]||(L3[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"global",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),z3=G6.Object,$3=function(e){return z3(h3(e))},H3=a3({}.hasOwnProperty),U3=Object.hasOwn||function(e,t){return H3($3(e),t)},V3=0,q3=Math.random(),W3=a3(1..toString),G3=function(e){return"Symbol("+(void 0===e?"":e)+")_"+W3(++V3+q3,36)},K3=M3("wks"),Y3=G6.Symbol,X3=Y3&&Y3.for,J3=O3?Y3:Y3&&Y3.withoutSetter||G3,Z3=function(e){if(!U3(K3,e)||!D3&&"string"!=typeof K3[e]){var t="Symbol."+e;D3&&U3(Y3,e)?K3[e]=Y3[e]:K3[e]=O3&&X3?X3(t):J3(t)}return K3[e]},Q3=G6.TypeError,e5=Z3("toPrimitive"),t5=function(e){var t=function(e,t){if(!y3(e)||B3(e))return e;var n,r=j3(e,e5);if(r){if(void 0===t&&(t="default"),n=J6(r,e,t),!y3(n)||B3(n))return n;throw Q3("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&v3(n=e.toString)&&!y3(r=J6(n,e)))return r;if(v3(n=e.valueOf)&&!y3(r=J6(n,e)))return r;if("string"!==t&&v3(n=e.toString)&&!y3(r=J6(n,e)))return r;throw N3("Can't convert object to primitive value")}(e,t)}(e,"string");return B3(t)?t:t+""},n5=G6.document,r5=y3(n5)&&y3(n5.createElement),o5=function(e){return r5?n5.createElement(e):{}},i5=!Y6&&!K6((function(){return 7!=Object.defineProperty(o5("div"),"a",{get:function(){return 7}}).a})),a5=Object.getOwnPropertyDescriptor,u5={f:Y6?a5:function(e,t){if(e=g3(e),t=t5(t),i5)try{return a5(e,t)}catch(e){}if(U3(e,t))return t3(!J6(e3.f,e,t),e[t])}},s5=G6.String,c5=G6.TypeError,l5=function(e){if(y3(e))return e;throw c5(s5(e)+" is not an object")},f5=G6.TypeError,d5=Object.defineProperty,p5={f:Y6?d5:function(e,t,n){if(l5(e),t=t5(t),l5(n),i5)try{return d5(e,t,n)}catch(e){}if("get"in n||"set"in n)throw f5("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},h5=Y6?function(e,t,n){return p5.f(e,t,t3(1,n))}:function(e,t,n){return e[t]=n,e},g5=a3(Function.toString);v3(L3.inspectSource)||(L3.inspectSource=function(e){return g5(e)});var v5,y5,m5,b5=L3.inspectSource,w5=G6.WeakMap,E5=v3(w5)&&/native code/.test(b5(w5)),A5=M3("keys"),S5=function(e){return A5[e]||(A5[e]=G3(e))},C5={},x5=G6.TypeError,D5=G6.WeakMap;if(E5||L3.state){var O5=L3.state||(L3.state=new D5),k5=a3(O5.get),B5=a3(O5.has),T5=a3(O5.set);v5=function(e,t){if(B5(O5,e))throw new x5("Object already initialized");return t.facade=e,T5(O5,e,t),t},y5=function(e){return k5(O5,e)||{}},m5=function(e){return B5(O5,e)}}else{var F5=S5("state");C5[F5]=!0,v5=function(e,t){if(U3(e,F5))throw new x5("Object already initialized");return t.facade=e,h5(e,F5,t),t},y5=function(e){return U3(e,F5)?e[F5]:{}},m5=function(e){return U3(e,F5)}}var _5={set:v5,get:y5,has:m5,enforce:function(e){return m5(e)?y5(e):v5(e,{})},getterFor:function(e){return function(t){var n;if(!y3(t)||(n=y5(t)).type!==e)throw x5("Incompatible receiver, "+e+" required");return n}}},P5=Function.prototype,j5=Y6&&Object.getOwnPropertyDescriptor,N5=U3(P5,"name"),R5={EXISTS:N5,PROPER:N5&&"something"===function(){}.name,CONFIGURABLE:N5&&(!Y6||Y6&&j5(P5,"name").configurable)},I5=U6((function(e){var t=R5.CONFIGURABLE,n=_5.get,r=_5.enforce,o=String(String).split("String");(e.exports=function(e,n,i,a){var u,s=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,l=!!a&&!!a.noTargetGet,f=a&&void 0!==a.name?a.name:n;v3(i)&&("Symbol("===String(f).slice(0,7)&&(f="["+String(f).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!U3(i,"name")||t&&i.name!==f)&&h5(i,"name",f),(u=r(i)).source||(u.source=o.join("string"==typeof f?f:""))),e!==G6?(s?!l&&e[n]&&(c=!0):delete e[n],c?e[n]=i:h5(e,n,i)):c?e[n]=i:I3(n,i)})(Function.prototype,"toString",(function(){return v3(this)&&n(this).source||b5(this)}))})),L5=Math.ceil,M5=Math.floor,z5=function(e){var t=+e;return t!=t||0===t?0:(t>0?M5:L5)(t)},$5=Math.max,H5=Math.min,U5=function(e,t){var n=z5(e);return n<0?$5(n+t,0):H5(n,t)},V5=Math.min,q5=function(e){return e>0?V5(z5(e),9007199254740991):0},W5=function(e){return q5(e.length)},G5=function(e){return function(t,n,r){var o,i=g3(t),a=W5(i),u=U5(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},K5={includes:G5(!0),indexOf:G5(!1)},Y5=K5.indexOf,X5=a3([].push),J5=function(e,t){var n,r=g3(e),o=0,i=[];for(n in r)!U3(C5,n)&&U3(r,n)&&X5(i,n);for(;t.length>o;)U3(r,n=t[o++])&&(~Y5(i,n)||X5(i,n));return i},Z5=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Q5=Z5.concat("length","prototype"),e8={f:Object.getOwnPropertyNames||function(e){return J5(e,Q5)}},t8={f:Object.getOwnPropertySymbols},n8=a3([].concat),r8=m3("Reflect","ownKeys")||function(e){var t=e8.f(l5(e)),n=t8.f;return n?n8(t,n(e)):t},o8=function(e,t){for(var n=r8(t),r=p5.f,o=u5.f,i=0;i<n.length;i++){var a=n[i];U3(e,a)||r(e,a,o(t,a))}},i8=/#|\.prototype\./,a8=function(e,t){var n=s8[u8(e)];return n==l8||n!=c8&&(v3(t)?K6(t):!!t)},u8=a8.normalize=function(e){return String(e).replace(i8,".").toLowerCase()},s8=a8.data={},c8=a8.NATIVE="N",l8=a8.POLYFILL="P",f8=a8,d8=u5.f,p8=function(e,t){var n,r,o,i,a,u=e.target,s=e.global,c=e.stat;if(n=s?G6:c?G6[u]||I3(u,{}):(G6[u]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(a=d8(n,r))&&a.value:n[r],!f8(s?r:u+(c?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;o8(i,o)}(e.sham||o&&o.sham)&&h5(i,"sham",!0),I5(n,r,i,e)}},h8={};h8[Z3("toStringTag")]="z";var g8="[object z]"===String(h8),v8=Z3("toStringTag"),y8=G6.Object,m8="Arguments"==c3(function(){return arguments}()),b8=g8?c3:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=y8(e),v8))?n:m8?c3(t):"Object"==(r=c3(t))&&v3(t.callee)?"Arguments":r},w8=G6.String,E8=function(e){if("Symbol"===b8(e))throw TypeError("Cannot convert a Symbol value to a string");return w8(e)},A8="\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff",S8=a3("".replace),C8="["+A8+"]",x8=RegExp("^"+C8+C8+"*"),D8=RegExp(C8+C8+"*$"),O8=function(e){return function(t){var n=E8(h3(t));return 1&e&&(n=S8(n,x8,"")),2&e&&(n=S8(n,D8,"")),n}},k8={start:O8(1),end:O8(2),trim:O8(3)},B8=R5.PROPER,T8=k8.trim;function F8(e){return e.length?e[0].tagName.toLowerCase():""}function _8(e,t,n){void 0===t&&(t="auto"),void 0===n&&(n="auto");var r=wp(e);return r.attr("width",t),r.attr("height",n),r[0].outerHTML}p8({target:"String",proto:!0,forced:K6((function(){return!!A8.trim()||"âÂá "!=="âÂá ".trim()||B8&&"trim"!==A8.trim.name}))},{trim:function(){return T8(this)}}),p8({global:!0},{globalThis:G6}),$p&&(wp.fn.append=$p),kp&&(wp.fn.on=kp),Zp&&(wp.fn.focus=Zp),Cp&&(wp.fn.attr=Cp),Op&&(wp.fn.val=Op),Lp&&(wp.fn.html=Lp),Up&&(wp.fn.parent=Up),Sp&&(wp.fn.hasClass=Sp),Kp&&(wp.fn.empty=Kp);var P8,j8={type:"video",renderElem:function(e,t,n){var r,o=e,i=o.src,a=void 0===i?"":i,u=o.poster,s=void 0===u?"":u,c=o.width,l=void 0===c?"auto":c,f=o.height,d=void 0===f?"auto":f,p=gO.isNodeSelected(n,e);if(0===a.trim().indexOf("<iframe "))r=cg("div",{className:"w-e-textarea-video-container","data-selected":p?"true":"",innerHTML:_8(a,l,d)});else{var h=cg("video",{poster:s,controls:!0},cg("source",{src:a,type:"video/mp4"}),"Sorry, your browser doesn't support embedded videos.\n æ±æ­ï¼æµè§å¨ä¸æ¯æ video è§é¢");"auto"!==l&&(h.data.width=l),"auto"!==d&&(h.data.height=d),r=cg("div",{className:"w-e-textarea-video-container","data-selected":p?"true":""},h)}return Uh("div",{props:{contentEditable:!1},on:{mousedown:function(e){return e.preventDefault()}}},r)}},N8={type:"video",elemToHtml:function(e,t){var n=e,r=n.src,o=void 0===r?"":r,i=n.poster,a=void 0===i?"":i,u=n.width,s=void 0===u?"auto":u,c=n.height,l=void 0===c?"auto":c,f='<div data-w-e-type="video" data-w-e-is-void>\n';return 0===o.trim().indexOf("<iframe ")?f+=_8(o,s,l):f+='<video poster="'+a+'" controls="true" width="'+s+'" height="'+l+'"><source src="'+o+'" type="video/mp4"/></video>',f+"\n</div>"}},R8=Object.keys||function(e){return J5(e,Z5)},I8=Y6?Object.defineProperties:function(e,t){l5(e);for(var n,r=g3(t),o=R8(t),i=o.length,a=0;i>a;)p5.f(e,n=o[a++],r[n]);return e},L8=m3("document","documentElement"),M8=S5("IE_PROTO"),z8=function(){},$8=function(e){return"<script>"+e+"<\/script>"},H8=function(e){e.write($8("")),e.close();var t=e.parentWindow.Object;return e=null,t},U8=function(){try{P8=new ActiveXObject("htmlfile")}catch(e){}var e,t;U8="undefined"!=typeof document?document.domain&&P8?H8(P8):((t=o5("iframe")).style.display="none",L8.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write($8("document.F=Object")),e.close(),e.F):H8(P8);for(var n=Z5.length;n--;)delete U8.prototype[Z5[n]];return U8()};C5[M8]=!0;var V8=Object.create||function(e,t){var n;return null!==e?(z8.prototype=l5(e),n=new z8,z8.prototype=null,n[M8]=e):n=U8(),void 0===t?n:I8(n,t)},q8=Z3("unscopables"),W8=Array.prototype;null==W8[q8]&&p5.f(W8,q8,{configurable:!0,value:V8(null)});var G8=function(e){W8[q8][e]=!0},K8=K5.includes;p8({target:"Array",proto:!0},{includes:function(e){return K8(this,e,arguments.length>1?arguments[1]:void 0)}}),G8("includes");var Y8={selector:"iframe,video,p",preParseHtml:function(e){var t=wp(e),n=t;if("p"===F8(t)){var r=t.children();if(1===r.length){var o=r[0],i=o.tagName.toLowerCase();["iframe","video"].includes(i)&&(n=wp(o))}}var a=F8(n);if("iframe"!==a&&"video"!==a)return n[0];if("video"===n.parent().attr("data-w-e-type"))return n[0];var u=wp('<div data-w-e-type="video" data-w-e-is-void></div>');return u.append(n),u[0]}},X8=a3(a3.bind),J8=function(e,t){return P3(e),void 0===t?e:X8?X8(e,t):function(){return e.apply(t,arguments)}},Z8=Array.isArray||function(e){return"Array"==c3(e)},Q8=function(){},e7=[],t7=m3("Reflect","construct"),n7=/^\s*(?:class|function)\b/,r7=a3(n7.exec),o7=!n7.exec(Q8),i7=function(e){if(!v3(e))return!1;try{return t7(Q8,e7,e),!0}catch(e){return!1}},a7=!t7||K6((function(){var e;return i7(i7.call)||!i7(Object)||!i7((function(){e=!0}))||e}))?function(e){if(!v3(e))return!1;switch(b8(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return o7||!!r7(n7,b5(e))}:i7,u7=Z3("species"),s7=G6.Array,c7=function(e,t){return new(function(e){var t;return Z8(e)&&(t=e.constructor,(a7(t)&&(t===s7||Z8(t.prototype))||y3(t)&&null===(t=t[u7]))&&(t=void 0)),void 0===t?s7:t}(e))(0===t?0:t)},l7=a3([].push),f7=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=$3(s),g=d3(h),v=J8(c,l),y=W5(g),m=0,b=f||c7,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:l7(w,d)}else switch(e){case 4:return!1;case 7:l7(w,d)}return i?-1:r||o?o:w}},d7={forEach:f7(0),map:f7(1),filter:f7(2),some:f7(3),every:f7(4),find:f7(5),findIndex:f7(6),filterReject:f7(7)},p7=d7.find,h7=!0;"find"in[]&&Array(1).find((function(){h7=!1})),p8({target:"Array",proto:!0,forced:h7},{find:function(e){return p7(this,e,arguments.length>1?arguments[1]:void 0)}}),G8("find");var g7=g8?{}.toString:function(){return"[object "+b8(this)+"]"};function v7(e,t,n,r){return void 0===t&&(t=""),void 0===n&&(n="auto"),void 0===r&&(r="auto"),{type:"video",src:e,poster:t,width:n,height:r,children:[{text:""}]}}g8||I5(Object.prototype,"toString",g7,{unsafe:!0});var y7,m7,b7={selector:'div[data-w-e-type="video"]',parseElemHtml:function(e,t,n){var r=wp(e),o="",i="",a="auto",u="auto",s=r.find("iframe");if(s.length>0)return a=s.attr("width")||"auto",u=s.attr("height")||"auto",v7(o=s[0].outerHTML,i,a,u);var c=r.find("video");return(o=c.attr("src")||"")||c.length>0&&(o=c.find("source").attr("src")||""),a=c.attr("width")||"auto",u=c.attr("height")||"auto",v7(o,i=c.attr("poster")||"",a,u)}},w7=function(){var e=l5(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},E7=G6.RegExp,A7=K6((function(){var e=E7("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),S7=A7||K6((function(){return!E7("a","y").sticky})),C7={BROKEN_CARET:A7||K6((function(){var e=E7("^r","gy");return e.lastIndex=2,null!=e.exec("str")})),MISSED_STICKY:S7,UNSUPPORTED_Y:A7},x7=G6.RegExp,D7=K6((function(){var e=x7(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)})),O7=G6.RegExp,k7=K6((function(){var e=O7("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")})),B7=_5.get,T7=M3("native-string-replace",String.prototype.replace),F7=RegExp.prototype.exec,_7=F7,P7=a3("".charAt),j7=a3("".indexOf),N7=a3("".replace),R7=a3("".slice),I7=(m7=/b*/g,J6(F7,y7=/a/,"a"),J6(F7,m7,"a"),0!==y7.lastIndex||0!==m7.lastIndex),L7=C7.BROKEN_CARET,M7=void 0!==/()??/.exec("")[1];(I7||M7||L7||D7||k7)&&(_7=function(e){var t,n,r,o,i,a,u,s=this,c=B7(s),l=E8(e),f=c.raw;if(f)return f.lastIndex=s.lastIndex,t=J6(_7,f,l),s.lastIndex=f.lastIndex,t;var d=c.groups,p=L7&&s.sticky,h=J6(w7,s),g=s.source,v=0,y=l;if(p&&(h=N7(h,"y",""),-1===j7(h,"g")&&(h+="g"),y=R7(l,s.lastIndex),s.lastIndex>0&&(!s.multiline||s.multiline&&"\n"!==P7(l,s.lastIndex-1))&&(g="(?: "+g+")",y=" "+y,v++),n=new RegExp("^(?:"+g+")",h)),M7&&(n=new RegExp("^"+g+"$(?!\\s)",h)),I7&&(r=s.lastIndex),o=J6(F7,p?n:s,y),p?o?(o.input=R7(o.input,v),o[0]=R7(o[0],v),o.index=s.lastIndex,s.lastIndex+=o[0].length):s.lastIndex=0:I7&&o&&(s.lastIndex=s.global?o.index+o[0].length:r),M7&&o&&o.length>1&&J6(T7,o[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&d)for(o.groups=a=V8(null),i=0;i<d.length;i++)a[(u=d[i])[0]]=o[u[1]];return o});var z7=_7;p8({target:"RegExp",proto:!0,forced:/./.exec!==z7},{exec:z7});var $7=Function.prototype,H7=$7.apply,U7=$7.bind,V7=$7.call,q7="object"==typeof Reflect&&Reflect.apply||(U7?V7.bind(H7):function(){return V7.apply(H7,arguments)}),W7=(Z3("species"),RegExp.prototype),G7=a3("".charAt),K7=a3("".charCodeAt),Y7=a3("".slice),X7=function(e){return function(t,n){var r,o,i=E8(h3(t)),a=z5(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=K7(i,a))<55296||r>56319||a+1===u||(o=K7(i,a+1))<56320||o>57343?e?G7(i,a):r:e?Y7(i,a,a+2):o-56320+(r-55296<<10)+65536}},J7={codeAt:X7(!1),charAt:X7(!0)},Z7=J7.charAt,Q7=function(e,t,n){return t+(n?Z7(e,t).length:1)},e9=Math.floor,t9=a3("".charAt),n9=a3("".replace),r9=a3("".slice),o9=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,i9=/\$([$&'`]|\d{1,2})/g,a9=function(e,t,n,r,o,i){var a=n+e.length,u=r.length,s=i9;return void 0!==o&&(o=$3(o),s=o9),n9(i,s,(function(i,s){var c;switch(t9(s,0)){case"$":return"$";case"&":return e;case"`":return r9(t,0,n);case"'":return r9(t,a);case"<":c=o[r9(s,1,-1)];break;default:var l=+s;if(0===l)return i;if(l>u){var f=e9(l/10);return 0===f?i:f<=u?void 0===r[f-1]?t9(s,1):r[f-1]+t9(s,1):i}c=r[l-1]}return void 0===c?"":c}))},u9=G6.TypeError,s9=function(e,t){var n=e.exec;if(v3(n)){var r=J6(n,e,t);return null!==r&&l5(r),r}if("RegExp"===c3(e))return J6(z7,e,t);throw u9("RegExp#exec called on incompatible receiver")},c9=Z3("replace"),l9=Math.max,f9=Math.min,d9=a3([].concat),p9=a3([].push),h9=a3("".indexOf),g9=a3("".slice),v9="$0"==="a".replace(/./,"$0"),y9=!!/./[c9]&&""===/./[c9]("a","$0");function m9(e){return void 0===e&&(e="r"),e+"-"+vh()}!function(e,t,n){var r=Z3(e),o=!K6((function(){var t={};return t[r]=function(){return 7},7!=""[e](t)})),i=o&&!K6((function(){var e=!1,t=/a/;return t.exec=function(){return e=!0,null},t[r](""),!e}));if(!o||!i||n){var a=a3(/./[r]),u=function(e,t,n){var r=y9?"$":"$0";return[function(e,n){var r=h3(this),o=null==e?void 0:j3(e,c9);return o?J6(o,e,r,n):J6(t,E8(r),e,n)},function(e,o){var i=l5(this),a=E8(e);if("string"==typeof o&&-1===h9(o,r)&&-1===h9(o,"$<")){var u=n(t,i,a,o);if(u.done)return u.value}var s=v3(o);s||(o=E8(o));var c=i.global;if(c){var l=i.unicode;i.lastIndex=0}for(var f=[];;){var d=s9(i,a);if(null===d)break;if(p9(f,d),!c)break;""===E8(d[0])&&(i.lastIndex=Q7(a,q5(i.lastIndex),l))}for(var p,h="",g=0,v=0;v<f.length;v++){for(var y=E8((d=f[v])[0]),m=l9(f9(z5(d.index),a.length),0),b=[],w=1;w<d.length;w++)p9(b,void 0===(p=d[w])?p:String(p));var E=d.groups;if(s){var A=d9([y],b,m,a);void 0!==E&&p9(A,E);var S=E8(q7(o,void 0,A))}else S=a9(y,a,m,b,E,o);m>=g&&(h+=g9(a,g,m)+S,g=m+y.length)}return h+g9(a,g)}]}(0,""[e],(function(e,t,n,r,i){var u=a3(e),s=t.exec;return s===z7||s===W7.exec?o&&!i?{done:!0,value:a(t,n,r)}:{done:!0,value:u(n,t,r)}:{done:!1}}));I5(String.prototype,e,u[0]),I5(W7,r,u[1])}}("replace",0,!!K6((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}))||!v9||y9);var b9=G6.Promise,w9=function(e,t,n){for(var r in t)I5(e,r,t[r],n);return e},E9=G6.String,A9=G6.TypeError,S9=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=a3(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return l5(n),function(e){if("object"==typeof e||v3(e))return e;throw A9("Can't set "+E9(e)+" as a prototype")}(r),t?e(n,r):n.__proto__=r,n}}():void 0),C9=p5.f,x9=Z3("toStringTag"),D9=function(e,t,n){e&&!U3(e=n?e:e.prototype,x9)&&C9(e,x9,{configurable:!0,value:t})},O9=Z3("species"),k9=G6.TypeError,B9=function(e,t){if(b3(t,e))return e;throw k9("Incorrect invocation")},T9={},F9=Z3("iterator"),_9=Array.prototype,P9=Z3("iterator"),j9=function(e){if(null!=e)return j3(e,P9)||j3(e,"@@iterator")||T9[b8(e)]},N9=G6.TypeError,R9=function(e,t,n){var r,o;l5(e);try{if(!(r=j3(e,"return"))){if("throw"===t)throw n;return n}r=J6(r,e)}catch(e){o=!0,r=e}if("throw"===t)throw n;if(o)throw r;return l5(r),n},I9=G6.TypeError,L9=function(e,t){this.stopped=e,this.result=t},M9=L9.prototype,z9=function(e,t,n){var r,o,i,a,u,s,c,l,f=n&&n.that,d=!(!n||!n.AS_ENTRIES),p=!(!n||!n.IS_ITERATOR),h=!(!n||!n.INTERRUPTED),g=J8(t,f),v=function(e){return r&&R9(r,"normal",e),new L9(!0,e)},y=function(e){return d?(l5(e),h?g(e[0],e[1],v):g(e[0],e[1])):h?g(e,v):g(e)};if(p)r=e;else{if(!(o=j9(e)))throw I9(F3(e)+" is not iterable");if(void 0!==(l=o)&&(T9.Array===l||_9[F9]===l)){for(i=0,a=W5(e);a>i;i++)if((u=y(e[i]))&&b3(M9,u))return u;return new L9(!1)}r=function(e,t){var n=arguments.length<2?j9(e):t;if(P3(n))return l5(J6(n,e));throw N9(F3(e)+" is not iterable")}(e,o)}for(s=r.next;!(c=J6(s,r)).done;){try{u=y(c.value)}catch(e){R9(r,"throw",e)}if("object"==typeof u&&u&&b3(M9,u))return u}return new L9(!1)},$9=Z3("iterator"),H9=!1;try{var U9=0,V9={next:function(){return{done:!!U9++}},return:function(){H9=!0}};V9[$9]=function(){return this},Array.from(V9,(function(){throw 2}))}catch(kc){}var q9,W9,G9,K9,Y9=function(e,t){if(!t&&!H9)return!1;var n=!1;try{var r={};r[$9]=function(){return{next:function(){return{done:n=!0}}}},e(r)}catch(e){}return n},X9=G6.TypeError,J9=Z3("species"),Z9=a3([].slice),Q9=/(?:ipad|iphone|ipod).*applewebkit/i.test(w3),eee="process"==c3(G6.process),tee=G6.setImmediate,nee=G6.clearImmediate,ree=G6.process,oee=G6.Dispatch,iee=G6.Function,aee=G6.MessageChannel,uee=G6.String,see=0,cee={};try{q9=G6.location}catch(kc){}var lee=function(e){if(U3(cee,e)){var t=cee[e];delete cee[e],t()}},fee=function(e){return function(){lee(e)}},dee=function(e){lee(e.data)},pee=function(e){G6.postMessage(uee(e),q9.protocol+"//"+q9.host)};tee&&nee||(tee=function(e){var t=Z9(arguments,1);return cee[++see]=function(){q7(v3(e)?e:iee(e),void 0,t)},W9(see),see},nee=function(e){delete cee[e]},eee?W9=function(e){ree.nextTick(fee(e))}:oee&&oee.now?W9=function(e){oee.now(fee(e))}:aee&&!Q9?(K9=(G9=new aee).port2,G9.port1.onmessage=dee,W9=J8(K9.postMessage,K9)):G6.addEventListener&&v3(G6.postMessage)&&!G6.importScripts&&q9&&"file:"!==q9.protocol&&!K6(pee)?(W9=pee,G6.addEventListener("message",dee,!1)):W9="onreadystatechange"in o5("script")?function(e){L8.appendChild(o5("script")).onreadystatechange=function(){L8.removeChild(this),lee(e)}}:function(e){setTimeout(fee(e),0)});var hee,gee,vee,yee,mee,bee,wee,Eee,Aee={set:tee,clear:nee},See=/ipad|iphone|ipod/i.test(w3)&&void 0!==G6.Pebble,Cee=/web0s(?!.*chrome)/i.test(w3),xee=u5.f,Dee=Aee.set,Oee=G6.MutationObserver||G6.WebKitMutationObserver,kee=G6.document,Bee=G6.process,Tee=G6.Promise,Fee=xee(G6,"queueMicrotask"),_ee=Fee&&Fee.value;_ee||(hee=function(){var e,t;for(eee&&(e=Bee.domain)&&e.exit();gee;){t=gee.fn,gee=gee.next;try{t()}catch(e){throw gee?yee():vee=void 0,e}}vee=void 0,e&&e.enter()},Q9||eee||Cee||!Oee||!kee?!See&&Tee&&Tee.resolve?((wee=Tee.resolve(void 0)).constructor=Tee,Eee=J8(wee.then,wee),yee=function(){Eee(hee)}):eee?yee=function(){Bee.nextTick(hee)}:(Dee=J8(Dee,G6),yee=function(){Dee(hee)}):(mee=!0,bee=kee.createTextNode(""),new Oee(hee).observe(bee,{characterData:!0}),yee=function(){bee.data=mee=!mee}));var Pee,jee,Nee,Ree,Iee=_ee||function(e){var t={fn:e,next:void 0};vee&&(vee.next=t),gee||(gee=t,yee()),vee=t},Lee=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=P3(t),this.reject=P3(n)},Mee={f:function(e){return new Lee(e)}},zee=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},$ee="object"==typeof window,Hee=Aee.set,Uee=Z3("species"),Vee="Promise",qee=_5.getterFor(Vee),Wee=_5.set,Gee=_5.getterFor(Vee),Kee=b9&&b9.prototype,Yee=b9,Xee=Kee,Jee=G6.TypeError,Zee=G6.document,Qee=G6.process,ete=Mee.f,tte=ete,nte=!!(Zee&&Zee.createEvent&&G6.dispatchEvent),rte=v3(G6.PromiseRejectionEvent),ote=!1,ite=f8(Vee,(function(){var e=b5(Yee),t=e!==String(Yee);if(!t&&66===x3)return!0;if(x3>=51&&/native code/.test(e))return!1;var n=new Yee((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};return(n.constructor={})[Uee]=r,!(ote=n.then((function(){}))instanceof r)||!t&&$ee&&!rte})),ate=ite||!Y9((function(e){Yee.all(e).catch((function(){}))})),ute=function(e){var t;return!(!y3(e)||!v3(t=e.then))&&t},ste=function(e,t){if(!e.notified){e.notified=!0;var n=e.reactions;Iee((function(){for(var r=e.value,o=1==e.state,i=0;n.length>i;){var a,u,s,c=n[i++],l=o?c.ok:c.fail,f=c.resolve,d=c.reject,p=c.domain;try{l?(o||(2===e.rejection&&dte(e),e.rejection=1),!0===l?a=r:(p&&p.enter(),a=l(r),p&&(p.exit(),s=!0)),a===c.promise?d(Jee("Promise-chain cycle")):(u=ute(a))?J6(u,a,f,d):f(a)):d(r)}catch(e){p&&!s&&p.exit(),d(e)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&lte(e)}))}},cte=function(e,t,n){var r,o;nte?((r=Zee.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),G6.dispatchEvent(r)):r={promise:t,reason:n},!rte&&(o=G6["on"+e])?o(r):"unhandledrejection"===e&&function(e,t){var n=G6.console;n&&n.error&&(1==arguments.length?n.error(e):n.error(e,t))}("Unhandled promise rejection",n)},lte=function(e){J6(Hee,G6,(function(){var t,n=e.facade,r=e.value;if(fte(e)&&(t=zee((function(){eee?Qee.emit("unhandledRejection",r,n):cte("unhandledrejection",n,r)})),e.rejection=eee||fte(e)?2:1,t.error))throw t.value}))},fte=function(e){return 1!==e.rejection&&!e.parent},dte=function(e){J6(Hee,G6,(function(){var t=e.facade;eee?Qee.emit("rejectionHandled",t):cte("rejectionhandled",t,e.value)}))},pte=function(e,t,n){return function(r){e(t,r,n)}},hte=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,ste(e,!0))},gte=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw Jee("Promise can't be resolved itself");var r=ute(t);r?Iee((function(){var n={done:!1};try{J6(r,t,pte(gte,n,e),pte(hte,n,e))}catch(t){hte(n,t,e)}})):(e.value=t,e.state=1,ste(e,!1))}catch(t){hte({done:!1},t,e)}}};if(ite&&(Xee=(Yee=function(e){B9(this,Xee),P3(e),J6(Pee,this);var t=qee(this);try{e(pte(gte,t),pte(hte,t))}catch(e){hte(t,e)}}).prototype,(Pee=function(e){Wee(this,{type:Vee,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=w9(Xee,{then:function(e,t){var n=Gee(this),r=n.reactions,o=ete(function(e,t){var n,r=l5(e).constructor;return void 0===r||null==(n=l5(r)[J9])?t:function(e){if(a7(e))return e;throw X9(F3(e)+" is not a constructor")}(n)}(this,Yee));return o.ok=!v3(e)||e,o.fail=v3(t)&&t,o.domain=eee?Qee.domain:void 0,n.parent=!0,r[r.length]=o,0!=n.state&&ste(n,!1),o.promise},catch:function(e){return this.then(void 0,e)}}),jee=function(){var e=new Pee,t=qee(e);this.promise=e,this.resolve=pte(gte,t),this.reject=pte(hte,t)},Mee.f=ete=function(e){return e===Yee||e===Nee?new jee(e):tte(e)},v3(b9)&&Kee!==Object.prototype)){Ree=Kee.then,ote||(I5(Kee,"then",(function(e,t){var n=this;return new Yee((function(e,t){J6(Ree,n,e,t)})).then(e,t)}),{unsafe:!0}),I5(Kee,"catch",Xee.catch,{unsafe:!0}));try{delete Kee.constructor}catch(kc){}S9&&S9(Kee,Xee)}function vte(e,t,n){return void 0===n&&(n=""),M6(this,void 0,void 0,(function(){var r,o,i,a,u,s,c;return z6(this,(function(l){switch(l.label){case 0:return t?(e.restoreSelection(),r=e.getMenuConfig("insertVideo"),o=r.onInsertedVideo,i=r.checkVideo,a=r.parseVideoSrc,[4,i(t,n)]):[2];case 1:return"string"==typeof(u=l.sent())?(e.alert(u,"error"),[2]):null==u?[2]:[4,a(t)];case 2:return 0!==(s=l.sent()).trim().indexOf("<iframe ")&&(s=s.replace(/</g,"&lt;").replace(/>/g,"&gt;")),c={type:"video",src:s,poster:n,children:[{text:""}]},Promise.resolve().then((function(){ad.insertNodes(e,c)})),o(c),[2]}}))}))}function yte(){return m9("w-e-insert-video")}p8({global:!0,wrap:!0,forced:ite},{Promise:Yee}),D9(Yee,Vee,!1),function(){var e=m3("Promise"),t=p5.f;Y6&&e&&!e[O9]&&t(e,O9,{configurable:!0,get:function(){return this}})}(),Nee=m3(Vee),p8({target:Vee,stat:!0,forced:ite},{reject:function(e){var t=ete(this);return J6(t.reject,void 0,e),t.promise}}),p8({target:Vee,stat:!0,forced:ite},{resolve:function(e){return function(e,t){if(l5(e),y3(t)&&t.constructor===e)return t;var n=Mee.f(e);return(0,n.resolve)(t),n.promise}(this,e)}}),p8({target:Vee,stat:!0,forced:ate},{all:function(e){var t=this,n=ete(t),r=n.resolve,o=n.reject,i=zee((function(){var n=P3(t.resolve),i=[],a=0,u=1;z9(e,(function(e){var s=a++,c=!1;u++,J6(n,t,e).then((function(e){c||(c=!0,i[s]=e,--u||r(i))}),o)})),--u||r(i)}));return i.error&&o(i.value),n.promise},race:function(e){var t=this,n=ete(t),r=n.reject,o=zee((function(){var o=P3(t.resolve);z9(e,(function(e){J6(o,t,e).then(n.resolve,r)}))}));return o.error&&r(o.value),n.promise}});var mte=function(){function e(){this.title=J_("videoModule.insertVideo"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M981.184 160.096C837.568 139.456 678.848 128 512 128S186.432 139.456 42.816 160.096C15.296 267.808 0 386.848 0 512s15.264 244.16 42.816 351.904C186.464 884.544 345.152 896 512 896s325.568-11.456 469.184-32.096C1008.704 756.192 1024 637.152 1024 512s-15.264-244.16-42.816-351.904zM384 704V320l320 192-320 192z"></path></svg>',this.tag="button",this.showModal=!0,this.modalWidth=320,this.$content=null,this.srcInputId=yte(),this.posterInputId=yte(),this.buttonId=yte()}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.exec=function(e,t){},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||!!gO.getSelectedElems(e).some((function(t){var n=gO.getNodeType(t);return"pre"===n||"list-item"===n||!!e.isVoid(t)}))},e.prototype.getModalPositionNode=function(e){return null},e.prototype.getModalContentElem=function(e){var t=this,n=this,r=n.srcInputId,o=n.posterInputId,i=n.buttonId,a=$6(NF(J_("videoModule.videoSrc"),r,J_("videoModule.videoSrcPlaceHolder")),2),u=a[0],s=a[1],c=$6(NF(J_("videoModule.videoPoster"),o,J_("videoModule.videoPosterPlaceHolder")),2),l=c[0],f=c[1],d=wp(s),p=wp(f),h=$6(IF(i,J_("videoModule.ok")),1)[0];if(null==this.$content){var g=wp("<div></div>");g.on("click","#"+i,(function(n){return M6(t,void 0,void 0,(function(){var t,i;return z6(this,(function(a){switch(a.label){case 0:return n.preventDefault(),t=g.find("#"+r).val().trim(),i=g.find("#"+o).val().trim(),[4,vte(e,t,i)];case 1:return a.sent(),e.hidePanelOrModal(),[2]}}))}))})),this.$content=g}var v=this.$content;return v.empty(),v.append(u),v.append(l),v.append(h),d.val(""),p.val(""),setTimeout((function(){d.focus()})),v[0]},e}(),bte=a3([].join),wte=d3!=Object,Ete=function(){var e=[].join;return!!e&&K6((function(){e.call(null,",",1)}))}();p8({target:"Array",proto:!0,forced:wte||!Ete},{join:function(e){return bte(g3(this),void 0===e?",":e)}});var Ate,Ste,Cte,xte=!K6((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Dte=S5("IE_PROTO"),Ote=G6.Object,kte=Ote.prototype,Bte=xte?Ote.getPrototypeOf:function(e){var t=$3(e);if(U3(t,Dte))return t[Dte];var n=t.constructor;return v3(n)&&t instanceof n?n.prototype:t instanceof Ote?kte:null},Tte=Z3("iterator"),Fte=!1;[].keys&&("next"in(Cte=[].keys())?(Ste=Bte(Bte(Cte)))!==Object.prototype&&(Ate=Ste):Fte=!0);var _te=null==Ate||K6((function(){var e={};return Ate[Tte].call(e)!==e}));_te&&(Ate={}),v3(Ate[Tte])||I5(Ate,Tte,(function(){return this}));var Pte={IteratorPrototype:Ate,BUGGY_SAFARI_ITERATORS:Fte},jte=Pte.IteratorPrototype,Nte=function(){return this},Rte=R5.PROPER,Ite=R5.CONFIGURABLE,Lte=Pte.IteratorPrototype,Mte=Pte.BUGGY_SAFARI_ITERATORS,zte=Z3("iterator"),$te=function(){return this},Hte=function(e,t,n,r,o,i,a){!function(e,t,n){var r=t+" Iterator";e.prototype=V8(jte,{next:t3(1,n)}),D9(e,r,!1),T9[r]=Nte}(n,t,r);var u,s,c,l=function(e){if(e===o&&g)return g;if(!Mte&&e in p)return p[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},f=t+" Iterator",d=!1,p=e.prototype,h=p[zte]||p["@@iterator"]||o&&p[o],g=!Mte&&h||l(o),v="Array"==t&&p.entries||h;if(v&&(u=Bte(v.call(new e)))!==Object.prototype&&u.next&&(Bte(u)!==Lte&&(S9?S9(u,Lte):v3(u[zte])||I5(u,zte,$te)),D9(u,f,!0)),Rte&&"values"==o&&h&&"values"!==h.name&&(Ite?h5(p,"name","values"):(d=!0,g=function(){return J6(h,this)})),o)if(s={values:l("values"),keys:i?g:l("keys"),entries:l("entries")},a)for(c in s)(Mte||d||!(c in p))&&I5(p,c,s[c]);else p8({target:t,proto:!0,forced:Mte||d},s);return p[zte]!==g&&I5(p,zte,g,{name:o}),T9[t]=g,s},Ute=_5.set,Vte=_5.getterFor("Array Iterator"),qte=Hte(Array,"Array",(function(e,t){Ute(this,{type:"Array Iterator",target:g3(e),index:0,kind:t})}),(function(){var e=Vte(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values");T9.Arguments=T9.Array,G8("keys"),G8("values"),G8("entries");var Wte=J7.charAt,Gte=_5.set,Kte=_5.getterFor("String Iterator");Hte(String,"String",(function(e){Gte(this,{type:"String Iterator",string:E8(e),index:0})}),(function(){var e,t=Kte(this),n=t.string,r=t.index;return r>=n.length?{value:void 0,done:!0}:(e=Wte(n,r),t.index+=e.length,{value:e,done:!1})}));var Yte=function(e,t,n){var r=t5(t);r in e?p5.f(e,r,t3(0,n)):e[r]=n},Xte=G6.Array,Jte=Math.max,Zte=e8.f,Qte="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],ene={f:function(e){return Qte&&"Window"==c3(e)?function(e){try{return Zte(e)}catch(e){return function(e){for(var t=W5(e),n=U5(void 0,t),r=U5(t,t),o=Xte(Jte(r-n,0)),i=0;n<r;n++,i++)Yte(o,i,e[n]);return o.length=i,o}(Qte)}}(e):Zte(g3(e))}},tne=K6((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}})),nne=Object.isExtensible,rne=K6((function(){nne(1)}))||tne?function(e){return!!y3(e)&&(!tne||"ArrayBuffer"!=c3(e))&&(!nne||nne(e))}:nne,one=!K6((function(){return Object.isExtensible(Object.preventExtensions({}))})),ine=U6((function(e){var t=p5.f,n=!1,r=G3("meta"),o=0,i=function(e){t(e,r,{value:{objectID:"O"+o++,weakData:{}}})},a=e.exports={enable:function(){a.enable=function(){},n=!0;var e=e8.f,t=a3([].splice),o={};o[r]=1,e(o).length&&(e8.f=function(n){for(var o=e(n),i=0,a=o.length;i<a;i++)if(o[i]===r){t(o,i,1);break}return o},p8({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:ene.f}))},fastKey:function(e,t){if(!y3(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!U3(e,r)){if(!rne(e))return"F";if(!t)return"E";i(e)}return e[r].objectID},getWeakData:function(e,t){if(!U3(e,r)){if(!rne(e))return!0;if(!t)return!1;i(e)}return e[r].weakData},onFreeze:function(e){return one&&n&&rne(e)&&!U3(e,r)&&i(e),e}};C5[r]=!0})),ane=ine.getWeakData,une=_5.set,sne=_5.getterFor,cne=d7.find,lne=d7.findIndex,fne=a3([].splice),dne=0,pne=function(e){return e.frozen||(e.frozen=new hne)},hne=function(){this.entries=[]},gne=function(e,t){return cne(e.entries,(function(e){return e[0]===t}))};hne.prototype={get:function(e){var t=gne(this,e);if(t)return t[1]},has:function(e){return!!gne(this,e)},set:function(e,t){var n=gne(this,e);n?n[1]=t:this.entries.push([e,t])},delete:function(e){var t=lne(this.entries,(function(t){return t[0]===e}));return~t&&fne(this.entries,t,1),!!~t}};var vne,yne={getConstructor:function(e,t,n,r){var o=e((function(e,o){B9(e,i),une(e,{type:t,id:dne++,frozen:void 0}),null!=o&&z9(o,e[r],{that:e,AS_ENTRIES:n})})),i=o.prototype,a=sne(t),u=function(e,t,n){var r=a(e),o=ane(l5(t),!0);return!0===o?pne(r).set(t,n):o[r.id]=n,e};return w9(i,{delete:function(e){var t=a(this);if(!y3(e))return!1;var n=ane(e);return!0===n?pne(t).delete(e):n&&U3(n,t.id)&&delete n[t.id]},has:function(e){var t=a(this);if(!y3(e))return!1;var n=ane(e);return!0===n?pne(t).has(e):n&&U3(n,t.id)}}),w9(i,n?{get:function(e){var t=a(this);if(y3(e)){var n=ane(e);return!0===n?pne(t).get(e):n?n[t.id]:void 0}},set:function(e,t){return u(this,e,t)}}:{add:function(e){return u(this,e,!0)}}),o}},mne=_5.enforce,bne=!G6.ActiveXObject&&"ActiveXObject"in G6,wne=function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}},Ene=function(e,t,n){var r=-1!==e.indexOf("Map"),o=-1!==e.indexOf("Weak"),i=r?"set":"add",a=G6[e],u=a&&a.prototype,s=a,c={},l=function(e){var t=a3(u[e]);I5(u,e,"add"==e?function(e){return t(this,0===e?0:e),this}:"delete"==e?function(e){return!(o&&!y3(e))&&t(this,0===e?0:e)}:"get"==e?function(e){return o&&!y3(e)?void 0:t(this,0===e?0:e)}:"has"==e?function(e){return!(o&&!y3(e))&&t(this,0===e?0:e)}:function(e,n){return t(this,0===e?0:e,n),this})};if(f8(e,!v3(a)||!(o||u.forEach&&!K6((function(){(new a).entries().next()})))))s=n.getConstructor(t,e,r,i),ine.enable();else if(f8(e,!0)){var f=new s,d=f[i](o?{}:-0,1)!=f,p=K6((function(){f.has(1)})),h=Y9((function(e){new a(e)})),g=!o&&K6((function(){for(var e=new a,t=5;t--;)e[i](t,t);return!e.has(-0)}));h||((s=t((function(e,t){B9(e,u);var n=function(e,t,n){var r,o;return S9&&v3(r=t.constructor)&&r!==n&&y3(o=r.prototype)&&o!==n.prototype&&S9(e,o),e}(new a,e,s);return null!=t&&z9(t,n[i],{that:n,AS_ENTRIES:r}),n}))).prototype=u,u.constructor=s),(p||g)&&(l("delete"),l("has"),r&&l("get")),(g||d)&&l(i),o&&u.clear&&delete u.clear}return c[e]=s,p8({global:!0,forced:s!=a},c),D9(s,e),o||n.setStrong(s,e,r),s}("WeakMap",wne,yne);if(E5&&bne){vne=yne.getConstructor(wne,"WeakMap",!0),ine.enable();var Ane=Ene.prototype,Sne=a3(Ane.delete),Cne=a3(Ane.has),xne=a3(Ane.get),Dne=a3(Ane.set);w9(Ane,{delete:function(e){if(y3(e)&&!rne(e)){var t=mne(this);return t.frozen||(t.frozen=new vne),Sne(this,e)||t.frozen.delete(e)}return Sne(this,e)},has:function(e){if(y3(e)&&!rne(e)){var t=mne(this);return t.frozen||(t.frozen=new vne),Cne(this,e)||t.frozen.has(e)}return Cne(this,e)},get:function(e){if(y3(e)&&!rne(e)){var t=mne(this);return t.frozen||(t.frozen=new vne),Cne(this,e)?xne(this,e):t.frozen.get(e)}return xne(this,e)},set:function(e,t){if(y3(e)&&!rne(e)){var n=mne(this);n.frozen||(n.frozen=new vne),Cne(this,e)?Dne(this,e,t):n.frozen.set(e,t)}else Dne(this,e,t);return this}})}var One={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},kne=o5("span").classList,Bne=kne&&kne.constructor&&kne.constructor.prototype,Tne=Bne===Object.prototype?void 0:Bne,Fne=Z3("iterator"),_ne=Z3("toStringTag"),Pne=qte.values,jne=function(e,t){if(e){if(e[Fne]!==Pne)try{h5(e,Fne,Pne)}catch(t){e[Fne]=Pne}if(e[_ne]||h5(e,_ne,t),One[t])for(var n in qte)if(e[n]!==qte[n])try{h5(e,n,qte[n])}catch(t){e[n]=qte[n]}}};for(var Nne in One)jne(G6[Nne]&&G6[Nne].prototype,Nne);jne(Tne,"DOMTokenList");var Rne=R5.EXISTS,Ine=p5.f,Lne=Function.prototype,Mne=a3(Lne.toString),zne=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,$ne=a3(zne.exec);Y6&&!Rne&&Ine(Lne,"name",{configurable:!0,get:function(){try{return $ne(zne,Mne(this))[1]}catch(e){return""}}});var Hne=Z3("species"),Une=x3>=51||!K6((function(){var e=[];return(e.constructor={})[Hne]=function(){return{foo:1}},1!==e.slice(Boolean).foo})),Vne=Z3("species"),qne=G6.Array,Wne=Math.max;function Gne(e){return e.getMenuConfig("uploadVideo")}p8({target:"Array",proto:!0,forced:!Une},{slice:function(e,t){var n,r,o,i=g3(this),a=W5(i),u=U5(e,a),s=U5(void 0===t?a:t,a);if(Z8(i)&&(n=i.constructor,(a7(n)&&(n===qne||Z8(n.prototype))||y3(n)&&null===(n=n[Vne]))&&(n=void 0),n===qne||void 0===n))return Z9(i,u,s);for(r=new(void 0===n?qne:n)(Wne(s-u,0)),o=0;u<s;u++,o++)u in i&&Yte(r,o,i[u]);return r.length=o,r}});var Kne=new WeakMap;function Yne(e,t){return M6(this,void 0,void 0,(function(){var n,r,o,i;return z6(this,(function(a){switch(a.label){case 0:return n=function(e){var t=Kne.get(e);if(null!=t)return t;var n=Gne(e),r=n.onSuccess,o=n.onProgress,i=n.onFailed,a=n.customInsert,u=n.onError;return t=a_(L6(L6({},n),{onProgress:function(t){e.showProgressBar(t),o&&o(t)},onSuccess:function(t,n){if(a)return a(n,(function(t,n){return vte(e,t,n)})),void r(t,n);var o=n.errno,u=void 0===o?1:o,s=n.data,c=void 0===s?{}:s;if(0===u){var l=c.url,f=void 0===l?"":l,d=c.poster;vte(e,f,void 0===d?"":d),r(t,n)}else i(t,n)},onError:function(e,t,n){u(e,t,n)}})),Kne.set(e,t),t}(e),r=t.name,o=t.type,i=t.size,n.addFile({name:r,type:o,size:i,data:t}),[4,n.upload()];case 1:return a.sent(),[2]}}))}))}var Xne=function(){function e(){this.title=J_("videoModule.uploadVideo"),this.iconSvg='<svg viewBox="0 0 1056 1024"><path d="M805.902261 521.819882a251.441452 251.441452 0 0 0-251.011972 246.600033 251.051015 251.051015 0 1 0 502.023944 8.823877 253.237463 253.237463 0 0 0-251.011972-255.42391z m59.463561 240.001647v129.898403h-116.701631v-129.898403h-44.041298l101.279368-103.504859 101.279368 103.504859z" p-id="6802"></path><path d="M788.254507 0.000781H99.094092A98.663439 98.663439 0 0 0 0.001171 99.093701v590.067495a98.663439 98.663439 0 0 0 99.092921 99.092921h411.7549a266.434235 266.434235 0 0 1-2.186448-41.815807 275.843767 275.843767 0 0 1 275.180024-270.729042 270.650955 270.650955 0 0 1 103.504859 19.834201V99.093701A101.51363 101.51363 0 0 0 788.254507 0.000781zM295.054441 640.747004V147.507894l394.146189 246.600033z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.exec=function(e,t){var n=this.getMenuConfig(e),r=n.allowedFileTypes,o=void 0===r?[]:r,i=n.customBrowseAndUpload;if(i)i((function(t,n){return vte(e,t,n)}));else{var a="";o.length>0&&(a='accept="'+o.join(", ")+'"');var u=wp("body"),s=wp('<input type="file" '+a+" multiple/>");s.hide(),u.append(s),s.click(),s.on("change",(function(){var t=s[0].files;!function(e,t){var n,r;M6(this,void 0,void 0,(function(){var o,i,a,u,s,c;return z6(this,(function(l){switch(l.label){case 0:if(null==t)return[2];o=Array.prototype.slice.call(t),i=Gne(e).customUpload,l.label=1;case 1:l.trys.push([1,9,10,15]),a=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,o){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,o,(t=e[n](t)).done,t.value)}))}}}(o),l.label=2;case 2:return[4,a.next()];case 3:return(u=l.sent()).done?[3,8]:(s=u.value,i?[4,i(s,(function(t,n){return vte(e,t,n)}))]:[3,5]);case 4:return l.sent(),[3,7];case 5:return[4,Yne(e,s)];case 6:l.sent(),l.label=7;case 7:return[3,2];case 8:return[3,15];case 9:return c=l.sent(),n={error:c},[3,15];case 10:return l.trys.push([10,,13,14]),u&&!u.done&&(r=a.return)?[4,r.call(a)]:[3,12];case 11:l.sent(),l.label=12;case 12:return[3,14];case 13:if(n)throw n.error;return[7];case 14:return[7];case 15:return[2]}}))}))}(e,t)}))}},e.prototype.isDisabled=function(e){var t=e.selection;return null==t||!Nf.isCollapsed(t)||!!gO.getSelectedElems(e).some((function(t){var n=gO.getNodeType(t);return"pre"===n||"list-item"===n||!!e.isVoid(t)}))},e.prototype.getMenuConfig=function(e){return e.getMenuConfig("uploadVideo")},e}(),Jne=R5.PROPER,Zne=RegExp.prototype,Qne=Zne.toString,ere=a3(w7),tre=K6((function(){return"/a/b"!=Qne.call({source:"a",flags:"b"})})),nre=Jne&&"toString"!=Qne.name;function rre(){return m9("w-e-insert-video")}(tre||nre)&&I5(RegExp.prototype,"toString",(function(){var e=l5(this),t=E8(e.source),n=e.flags;return"/"+t+"/"+E8(void 0===n&&b3(Zne,e)&&!("flags"in Zne)?ere(e):n)}),{unsafe:!0});var ore=function(){function e(){this.title=J_("videoModule.editSize"),this.tag="button",this.showModal=!0,this.modalWidth=320,this.$content=null,this.widthInputId=rre(),this.heightInputId=rre(),this.buttonId=rre()}return e.prototype.getSelectedVideoNode=function(e){return gO.getSelectedNodeByType(e,"video")},e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.exec=function(e,t){},e.prototype.isDisabled=function(e){return null==e.selection||null==this.getSelectedVideoNode(e)},e.prototype.getModalPositionNode=function(e){return this.getSelectedVideoNode(e)},e.prototype.getModalContentElem=function(e){var t=this,n=t.widthInputId,r=t.heightInputId,o=t.buttonId,i=$6(NF(J_("videoModule.width"),n,"auto"),2),a=i[0],u=wp(i[1]),s=$6(NF(J_("videoModule.height"),r,"auto"),2),c=s[0],l=wp(s[1]),f=$6(IF(o,J_("videoModule.ok")),1)[0];if(null==this.$content){var d=wp("<div></div>");d.on("click","#"+o,(function(t){t.preventDefault();var o=d.find("#"+n).val().trim(),i=d.find("#"+r).val().trim(),a=parseInt(o),u=parseInt(i),s=a?a.toString():"auto",c=u?u.toString():"auto";e.restoreSelection(),ad.setNodes(e,{width:s,height:c},{match:function(e){return gO.checkNodeType(e,"video")}}),e.hidePanelOrModal()})),this.$content=d}var p=this.$content;p.empty(),p.append(a),p.append(c),p.append(f);var h=this.getSelectedVideoNode(e);if(null==h)return p[0];var g=h.width,v=void 0===g?"auto":g,y=h.height,m=void 0===y?"auto":y;return u.val(v),l.val(m),setTimeout((function(){u.focus()})),p[0]},e}(),ire={renderElems:[j8],elemsToHtml:[N8],preParseHtml:[Y8],parseElemsHtml:[b7],menus:[{key:"insertVideo",factory:function(){return new mte},config:{onInsertedVideo:function(e){},checkVideo:function(e,t){return!0},parseVideoSrc:function(e){return e}}},{key:"uploadVideo",factory:function(){return new Xne},config:{server:"",fieldName:"wangeditor-uploaded-video",maxFileSize:10485760,maxNumberOfFiles:5,allowedFileTypes:["video/*"],meta:{},metaWithUrl:!1,withCredentials:!1,timeout:3e4,onBeforeUpload:function(e){return e},onProgress:function(e){},onSuccess:function(e,t){},onFailed:function(e,t){console.error("'"+e.name+"' upload failed",t)},onError:function(e,t,n){console.error("'"+e.name+" upload error",t,n)}}},{key:"editVideoSize",factory:function(){return new ore}}],editorPlugin:function(e){var t=e.isVoid,n=e.normalizeNode,r=e;return r.isVoid=function(e){return"video"===e.type||t(e)},r.normalizeNode=function(e){var t=$6(e,2),o=t[0],i=t[1];return"video"===gO.getNodeType(o)&&gO.isLastNode(r,o)&&ad.insertNodes(r,gO.genEmptyParagraph(),{at:[i[0]+1]}),n([o,i])},r}};K_("en",{uploadImgModule:{uploadImage:"Upload Image",uploadError:"{{fileName}} upload error"}}),K_("zh-CN",{uploadImgModule:{uploadImage:"ä¸ä¼ å¾ç",uploadError:"{{fileName}} ä¸ä¼ åºé"}});var are="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function ure(e){var t={exports:{}};return e(t,t.exports),t.exports}var sre,cre,lre=function(e){return e&&e.Math==Math&&e},fre=lre("object"==typeof globalThis&&globalThis)||lre("object"==typeof window&&window)||lre("object"==typeof self&&self)||lre("object"==typeof are&&are)||function(){return this}()||Function("return this")(),dre=function(e){try{return!!e()}catch(e){return!0}},pre=!dre((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),hre=Function.prototype.call,gre=hre.bind?hre.bind(hre):function(){return hre.apply(hre,arguments)},vre={}.propertyIsEnumerable,yre=Object.getOwnPropertyDescriptor,mre={f:yre&&!vre.call({1:2},1)?function(e){var t=yre(this,e);return!!t&&t.enumerable}:vre},bre=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},wre=Function.prototype,Ere=wre.bind,Are=wre.call,Sre=Ere&&Ere.bind(Are),Cre=Ere?function(e){return e&&Sre(Are,e)}:function(e){return e&&function(){return Are.apply(e,arguments)}},xre=Cre({}.toString),Dre=Cre("".slice),Ore=function(e){return Dre(xre(e),8,-1)},kre=fre.Object,Bre=Cre("".split),Tre=dre((function(){return!kre("z").propertyIsEnumerable(0)}))?function(e){return"String"==Ore(e)?Bre(e,""):kre(e)}:kre,Fre=fre.TypeError,_re=function(e){if(null==e)throw Fre("Can't call method on "+e);return e},Pre=function(e){return Tre(_re(e))},jre=function(e){return"function"==typeof e},Nre=function(e){return"object"==typeof e?null!==e:jre(e)},Rre=function(e,t){return arguments.length<2?function(e){return jre(e)?e:void 0}(fre[e]):fre[e]&&fre[e][t]},Ire=Cre({}.isPrototypeOf),Lre=Rre("navigator","userAgent")||"",Mre=fre.process,zre=fre.Deno,$re=Mre&&Mre.versions||zre&&zre.version,Hre=$re&&$re.v8;Hre&&(cre=(sre=Hre.split("."))[0]>0&&sre[0]<4?1:+(sre[0]+sre[1])),!cre&&Lre&&(!(sre=Lre.match(/Edge\/(\d+)/))||sre[1]>=74)&&(sre=Lre.match(/Chrome\/(\d+)/))&&(cre=+sre[1]);var Ure=cre,Vre=!!Object.getOwnPropertySymbols&&!dre((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&Ure&&Ure<41})),qre=Vre&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Wre=fre.Object,Gre=qre?function(e){return"symbol"==typeof e}:function(e){var t=Rre("Symbol");return jre(t)&&Ire(t.prototype,Wre(e))},Kre=fre.String,Yre=function(e){try{return Kre(e)}catch(e){return"Object"}},Xre=fre.TypeError,Jre=function(e){if(jre(e))return e;throw Xre(Yre(e)+" is not a function")},Zre=function(e,t){var n=e[t];return null==n?void 0:Jre(n)},Qre=fre.TypeError,eoe=Object.defineProperty,toe=function(e,t){try{eoe(fre,e,{value:t,configurable:!0,writable:!0})}catch(n){fre[e]=t}return t},noe=fre["__core-js_shared__"]||toe("__core-js_shared__",{}),roe=ure((function(e){(e.exports=function(e,t){return noe[e]||(noe[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"global",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),ooe=fre.Object,ioe=function(e){return ooe(_re(e))},aoe=Cre({}.hasOwnProperty),uoe=Object.hasOwn||function(e,t){return aoe(ioe(e),t)},soe=0,coe=Math.random(),loe=Cre(1..toString),foe=function(e){return"Symbol("+(void 0===e?"":e)+")_"+loe(++soe+coe,36)},doe=roe("wks"),poe=fre.Symbol,hoe=poe&&poe.for,goe=qre?poe:poe&&poe.withoutSetter||foe,voe=function(e){if(!uoe(doe,e)||!Vre&&"string"!=typeof doe[e]){var t="Symbol."+e;Vre&&uoe(poe,e)?doe[e]=poe[e]:doe[e]=qre&&hoe?hoe(t):goe(t)}return doe[e]},yoe=fre.TypeError,moe=voe("toPrimitive"),boe=function(e){var t=function(e,t){if(!Nre(e)||Gre(e))return e;var n,r=Zre(e,moe);if(r){if(void 0===t&&(t="default"),n=gre(r,e,t),!Nre(n)||Gre(n))return n;throw yoe("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&jre(n=e.toString)&&!Nre(r=gre(n,e)))return r;if(jre(n=e.valueOf)&&!Nre(r=gre(n,e)))return r;if("string"!==t&&jre(n=e.toString)&&!Nre(r=gre(n,e)))return r;throw Qre("Can't convert object to primitive value")}(e,t)}(e,"string");return Gre(t)?t:t+""},woe=fre.document,Eoe=Nre(woe)&&Nre(woe.createElement),Aoe=function(e){return Eoe?woe.createElement(e):{}},Soe=!pre&&!dre((function(){return 7!=Object.defineProperty(Aoe("div"),"a",{get:function(){return 7}}).a})),Coe=Object.getOwnPropertyDescriptor,xoe={f:pre?Coe:function(e,t){if(e=Pre(e),t=boe(t),Soe)try{return Coe(e,t)}catch(e){}if(uoe(e,t))return bre(!gre(mre.f,e,t),e[t])}},Doe=fre.String,Ooe=fre.TypeError,koe=function(e){if(Nre(e))return e;throw Ooe(Doe(e)+" is not an object")},Boe=fre.TypeError,Toe=Object.defineProperty,Foe={f:pre?Toe:function(e,t,n){if(koe(e),t=boe(t),koe(n),Soe)try{return Toe(e,t,n)}catch(e){}if("get"in n||"set"in n)throw Boe("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},_oe=pre?function(e,t,n){return Foe.f(e,t,bre(1,n))}:function(e,t,n){return e[t]=n,e},Poe=Cre(Function.toString);jre(noe.inspectSource)||(noe.inspectSource=function(e){return Poe(e)});var joe,Noe,Roe,Ioe=noe.inspectSource,Loe=fre.WeakMap,Moe=jre(Loe)&&/native code/.test(Ioe(Loe)),zoe=roe("keys"),$oe=function(e){return zoe[e]||(zoe[e]=foe(e))},Hoe={},Uoe=fre.TypeError,Voe=fre.WeakMap;if(Moe||noe.state){var qoe=noe.state||(noe.state=new Voe),Woe=Cre(qoe.get),Goe=Cre(qoe.has),Koe=Cre(qoe.set);joe=function(e,t){if(Goe(qoe,e))throw new Uoe("Object already initialized");return t.facade=e,Koe(qoe,e,t),t},Noe=function(e){return Woe(qoe,e)||{}},Roe=function(e){return Goe(qoe,e)}}else{var Yoe=$oe("state");Hoe[Yoe]=!0,joe=function(e,t){if(uoe(e,Yoe))throw new Uoe("Object already initialized");return t.facade=e,_oe(e,Yoe,t),t},Noe=function(e){return uoe(e,Yoe)?e[Yoe]:{}},Roe=function(e){return uoe(e,Yoe)}}var Xoe={set:joe,get:Noe,has:Roe,enforce:function(e){return Roe(e)?Noe(e):joe(e,{})},getterFor:function(e){return function(t){var n;if(!Nre(t)||(n=Noe(t)).type!==e)throw Uoe("Incompatible receiver, "+e+" required");return n}}},Joe=Function.prototype,Zoe=pre&&Object.getOwnPropertyDescriptor,Qoe=uoe(Joe,"name"),eie={EXISTS:Qoe,PROPER:Qoe&&"something"===function(){}.name,CONFIGURABLE:Qoe&&(!pre||pre&&Zoe(Joe,"name").configurable)},tie=ure((function(e){var t=eie.CONFIGURABLE,n=Xoe.get,r=Xoe.enforce,o=String(String).split("String");(e.exports=function(e,n,i,a){var u,s=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,l=!!a&&!!a.noTargetGet,f=a&&void 0!==a.name?a.name:n;jre(i)&&("Symbol("===String(f).slice(0,7)&&(f="["+String(f).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!uoe(i,"name")||t&&i.name!==f)&&_oe(i,"name",f),(u=r(i)).source||(u.source=o.join("string"==typeof f?f:""))),e!==fre?(s?!l&&e[n]&&(c=!0):delete e[n],c?e[n]=i:_oe(e,n,i)):c?e[n]=i:toe(n,i)})(Function.prototype,"toString",(function(){return jre(this)&&n(this).source||Ioe(this)}))})),nie=Math.ceil,rie=Math.floor,oie=function(e){var t=+e;return t!=t||0===t?0:(t>0?rie:nie)(t)},iie=Math.max,aie=Math.min,uie=function(e,t){var n=oie(e);return n<0?iie(n+t,0):aie(n,t)},sie=Math.min,cie=function(e){return e>0?sie(oie(e),9007199254740991):0},lie=function(e){return cie(e.length)},fie=function(e){return function(t,n,r){var o,i=Pre(t),a=lie(i),u=uie(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},die=(fie(!0),fie(!1)),pie=Cre([].push),hie=function(e,t){var n,r=Pre(e),o=0,i=[];for(n in r)!uoe(Hoe,n)&&uoe(r,n)&&pie(i,n);for(;t.length>o;)uoe(r,n=t[o++])&&(~die(i,n)||pie(i,n));return i},gie=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],vie=gie.concat("length","prototype"),yie={f:Object.getOwnPropertyNames||function(e){return hie(e,vie)}},mie={f:Object.getOwnPropertySymbols},bie=Cre([].concat),wie=Rre("Reflect","ownKeys")||function(e){var t=yie.f(koe(e)),n=mie.f;return n?bie(t,n(e)):t},Eie=function(e,t){for(var n=wie(t),r=Foe.f,o=xoe.f,i=0;i<n.length;i++){var a=n[i];uoe(e,a)||r(e,a,o(t,a))}},Aie=/#|\.prototype\./,Sie=function(e,t){var n=xie[Cie(e)];return n==Oie||n!=Die&&(jre(t)?dre(t):!!t)},Cie=Sie.normalize=function(e){return String(e).replace(Aie,".").toLowerCase()},xie=Sie.data={},Die=Sie.NATIVE="N",Oie=Sie.POLYFILL="P",kie=Sie,Bie=xoe.f,Tie=function(e,t){var n,r,o,i,a,u=e.target,s=e.global,c=e.stat;if(n=s?fre:c?fre[u]||toe(u,{}):(fre[u]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(a=Bie(n,r))&&a.value:n[r],!kie(s?r:u+(c?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;Eie(i,o)}(e.sham||o&&o.sham)&&_oe(i,"sham",!0),tie(n,r,i,e)}},Fie=Array.isArray||function(e){return"Array"==Ore(e)},_ie={};_ie[voe("toStringTag")]="z";var Pie="[object z]"===String(_ie),jie=voe("toStringTag"),Nie=fre.Object,Rie="Arguments"==Ore(function(){return arguments}()),Iie=Pie?Ore:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Nie(e),jie))?n:Rie?Ore(t):"Object"==(r=Ore(t))&&jre(t.callee)?"Arguments":r},Lie=function(){},Mie=[],zie=Rre("Reflect","construct"),$ie=/^\s*(?:class|function)\b/,Hie=Cre($ie.exec),Uie=!$ie.exec(Lie),Vie=function(e){if(!jre(e))return!1;try{return zie(Lie,Mie,e),!0}catch(e){return!1}},qie=!zie||dre((function(){var e;return Vie(Vie.call)||!Vie(Object)||!Vie((function(){e=!0}))||e}))?function(e){if(!jre(e))return!1;switch(Iie(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return Uie||!!Hie($ie,Ioe(e))}:Vie,Wie=function(e,t,n){var r=boe(t);r in e?Foe.f(e,r,bre(0,n)):e[r]=n},Gie=voe("species"),Kie=Cre([].slice),Yie=Ure>=51||!dre((function(){var e=[];return(e.constructor={})[Gie]=function(){return{foo:1}},1!==e.slice(Boolean).foo})),Xie=voe("species"),Jie=fre.Array,Zie=Math.max;Tie({target:"Array",proto:!0,forced:!Yie},{slice:function(e,t){var n,r,o,i=Pre(this),a=lie(i),u=uie(e,a),s=uie(void 0===t?a:t,a);if(Fie(i)&&(n=i.constructor,(qie(n)&&(n===Jie||Fie(n.prototype))||Nre(n)&&null===(n=n[Xie]))&&(n=void 0),n===Jie||void 0===n))return Kie(i,u,s);for(r=new(void 0===n?Jie:n)(Zie(s-u,0)),o=0;u<s;u++,o++)u in i&&Wie(r,o,i[u]);return r.length=o,r}});var Qie=Pie?{}.toString:function(){return"[object "+Iie(this)+"]"};Pie||tie(Object.prototype,"toString",Qie,{unsafe:!0});var eae,tae=fre.String,nae=function(e){if("Symbol"===Iie(e))throw TypeError("Cannot convert a Symbol value to a string");return tae(e)},rae=function(){var e=koe(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},oae=fre.RegExp,iae=dre((function(){var e=oae("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),aae=iae||dre((function(){return!oae("a","y").sticky})),uae={BROKEN_CARET:iae||dre((function(){var e=oae("^r","gy");return e.lastIndex=2,null!=e.exec("str")})),MISSED_STICKY:aae,UNSUPPORTED_Y:iae},sae=Object.keys||function(e){return hie(e,gie)},cae=pre?Object.defineProperties:function(e,t){koe(e);for(var n,r=Pre(t),o=sae(t),i=o.length,a=0;i>a;)Foe.f(e,n=o[a++],r[n]);return e},lae=Rre("document","documentElement"),fae=$oe("IE_PROTO"),dae=function(){},pae=function(e){return"<script>"+e+"<\/script>"},hae=function(e){e.write(pae("")),e.close();var t=e.parentWindow.Object;return e=null,t},gae=function(){try{eae=new ActiveXObject("htmlfile")}catch(e){}var e,t;gae="undefined"!=typeof document?document.domain&&eae?hae(eae):((t=Aoe("iframe")).style.display="none",lae.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(pae("document.F=Object")),e.close(),e.F):hae(eae);for(var n=gie.length;n--;)delete gae.prototype[gie[n]];return gae()};Hoe[fae]=!0;var vae,yae,mae=Object.create||function(e,t){var n;return null!==e?(dae.prototype=koe(e),n=new dae,dae.prototype=null,n[fae]=e):n=gae(),void 0===t?n:cae(n,t)},bae=fre.RegExp,wae=dre((function(){var e=bae(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)})),Eae=fre.RegExp,Aae=dre((function(){var e=Eae("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")})),Sae=Xoe.get,Cae=roe("native-string-replace",String.prototype.replace),xae=RegExp.prototype.exec,Dae=xae,Oae=Cre("".charAt),kae=Cre("".indexOf),Bae=Cre("".replace),Tae=Cre("".slice),Fae=(yae=/b*/g,gre(xae,vae=/a/,"a"),gre(xae,yae,"a"),0!==vae.lastIndex||0!==yae.lastIndex),_ae=uae.BROKEN_CARET,Pae=void 0!==/()??/.exec("")[1];(Fae||Pae||_ae||wae||Aae)&&(Dae=function(e){var t,n,r,o,i,a,u,s=this,c=Sae(s),l=nae(e),f=c.raw;if(f)return f.lastIndex=s.lastIndex,t=gre(Dae,f,l),s.lastIndex=f.lastIndex,t;var d=c.groups,p=_ae&&s.sticky,h=gre(rae,s),g=s.source,v=0,y=l;if(p&&(h=Bae(h,"y",""),-1===kae(h,"g")&&(h+="g"),y=Tae(l,s.lastIndex),s.lastIndex>0&&(!s.multiline||s.multiline&&"\n"!==Oae(l,s.lastIndex-1))&&(g="(?: "+g+")",y=" "+y,v++),n=new RegExp("^(?:"+g+")",h)),Pae&&(n=new RegExp("^"+g+"$(?!\\s)",h)),Fae&&(r=s.lastIndex),o=gre(xae,p?n:s,y),p?o?(o.input=Tae(o.input,v),o[0]=Tae(o[0],v),o.index=s.lastIndex,s.lastIndex+=o[0].length):s.lastIndex=0:Fae&&o&&(s.lastIndex=s.global?o.index+o[0].length:r),Pae&&o&&o.length>1&&gre(Cae,o[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&d)for(o.groups=a=mae(null),i=0;i<d.length;i++)a[(u=d[i])[0]]=o[u[1]];return o});var jae=Dae;Tie({target:"RegExp",proto:!0,forced:/./.exec!==jae},{exec:jae});var Nae=Function.prototype,Rae=Nae.apply,Iae=Nae.bind,Lae=Nae.call,Mae="object"==typeof Reflect&&Reflect.apply||(Iae?Lae.bind(Rae):function(){return Lae.apply(Rae,arguments)}),zae=voe("species"),$ae=RegExp.prototype,Hae=voe("match"),Uae=fre.TypeError,Vae=voe("species"),qae=function(e,t){var n,r=koe(e).constructor;return void 0===r||null==(n=koe(r)[Vae])?t:function(e){if(qie(e))return e;throw Uae(Yre(e)+" is not a constructor")}(n)},Wae=Cre("".charAt),Gae=Cre("".charCodeAt),Kae=Cre("".slice),Yae=function(e){return function(t,n){var r,o,i=nae(_re(t)),a=oie(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=Gae(i,a))<55296||r>56319||a+1===u||(o=Gae(i,a+1))<56320||o>57343?e?Wae(i,a):r:e?Kae(i,a,a+2):o-56320+(r-55296<<10)+65536}},Xae={codeAt:Yae(!1),charAt:Yae(!0)},Jae=Xae.charAt,Zae=function(e,t,n){return t+(n?Jae(e,t).length:1)},Qae=fre.Array,eue=Math.max,tue=function(e,t,n){for(var r=lie(e),o=uie(t,r),i=uie(void 0===n?r:n,r),a=Qae(eue(i-o,0)),u=0;o<i;o++,u++)Wie(a,u,e[o]);return a.length=u,a},nue=fre.TypeError,rue=function(e,t){var n=e.exec;if(jre(n)){var r=gre(n,e,t);return null!==r&&koe(r),r}if("RegExp"===Ore(e))return gre(jae,e,t);throw nue("RegExp#exec called on incompatible receiver")},oue=uae.UNSUPPORTED_Y,iue=Math.min,aue=[].push,uue=Cre(/./.exec),sue=Cre(aue),cue=Cre("".slice);!function(e,t,n,r){var o=voe(e),i=!dre((function(){var t={};return t[o]=function(){return 7},7!=""[e](t)})),a=i&&!dre((function(){var e=!1,t=/a/;return(t={}).constructor={},t.constructor[zae]=function(){return t},t.flags="",t[o]=/./[o],t.exec=function(){return e=!0,null},t[o](""),!e}));if(!i||!a||n){var u=Cre(/./[o]),s=function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r,o,i=nae(_re(this)),a=void 0===n?4294967295:n>>>0;if(0===a)return[];if(void 0===e)return[i];if(!Nre(r=e)||!(void 0!==(o=r[Hae])?o:"RegExp"==Ore(r)))return gre(t,i,e,a);for(var u,s,c,l=[],f=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),d=0,p=new RegExp(e.source,f+"g");(u=gre(jae,p,i))&&!((s=p.lastIndex)>d&&(sue(l,cue(i,d,u.index)),u.length>1&&u.index<i.length&&Mae(aue,l,tue(u,1)),c=u[0].length,d=s,l.length>=a));)p.lastIndex===u.index&&p.lastIndex++;return d===i.length?!c&&uue(p,"")||sue(l,""):sue(l,cue(i,d)),l.length>a?tue(l,0,a):l}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:gre(t,this,e,n)}:t,[function(t,n){var o=_re(this),i=null==t?void 0:Zre(t,e);return i?gre(i,t,o,n):gre(r,nae(o),t,n)},function(e,o){var i=koe(this),a=nae(e),u=n(r,i,a,o,r!==t);if(u.done)return u.value;var s=qae(i,RegExp),c=i.unicode,l=(i.ignoreCase?"i":"")+(i.multiline?"m":"")+(i.unicode?"u":"")+(oue?"g":"y"),f=new s(oue?"^(?:"+i.source+")":i,l),d=void 0===o?4294967295:o>>>0;if(0===d)return[];if(0===a.length)return null===rue(f,a)?[a]:[];for(var p=0,h=0,g=[];h<a.length;){f.lastIndex=oue?0:h;var v,y=rue(f,oue?cue(a,h):a);if(null===y||(v=iue(cie(f.lastIndex+(oue?h:0)),a.length))===p)h=Zae(a,h,c);else{if(sue(g,cue(a,p,h)),g.length===d)return g;for(var m=1;m<=y.length-1;m++)if(sue(g,y[m]),g.length===d)return g;h=p=v}}return sue(g,cue(a,p)),g}]}(o,""[e],(function(e,t,n,r,o){var a=Cre(e),s=t.exec;return s===jae||s===$ae.exec?i&&!o?{done:!0,value:u(t,n,r)}:{done:!0,value:a(n,t,r)}:{done:!1}}));tie(String.prototype,e,s[0]),tie($ae,o,s[1])}r&&_oe($ae[o],"sham",!0)}("split",0,!!dre((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),oue);var lue=function(){return lue=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},lue.apply(this,arguments)};function fue(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function u(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}s((r=r.apply(e,t||[])).next())}))}function due(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}}var pue=voe("unscopables"),hue=Array.prototype;null==hue[pue]&&Foe.f(hue,pue,{configurable:!0,value:mae(null)});var gue,vue,yue,mue=function(e){hue[pue][e]=!0},bue={},wue=!dre((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),Eue=$oe("IE_PROTO"),Aue=fre.Object,Sue=Aue.prototype,Cue=wue?Aue.getPrototypeOf:function(e){var t=ioe(e);if(uoe(t,Eue))return t[Eue];var n=t.constructor;return jre(n)&&t instanceof n?n.prototype:t instanceof Aue?Sue:null},xue=voe("iterator"),Due=!1;[].keys&&("next"in(yue=[].keys())?(vue=Cue(Cue(yue)))!==Object.prototype&&(gue=vue):Due=!0);var Oue=null==gue||dre((function(){var e={};return gue[xue].call(e)!==e}));Oue&&(gue={}),jre(gue[xue])||tie(gue,xue,(function(){return this}));var kue={IteratorPrototype:gue,BUGGY_SAFARI_ITERATORS:Due},Bue=Foe.f,Tue=voe("toStringTag"),Fue=function(e,t,n){e&&!uoe(e=n?e:e.prototype,Tue)&&Bue(e,Tue,{configurable:!0,value:t})},_ue=kue.IteratorPrototype,Pue=function(){return this},jue=fre.String,Nue=fre.TypeError,Rue=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Cre(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(n,[]),t=n instanceof Array}catch(e){}return function(n,r){return koe(n),function(e){if("object"==typeof e||jre(e))return e;throw Nue("Can't set "+jue(e)+" as a prototype")}(r),t?e(n,r):n.__proto__=r,n}}():void 0),Iue=eie.PROPER,Lue=eie.CONFIGURABLE,Mue=kue.IteratorPrototype,zue=kue.BUGGY_SAFARI_ITERATORS,$ue=voe("iterator"),Hue=function(){return this},Uue=function(e,t,n,r,o,i,a){!function(e,t,n){var r=t+" Iterator";e.prototype=mae(_ue,{next:bre(1,n)}),Fue(e,r,!1),bue[r]=Pue}(n,t,r);var u,s,c,l=function(e){if(e===o&&g)return g;if(!zue&&e in p)return p[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},f=t+" Iterator",d=!1,p=e.prototype,h=p[$ue]||p["@@iterator"]||o&&p[o],g=!zue&&h||l(o),v="Array"==t&&p.entries||h;if(v&&(u=Cue(v.call(new e)))!==Object.prototype&&u.next&&(Cue(u)!==Mue&&(Rue?Rue(u,Mue):jre(u[$ue])||tie(u,$ue,Hue)),Fue(u,f,!0)),Iue&&"values"==o&&h&&"values"!==h.name&&(Lue?_oe(p,"name","values"):(d=!0,g=function(){return gre(h,this)})),o)if(s={values:l("values"),keys:i?g:l("keys"),entries:l("entries")},a)for(c in s)(zue||d||!(c in p))&&tie(p,c,s[c]);else Tie({target:t,proto:!0,forced:zue||d},s);return p[$ue]!==g&&tie(p,$ue,g,{name:o}),bue[t]=g,s},Vue=Xoe.set,que=Xoe.getterFor("Array Iterator"),Wue=Uue(Array,"Array",(function(e,t){Vue(this,{type:"Array Iterator",target:Pre(e),index:0,kind:t})}),(function(){var e=que(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values");bue.Arguments=bue.Array,mue("keys"),mue("values"),mue("entries");var Gue=Xae.charAt,Kue=Xoe.set,Yue=Xoe.getterFor("String Iterator");Uue(String,"String",(function(e){Kue(this,{type:"String Iterator",string:nae(e),index:0})}),(function(){var e,t=Yue(this),n=t.string,r=t.index;return r>=n.length?{value:void 0,done:!0}:(e=Gue(n,r),t.index+=e.length,{value:e,done:!1})}));var Xue=function(e,t,n){for(var r in t)tie(e,r,t[r],n);return e},Jue=yie.f,Zue="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],Que={f:function(e){return Zue&&"Window"==Ore(e)?function(e){try{return Jue(e)}catch(e){return tue(Zue)}}(e):Jue(Pre(e))}},ese=dre((function(){if("function"==typeof ArrayBuffer){var e=new ArrayBuffer(8);Object.isExtensible(e)&&Object.defineProperty(e,"a",{value:8})}})),tse=Object.isExtensible,nse=dre((function(){tse(1)}))||ese?function(e){return!!Nre(e)&&(!ese||"ArrayBuffer"!=Ore(e))&&(!tse||tse(e))}:tse,rse=!dre((function(){return Object.isExtensible(Object.preventExtensions({}))})),ose=ure((function(e){var t=Foe.f,n=!1,r=foe("meta"),o=0,i=function(e){t(e,r,{value:{objectID:"O"+o++,weakData:{}}})},a=e.exports={enable:function(){a.enable=function(){},n=!0;var e=yie.f,t=Cre([].splice),o={};o[r]=1,e(o).length&&(yie.f=function(n){for(var o=e(n),i=0,a=o.length;i<a;i++)if(o[i]===r){t(o,i,1);break}return o},Tie({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:Que.f}))},fastKey:function(e,t){if(!Nre(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!uoe(e,r)){if(!nse(e))return"F";if(!t)return"E";i(e)}return e[r].objectID},getWeakData:function(e,t){if(!uoe(e,r)){if(!nse(e))return!0;if(!t)return!1;i(e)}return e[r].weakData},onFreeze:function(e){return rse&&n&&nse(e)&&!uoe(e,r)&&i(e),e}};Hoe[r]=!0})),ise=Cre(Cre.bind),ase=function(e,t){return Jre(e),void 0===t?e:ise?ise(e,t):function(){return e.apply(t,arguments)}},use=voe("iterator"),sse=Array.prototype,cse=voe("iterator"),lse=function(e){if(null!=e)return Zre(e,cse)||Zre(e,"@@iterator")||bue[Iie(e)]},fse=fre.TypeError,dse=function(e,t,n){var r,o;koe(e);try{if(!(r=Zre(e,"return"))){if("throw"===t)throw n;return n}r=gre(r,e)}catch(e){o=!0,r=e}if("throw"===t)throw n;if(o)throw r;return koe(r),n},pse=fre.TypeError,hse=function(e,t){this.stopped=e,this.result=t},gse=hse.prototype,vse=function(e,t,n){var r,o,i,a,u,s,c,l,f=n&&n.that,d=!(!n||!n.AS_ENTRIES),p=!(!n||!n.IS_ITERATOR),h=!(!n||!n.INTERRUPTED),g=ase(t,f),v=function(e){return r&&dse(r,"normal",e),new hse(!0,e)},y=function(e){return d?(koe(e),h?g(e[0],e[1],v):g(e[0],e[1])):h?g(e,v):g(e)};if(p)r=e;else{if(!(o=lse(e)))throw pse(Yre(e)+" is not iterable");if(void 0!==(l=o)&&(bue.Array===l||sse[use]===l)){for(i=0,a=lie(e);a>i;i++)if((u=y(e[i]))&&Ire(gse,u))return u;return new hse(!1)}r=function(e,t){var n=arguments.length<2?lse(e):t;if(Jre(n))return koe(gre(n,e));throw fse(Yre(e)+" is not iterable")}(e,o)}for(s=r.next;!(c=gre(s,r)).done;){try{u=y(c.value)}catch(e){dse(r,"throw",e)}if("object"==typeof u&&u&&Ire(gse,u))return u}return new hse(!1)},yse=fre.TypeError,mse=function(e,t){if(Ire(t,e))return e;throw yse("Incorrect invocation")},bse=voe("iterator"),wse=!1;try{var Ese=0,Ase={next:function(){return{done:!!Ese++}},return:function(){wse=!0}};Ase[bse]=function(){return this},Array.from(Ase,(function(){throw 2}))}catch(kc){}var Sse=function(e,t){if(!t&&!wse)return!1;var n=!1;try{var r={};r[bse]=function(){return{next:function(){return{done:n=!0}}}},e(r)}catch(e){}return n},Cse=voe("species"),xse=fre.Array,Dse=function(e,t){return new(function(e){var t;return Fie(e)&&(t=e.constructor,(qie(t)&&(t===xse||Fie(t.prototype))||Nre(t)&&null===(t=t[Cse]))&&(t=void 0)),void 0===t?xse:t}(e))(0===t?0:t)},Ose=Cre([].push),kse=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=ioe(s),g=Tre(h),v=ase(c,l),y=lie(g),m=0,b=f||Dse,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:Ose(w,d)}else switch(e){case 4:return!1;case 7:Ose(w,d)}return i?-1:r||o?o:w}},Bse={forEach:kse(0),map:kse(1),filter:kse(2),some:kse(3),every:kse(4),find:kse(5),findIndex:kse(6),filterReject:kse(7)},Tse=ose.getWeakData,Fse=Xoe.set,_se=Xoe.getterFor,Pse=Bse.find,jse=Bse.findIndex,Nse=Cre([].splice),Rse=0,Ise=function(e){return e.frozen||(e.frozen=new Lse)},Lse=function(){this.entries=[]},Mse=function(e,t){return Pse(e.entries,(function(e){return e[0]===t}))};Lse.prototype={get:function(e){var t=Mse(this,e);if(t)return t[1]},has:function(e){return!!Mse(this,e)},set:function(e,t){var n=Mse(this,e);n?n[1]=t:this.entries.push([e,t])},delete:function(e){var t=jse(this.entries,(function(t){return t[0]===e}));return~t&&Nse(this.entries,t,1),!!~t}};var zse,$se={getConstructor:function(e,t,n,r){var o=e((function(e,o){mse(e,i),Fse(e,{type:t,id:Rse++,frozen:void 0}),null!=o&&vse(o,e[r],{that:e,AS_ENTRIES:n})})),i=o.prototype,a=_se(t),u=function(e,t,n){var r=a(e),o=Tse(koe(t),!0);return!0===o?Ise(r).set(t,n):o[r.id]=n,e};return Xue(i,{delete:function(e){var t=a(this);if(!Nre(e))return!1;var n=Tse(e);return!0===n?Ise(t).delete(e):n&&uoe(n,t.id)&&delete n[t.id]},has:function(e){var t=a(this);if(!Nre(e))return!1;var n=Tse(e);return!0===n?Ise(t).has(e):n&&uoe(n,t.id)}}),Xue(i,n?{get:function(e){var t=a(this);if(Nre(e)){var n=Tse(e);return!0===n?Ise(t).get(e):n?n[t.id]:void 0}},set:function(e,t){return u(this,e,t)}}:{add:function(e){return u(this,e,!0)}}),o}},Hse=Xoe.enforce,Use=!fre.ActiveXObject&&"ActiveXObject"in fre,Vse=function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}},qse=function(e,t,n){var r=-1!==e.indexOf("Map"),o=-1!==e.indexOf("Weak"),i=r?"set":"add",a=fre[e],u=a&&a.prototype,s=a,c={},l=function(e){var t=Cre(u[e]);tie(u,e,"add"==e?function(e){return t(this,0===e?0:e),this}:"delete"==e?function(e){return!(o&&!Nre(e))&&t(this,0===e?0:e)}:"get"==e?function(e){return o&&!Nre(e)?void 0:t(this,0===e?0:e)}:"has"==e?function(e){return!(o&&!Nre(e))&&t(this,0===e?0:e)}:function(e,n){return t(this,0===e?0:e,n),this})};if(kie(e,!jre(a)||!(o||u.forEach&&!dre((function(){(new a).entries().next()})))))s=n.getConstructor(t,e,r,i),ose.enable();else if(kie(e,!0)){var f=new s,d=f[i](o?{}:-0,1)!=f,p=dre((function(){f.has(1)})),h=Sse((function(e){new a(e)})),g=!o&&dre((function(){for(var e=new a,t=5;t--;)e[i](t,t);return!e.has(-0)}));h||((s=t((function(e,t){mse(e,u);var n=function(e,t,n){var r,o;return Rue&&jre(r=t.constructor)&&r!==n&&Nre(o=r.prototype)&&o!==n.prototype&&Rue(e,o),e}(new a,e,s);return null!=t&&vse(t,n[i],{that:n,AS_ENTRIES:r}),n}))).prototype=u,u.constructor=s),(p||g)&&(l("delete"),l("has"),r&&l("get")),(g||d)&&l(i),o&&u.clear&&delete u.clear}return c[e]=s,Tie({global:!0,forced:s!=a},c),Fue(s,e),o||n.setStrong(s,e,r),s}("WeakMap",Vse,$se);if(Moe&&Use){zse=$se.getConstructor(Vse,"WeakMap",!0),ose.enable();var Wse=qse.prototype,Gse=Cre(Wse.delete),Kse=Cre(Wse.has),Yse=Cre(Wse.get),Xse=Cre(Wse.set);Xue(Wse,{delete:function(e){if(Nre(e)&&!nse(e)){var t=Hse(this);return t.frozen||(t.frozen=new zse),Gse(this,e)||t.frozen.delete(e)}return Gse(this,e)},has:function(e){if(Nre(e)&&!nse(e)){var t=Hse(this);return t.frozen||(t.frozen=new zse),Kse(this,e)||t.frozen.has(e)}return Kse(this,e)},get:function(e){if(Nre(e)&&!nse(e)){var t=Hse(this);return t.frozen||(t.frozen=new zse),Kse(this,e)?Yse(this,e):t.frozen.get(e)}return Yse(this,e)},set:function(e,t){if(Nre(e)&&!nse(e)){var n=Hse(this);n.frozen||(n.frozen=new zse),Kse(this,e)?Xse(this,e,t):n.frozen.set(e,t)}else Xse(this,e,t);return this}})}var Jse={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},Zse=Aoe("span").classList,Qse=Zse&&Zse.constructor&&Zse.constructor.prototype,ece=Qse===Object.prototype?void 0:Qse,tce=voe("iterator"),nce=voe("toStringTag"),rce=Wue.values,oce=function(e,t){if(e){if(e[tce]!==rce)try{_oe(e,tce,rce)}catch(t){e[tce]=rce}if(e[nce]||_oe(e,nce,t),Jse[t])for(var n in Wue)if(e[n]!==Wue[n])try{_oe(e,n,Wue[n])}catch(t){e[n]=Wue[n]}}};for(var ice in Jse)oce(fre[ice]&&fre[ice].prototype,ice);oce(ece,"DOMTokenList");var ace=function(e,t){var n=[][e];return!!n&&dre((function(){n.call(null,t||function(){throw 1},1)}))},uce=Bse.forEach,sce=ace("forEach")?[].forEach:function(e){return uce(this,e,arguments.length>1?arguments[1]:void 0)},cce=function(e){if(e&&e.forEach!==sce)try{_oe(e,"forEach",sce)}catch(t){e.forEach=sce}};for(var lce in Jse)Jse[lce]&&cce(fre[lce]&&fre[lce].prototype);cce(ece);var fce,dce,pce,hce,gce=fre.Promise,vce=voe("species"),yce=/(?:ipad|iphone|ipod).*applewebkit/i.test(Lre),mce="process"==Ore(fre.process),bce=fre.setImmediate,wce=fre.clearImmediate,Ece=fre.process,Ace=fre.Dispatch,Sce=fre.Function,Cce=fre.MessageChannel,xce=fre.String,Dce=0,Oce={};try{fce=fre.location}catch(kc){}var kce=function(e){if(uoe(Oce,e)){var t=Oce[e];delete Oce[e],t()}},Bce=function(e){return function(){kce(e)}},Tce=function(e){kce(e.data)},Fce=function(e){fre.postMessage(xce(e),fce.protocol+"//"+fce.host)};bce&&wce||(bce=function(e){var t=Kie(arguments,1);return Oce[++Dce]=function(){Mae(jre(e)?e:Sce(e),void 0,t)},dce(Dce),Dce},wce=function(e){delete Oce[e]},mce?dce=function(e){Ece.nextTick(Bce(e))}:Ace&&Ace.now?dce=function(e){Ace.now(Bce(e))}:Cce&&!yce?(hce=(pce=new Cce).port2,pce.port1.onmessage=Tce,dce=ase(hce.postMessage,hce)):fre.addEventListener&&jre(fre.postMessage)&&!fre.importScripts&&fce&&"file:"!==fce.protocol&&!dre(Fce)?(dce=Fce,fre.addEventListener("message",Tce,!1)):dce="onreadystatechange"in Aoe("script")?function(e){lae.appendChild(Aoe("script")).onreadystatechange=function(){lae.removeChild(this),kce(e)}}:function(e){setTimeout(Bce(e),0)});var _ce,Pce,jce,Nce,Rce,Ice,Lce,Mce,zce={set:bce,clear:wce},$ce=/ipad|iphone|ipod/i.test(Lre)&&void 0!==fre.Pebble,Hce=/web0s(?!.*chrome)/i.test(Lre),Uce=xoe.f,Vce=zce.set,qce=fre.MutationObserver||fre.WebKitMutationObserver,Wce=fre.document,Gce=fre.process,Kce=fre.Promise,Yce=Uce(fre,"queueMicrotask"),Xce=Yce&&Yce.value;Xce||(_ce=function(){var e,t;for(mce&&(e=Gce.domain)&&e.exit();Pce;){t=Pce.fn,Pce=Pce.next;try{t()}catch(e){throw Pce?Nce():jce=void 0,e}}jce=void 0,e&&e.enter()},yce||mce||Hce||!qce||!Wce?!$ce&&Kce&&Kce.resolve?((Lce=Kce.resolve(void 0)).constructor=Kce,Mce=ase(Lce.then,Lce),Nce=function(){Mce(_ce)}):mce?Nce=function(){Gce.nextTick(_ce)}:(Vce=ase(Vce,fre),Nce=function(){Vce(_ce)}):(Rce=!0,Ice=Wce.createTextNode(""),new qce(_ce).observe(Ice,{characterData:!0}),Nce=function(){Ice.data=Rce=!Rce}));var Jce,Zce,Qce,ele,tle=Xce||function(e){var t={fn:e,next:void 0};jce&&(jce.next=t),Pce||(Pce=t,Nce()),jce=t},nle=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r})),this.resolve=Jre(t),this.reject=Jre(n)},rle={f:function(e){return new nle(e)}},ole=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},ile="object"==typeof window,ale=zce.set,ule=voe("species"),sle="Promise",cle=Xoe.getterFor(sle),lle=Xoe.set,fle=Xoe.getterFor(sle),dle=gce&&gce.prototype,ple=gce,hle=dle,gle=fre.TypeError,vle=fre.document,yle=fre.process,mle=rle.f,ble=mle,wle=!!(vle&&vle.createEvent&&fre.dispatchEvent),Ele=jre(fre.PromiseRejectionEvent),Ale=!1,Sle=kie(sle,(function(){var e=Ioe(ple),t=e!==String(ple);if(!t&&66===Ure)return!0;if(Ure>=51&&/native code/.test(e))return!1;var n=new ple((function(e){e(1)})),r=function(e){e((function(){}),(function(){}))};return(n.constructor={})[ule]=r,!(Ale=n.then((function(){}))instanceof r)||!t&&ile&&!Ele})),Cle=Sle||!Sse((function(e){ple.all(e).catch((function(){}))})),xle=function(e){var t;return!(!Nre(e)||!jre(t=e.then))&&t},Dle=function(e,t){if(!e.notified){e.notified=!0;var n=e.reactions;tle((function(){for(var r=e.value,o=1==e.state,i=0;n.length>i;){var a,u,s,c=n[i++],l=o?c.ok:c.fail,f=c.resolve,d=c.reject,p=c.domain;try{l?(o||(2===e.rejection&&Tle(e),e.rejection=1),!0===l?a=r:(p&&p.enter(),a=l(r),p&&(p.exit(),s=!0)),a===c.promise?d(gle("Promise-chain cycle")):(u=xle(a))?gre(u,a,f,d):f(a)):d(r)}catch(e){p&&!s&&p.exit(),d(e)}}e.reactions=[],e.notified=!1,t&&!e.rejection&&kle(e)}))}},Ole=function(e,t,n){var r,o;wle?((r=vle.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),fre.dispatchEvent(r)):r={promise:t,reason:n},!Ele&&(o=fre["on"+e])?o(r):"unhandledrejection"===e&&function(e,t){var n=fre.console;n&&n.error&&(1==arguments.length?n.error(e):n.error(e,t))}("Unhandled promise rejection",n)},kle=function(e){gre(ale,fre,(function(){var t,n=e.facade,r=e.value;if(Ble(e)&&(t=ole((function(){mce?yle.emit("unhandledRejection",r,n):Ole("unhandledrejection",n,r)})),e.rejection=mce||Ble(e)?2:1,t.error))throw t.value}))},Ble=function(e){return 1!==e.rejection&&!e.parent},Tle=function(e){gre(ale,fre,(function(){var t=e.facade;mce?yle.emit("rejectionHandled",t):Ole("rejectionhandled",t,e.value)}))},Fle=function(e,t,n){return function(r){e(t,r,n)}},_le=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,Dle(e,!0))},Ple=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw gle("Promise can't be resolved itself");var r=xle(t);r?tle((function(){var n={done:!1};try{gre(r,t,Fle(Ple,n,e),Fle(_le,n,e))}catch(t){_le(n,t,e)}})):(e.value=t,e.state=1,Dle(e,!1))}catch(t){_le({done:!1},t,e)}}};if(Sle&&(hle=(ple=function(e){mse(this,hle),Jre(e),gre(Jce,this);var t=cle(this);try{e(Fle(Ple,t),Fle(_le,t))}catch(e){_le(t,e)}}).prototype,(Jce=function(e){lle(this,{type:sle,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=Xue(hle,{then:function(e,t){var n=fle(this),r=n.reactions,o=mle(qae(this,ple));return o.ok=!jre(e)||e,o.fail=jre(t)&&t,o.domain=mce?yle.domain:void 0,n.parent=!0,r[r.length]=o,0!=n.state&&Dle(n,!1),o.promise},catch:function(e){return this.then(void 0,e)}}),Zce=function(){var e=new Jce,t=cle(e);this.promise=e,this.resolve=Fle(Ple,t),this.reject=Fle(_le,t)},rle.f=mle=function(e){return e===ple||e===Qce?new Zce(e):ble(e)},jre(gce)&&dle!==Object.prototype)){ele=dle.then,Ale||(tie(dle,"then",(function(e,t){var n=this;return new ple((function(e,t){gre(ele,n,e,t)})).then(e,t)}),{unsafe:!0}),tie(dle,"catch",hle.catch,{unsafe:!0}));try{delete dle.constructor}catch(kc){}Rue&&Rue(dle,hle)}Tie({global:!0,wrap:!0,forced:Sle},{Promise:ple}),Fue(ple,sle,!1),function(){var e=Rre("Promise"),t=Foe.f;pre&&e&&!e[vce]&&t(e,vce,{configurable:!0,get:function(){return this}})}(),Qce=Rre(sle),Tie({target:sle,stat:!0,forced:Sle},{reject:function(e){var t=mle(this);return gre(t.reject,void 0,e),t.promise}}),Tie({target:sle,stat:!0,forced:Sle},{resolve:function(e){return function(e,t){if(koe(e),Nre(t)&&t.constructor===e)return t;var n=rle.f(e);return(0,n.resolve)(t),n.promise}(this,e)}}),Tie({target:sle,stat:!0,forced:Cle},{all:function(e){var t=this,n=mle(t),r=n.resolve,o=n.reject,i=ole((function(){var n=Jre(t.resolve),i=[],a=0,u=1;vse(e,(function(e){var s=a++,c=!1;u++,gre(n,t,e).then((function(e){c||(c=!0,i[s]=e,--u||r(i))}),o)})),--u||r(i)}));return i.error&&o(i.value),n.promise},race:function(e){var t=this,n=mle(t),r=n.reject,o=ole((function(){var o=Jre(t.resolve);vse(e,(function(e){gre(o,t,e).then(n.resolve,r)}))}));return o.error&&r(o.value),n.promise}});var jle=eie.PROPER,Nle=RegExp.prototype,Rle=Nle.toString,Ile=Cre(rae),Lle=dre((function(){return"/a/b"!=Rle.call({source:"a",flags:"b"})})),Mle=jle&&"toString"!=Rle.name;(Lle||Mle)&&tie(RegExp.prototype,"toString",(function(){var e=koe(this),t=nae(e.source),n=e.flags;return"/"+t+"/"+nae(void 0===n&&Ire(Nle,e)&&!("flags"in Nle)?Ile(e):n)}),{unsafe:!0});var zle=eie.EXISTS,$le=Foe.f,Hle=Function.prototype,Ule=Cre(Hle.toString),Vle=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,qle=Cre(Vle.exec);pre&&!zle&&$le(Hle,"name",{configurable:!0,get:function(){try{return qle(Vle,Ule(this))[1]}catch(e){return""}}});var Wle=new WeakMap;function Gle(e){return e.getMenuConfig("uploadImage")}function Kle(e,t){return fue(this,void 0,void 0,(function(){return due(this,(function(n){return[2,new Promise((function(n){var r=new FileReader;r.readAsDataURL(t),r.onload=function(){var o=r.result;if(o){var i=o.toString(),a=0===i.indexOf("data:image")?"":i;Tz(e,i,t.name,a),n("ok")}}}))]}))}))}function Yle(e,t){return fue(this,void 0,void 0,(function(){var n,r,o,i;return due(this,(function(a){switch(a.label){case 0:return n=function(e){var t=Wle.get(e);if(null!=t)return t;var n=Gle(e),r=n.onSuccess,o=n.onProgress,i=n.onFailed,a=n.customInsert,u=n.onError;return t=a_(lue(lue({},n),{onProgress:function(t){e.showProgressBar(t),o&&o(t)},onSuccess:function(t,n){if(a)return a(n,(function(t,n,r){return Tz(e,t,n,r)})),void r(t,n);var o=n.errno,u=void 0===o?1:o,s=n.data,c=void 0===s?{}:s;if(0===u){if(Array.isArray(c))c.forEach((function(t){var n=t.url,r=void 0===n?"":n,o=t.alt,i=void 0===o?"":o,a=t.href;Tz(e,r,i,void 0===a?"":a)}));else{var l=c.url,f=void 0===l?"":l,d=c.alt,p=void 0===d?"":d,h=c.href;Tz(e,f,p,void 0===h?"":h)}r(t,n)}else i(t,n)},onError:function(e,t,n){u(e,t,n)}})),Wle.set(e,t),t}(e),r=t.name,o=t.type,i=t.size,n.addFile({name:r,type:o,size:i,data:t}),[4,n.upload()];case 1:return a.sent(),[2]}}))}))}function Xle(e,t){var n,r;return fue(this,void 0,void 0,(function(){var o,i,a,u,s,c,l,f,d;return due(this,(function(p){switch(p.label){case 0:if(null==t)return[2];o=Array.prototype.slice.call(t),i=Gle(e),a=i.customUpload,u=i.base64LimitSize,p.label=1;case 1:p.trys.push([1,11,12,17]),s=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(e),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,o){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,o,(t=e[n](t)).done,t.value)}))}}}(o),p.label=2;case 2:return[4,s.next()];case 3:return(c=p.sent()).done?[3,10]:(l=c.value,f=l.size,u&&f<=u?[4,Kle(e,l)]:[3,5]);case 4:return p.sent(),[3,9];case 5:return a?[4,a(l,(function(t,n,r){return Tz(e,t,n,r)}))]:[3,7];case 6:return p.sent(),[3,9];case 7:return[4,Yle(e,l)];case 8:p.sent(),p.label=9;case 9:return[3,2];case 10:return[3,17];case 11:return d=p.sent(),n={error:d},[3,17];case 12:return p.trys.push([12,,15,16]),c&&!c.done&&(r=s.return)?[4,r.call(s)]:[3,14];case 13:p.sent(),p.label=14;case 14:return[3,16];case 15:if(n)throw n.error;return[7];case 16:return[7];case 17:return[2]}}))}))}var Jle=Cre([].join),Zle=Tre!=Object,Qle=ace("join",",");Tie({target:"Array",proto:!0,forced:Zle||!Qle},{join:function(e){return Jle(Pre(this),void 0===e?",":e)}}),$p&&(wp.fn.append=$p),kp&&(wp.fn.on=kp),Gp&&(wp.fn.remove=Gp),Op&&(wp.fn.val=Op),Jp&&(wp.fn.click=Jp),Pp&&(wp.fn.hide=Pp);var efe=function(){function e(){this.title=J_("uploadImgModule.uploadImage"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M828.708571 585.045333a48.761905 48.761905 0 0 0-48.737523 48.761905v18.529524l-72.143238-72.167619a135.972571 135.972571 0 0 0-191.585524 0l-34.133334 34.133333-120.880762-120.953905a138.898286 138.898286 0 0 0-191.585523 0l-72.167619 72.167619V292.400762a48.786286 48.786286 0 0 1 48.761904-48.761905h341.23581a48.737524 48.737524 0 0 0 34.474667-83.285333 48.737524 48.737524 0 0 0-34.474667-14.287238H146.236952A146.212571 146.212571 0 0 0 0 292.400762v585.289143A146.358857 146.358857 0 0 0 146.236952 1024h584.996572a146.212571 146.212571 0 0 0 146.236952-146.310095V633.807238a48.786286 48.786286 0 0 0-48.761905-48.761905zM146.261333 926.45181a48.737524 48.737524 0 0 1-48.761904-48.761905v-174.128762l141.409523-141.458286a38.497524 38.497524 0 0 1 53.126096 0l154.526476 154.624 209.627428 209.724953H146.236952z m633.734096-48.761905c-0.073143 9.337905-3.145143 18.383238-8.777143 25.843809l-219.843048-220.94019 34.133333-34.133334a37.546667 37.546667 0 0 1 53.613715 0l140.873143 141.897143V877.714286zM1009.615238 160.231619L863.329524 13.897143a48.737524 48.737524 0 0 0-16.091429-10.24c-11.849143-4.87619-25.161143-4.87619-37.059047 0a48.761905 48.761905 0 0 0-16.067048 10.24l-146.236952 146.334476a49.005714 49.005714 0 0 0 69.217523 69.241905l62.902858-63.390476v272.627809a48.761905 48.761905 0 1 0 97.475047 0V166.083048l62.902857 63.390476a48.737524 48.737524 0 0 0 69.217524 0 48.761905 48.761905 0 0 0 0-69.241905z"></path></svg>',this.tag="button"}return e.prototype.getValue=function(e){return""},e.prototype.isActive=function(e){return!1},e.prototype.isDisabled=function(e){return Fz(e)},e.prototype.getMenuConfig=function(e){return e.getMenuConfig("uploadImage")},e.prototype.exec=function(e,t){var n=this.getMenuConfig(e),r=n.allowedFileTypes,o=void 0===r?[]:r,i=n.customBrowseAndUpload;if(i)i((function(t,n,r){return Tz(e,t,n,r)}));else{var a="";o.length>0&&(a='accept="'+o.join(", ")+'"');var u=wp("body"),s=wp('<input type="file" '+a+" multiple/>");s.hide(),u.append(s),s.click(),s.on("change",(function(){var t=s[0].files;Xle(e,t)}))}},e}(),tfe={menus:[{key:"uploadImage",factory:function(){return new efe},config:{server:"",fieldName:"wangeditor-uploaded-image",maxFileSize:2097152,maxNumberOfFiles:100,allowedFileTypes:["image/*"],meta:{},metaWithUrl:!1,withCredentials:!1,timeout:1e4,onBeforeUpload:function(e){return e},onProgress:function(e){},onSuccess:function(e,t){},onFailed:function(e,t){console.error("'"+e.name+"' upload failed",t)},onError:function(e,t,n){console.error("'"+e.name+"' upload error",n)},base64LimitSize:0}}],editorPlugin:function(e){var t=e.insertData,n=e;return n.insertData=function(r){if(Fz(n))t(r);else if(r.getData("text/plain"))t(r);else{var o=r.files;o.length<=0?t(r):Array.prototype.slice.call(o).some((function(e){return"image"===function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}(e.type.split("/"),1)[0]}))?Xle(e,o):t(r)}},n}};K_("en",{highLightModule:{selectLang:"Language"}}),K_("zh-CN",{highLightModule:{selectLang:"éæ©è¯­è¨"}});var nfe="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self?self:{};function rfe(e){var t={exports:{}};return e(t,t.exports),t.exports}var ofe,ife,afe=function(e){return e&&e.Math==Math&&e},ufe=afe("object"==typeof globalThis&&globalThis)||afe("object"==typeof window&&window)||afe("object"==typeof self&&self)||afe("object"==typeof nfe&&nfe)||function(){return this}()||Function("return this")(),sfe=Object.defineProperty,cfe=function(e,t){try{sfe(ufe,e,{value:t,configurable:!0,writable:!0})}catch(n){ufe[e]=t}return t},lfe=ufe["__core-js_shared__"]||cfe("__core-js_shared__",{}),ffe=rfe((function(e){(e.exports=function(e,t){return lfe[e]||(lfe[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.19.3",mode:"global",copyright:"Â© 2021 Denis Pushkarev (zloirock.ru)"})})),dfe=Function.prototype,pfe=dfe.bind,hfe=dfe.call,gfe=pfe&&pfe.bind(hfe),vfe=pfe?function(e){return e&&gfe(hfe,e)}:function(e){return e&&function(){return hfe.apply(e,arguments)}},yfe=ufe.TypeError,mfe=function(e){if(null==e)throw yfe("Can't call method on "+e);return e},bfe=ufe.Object,wfe=function(e){return bfe(mfe(e))},Efe=vfe({}.hasOwnProperty),Afe=Object.hasOwn||function(e,t){return Efe(wfe(e),t)},Sfe=0,Cfe=Math.random(),xfe=vfe(1..toString),Dfe=function(e){return"Symbol("+(void 0===e?"":e)+")_"+xfe(++Sfe+Cfe,36)},Ofe=function(e){return"function"==typeof e},kfe=function(e,t){return arguments.length<2?function(e){return Ofe(e)?e:void 0}(ufe[e]):ufe[e]&&ufe[e][t]},Bfe=kfe("navigator","userAgent")||"",Tfe=ufe.process,Ffe=ufe.Deno,_fe=Tfe&&Tfe.versions||Ffe&&Ffe.version,Pfe=_fe&&_fe.v8;Pfe&&(ife=(ofe=Pfe.split("."))[0]>0&&ofe[0]<4?1:+(ofe[0]+ofe[1])),!ife&&Bfe&&(!(ofe=Bfe.match(/Edge\/(\d+)/))||ofe[1]>=74)&&(ofe=Bfe.match(/Chrome\/(\d+)/))&&(ife=+ofe[1]);var jfe=ife,Nfe=function(e){try{return!!e()}catch(e){return!0}},Rfe=!!Object.getOwnPropertySymbols&&!Nfe((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&jfe&&jfe<41})),Ife=Rfe&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Lfe=ffe("wks"),Mfe=ufe.Symbol,zfe=Mfe&&Mfe.for,$fe=Ife?Mfe:Mfe&&Mfe.withoutSetter||Dfe,Hfe=function(e){if(!Afe(Lfe,e)||!Rfe&&"string"!=typeof Lfe[e]){var t="Symbol."+e;Rfe&&Afe(Mfe,e)?Lfe[e]=Mfe[e]:Lfe[e]=Ife&&zfe?zfe(t):$fe(t)}return Lfe[e]},Ufe={};Ufe[Hfe("toStringTag")]="z";var Vfe="[object z]"===String(Ufe),qfe=!Nfe((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),Wfe=function(e){return"object"==typeof e?null!==e:Ofe(e)},Gfe=ufe.document,Kfe=Wfe(Gfe)&&Wfe(Gfe.createElement),Yfe=function(e){return Kfe?Gfe.createElement(e):{}},Xfe=!qfe&&!Nfe((function(){return 7!=Object.defineProperty(Yfe("div"),"a",{get:function(){return 7}}).a})),Jfe=ufe.String,Zfe=ufe.TypeError,Qfe=function(e){if(Wfe(e))return e;throw Zfe(Jfe(e)+" is not an object")},ede=Function.prototype.call,tde=ede.bind?ede.bind(ede):function(){return ede.apply(ede,arguments)},nde=vfe({}.isPrototypeOf),rde=ufe.Object,ode=Ife?function(e){return"symbol"==typeof e}:function(e){var t=kfe("Symbol");return Ofe(t)&&nde(t.prototype,rde(e))},ide=ufe.String,ade=function(e){try{return ide(e)}catch(e){return"Object"}},ude=ufe.TypeError,sde=function(e){if(Ofe(e))return e;throw ude(ade(e)+" is not a function")},cde=function(e,t){var n=e[t];return null==n?void 0:sde(n)},lde=ufe.TypeError,fde=ufe.TypeError,dde=Hfe("toPrimitive"),pde=function(e){var t=function(e,t){if(!Wfe(e)||ode(e))return e;var n,r=cde(e,dde);if(r){if(void 0===t&&(t="default"),n=tde(r,e,t),!Wfe(n)||ode(n))return n;throw fde("Can't convert object to primitive value")}return void 0===t&&(t="number"),function(e,t){var n,r;if("string"===t&&Ofe(n=e.toString)&&!Wfe(r=tde(n,e)))return r;if(Ofe(n=e.valueOf)&&!Wfe(r=tde(n,e)))return r;if("string"!==t&&Ofe(n=e.toString)&&!Wfe(r=tde(n,e)))return r;throw lde("Can't convert object to primitive value")}(e,t)}(e,"string");return ode(t)?t:t+""},hde=ufe.TypeError,gde=Object.defineProperty,vde={f:qfe?gde:function(e,t,n){if(Qfe(e),t=pde(t),Qfe(n),Xfe)try{return gde(e,t,n)}catch(e){}if("get"in n||"set"in n)throw hde("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},yde=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},mde=qfe?function(e,t,n){return vde.f(e,t,yde(1,n))}:function(e,t,n){return e[t]=n,e},bde=vfe(Function.toString);Ofe(lfe.inspectSource)||(lfe.inspectSource=function(e){return bde(e)});var wde,Ede,Ade,Sde=lfe.inspectSource,Cde=ufe.WeakMap,xde=Ofe(Cde)&&/native code/.test(Sde(Cde)),Dde=ffe("keys"),Ode=function(e){return Dde[e]||(Dde[e]=Dfe(e))},kde={},Bde=ufe.TypeError,Tde=ufe.WeakMap;if(xde||lfe.state){var Fde=lfe.state||(lfe.state=new Tde),_de=vfe(Fde.get),Pde=vfe(Fde.has),jde=vfe(Fde.set);wde=function(e,t){if(Pde(Fde,e))throw new Bde("Object already initialized");return t.facade=e,jde(Fde,e,t),t},Ede=function(e){return _de(Fde,e)||{}},Ade=function(e){return Pde(Fde,e)}}else{var Nde=Ode("state");kde[Nde]=!0,wde=function(e,t){if(Afe(e,Nde))throw new Bde("Object already initialized");return t.facade=e,mde(e,Nde,t),t},Ede=function(e){return Afe(e,Nde)?e[Nde]:{}},Ade=function(e){return Afe(e,Nde)}}var Rde={set:wde,get:Ede,has:Ade,enforce:function(e){return Ade(e)?Ede(e):wde(e,{})},getterFor:function(e){return function(t){var n;if(!Wfe(t)||(n=Ede(t)).type!==e)throw Bde("Incompatible receiver, "+e+" required");return n}}},Ide=Function.prototype,Lde=qfe&&Object.getOwnPropertyDescriptor,Mde=Afe(Ide,"name"),zde={EXISTS:Mde,PROPER:Mde&&"something"===function(){}.name,CONFIGURABLE:Mde&&(!qfe||qfe&&Lde(Ide,"name").configurable)},$de=rfe((function(e){var t=zde.CONFIGURABLE,n=Rde.get,r=Rde.enforce,o=String(String).split("String");(e.exports=function(e,n,i,a){var u,s=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,l=!!a&&!!a.noTargetGet,f=a&&void 0!==a.name?a.name:n;Ofe(i)&&("Symbol("===String(f).slice(0,7)&&(f="["+String(f).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!Afe(i,"name")||t&&i.name!==f)&&mde(i,"name",f),(u=r(i)).source||(u.source=o.join("string"==typeof f?f:""))),e!==ufe?(s?!l&&e[n]&&(c=!0):delete e[n],c?e[n]=i:mde(e,n,i)):c?e[n]=i:cfe(n,i)})(Function.prototype,"toString",(function(){return Ofe(this)&&n(this).source||Sde(this)}))})),Hde=vfe({}.toString),Ude=vfe("".slice),Vde=function(e){return Ude(Hde(e),8,-1)},qde=Hfe("toStringTag"),Wde=ufe.Object,Gde="Arguments"==Vde(function(){return arguments}()),Kde=Vfe?Vde:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Wde(e),qde))?n:Gde?Vde(t):"Object"==(r=Vde(t))&&Ofe(t.callee)?"Arguments":r},Yde=Vfe?{}.toString:function(){return"[object "+Kde(this)+"]"};Vfe||$de(Object.prototype,"toString",Yde,{unsafe:!0});var Xde,Jde={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},Zde=Yfe("span").classList,Qde=Zde&&Zde.constructor&&Zde.constructor.prototype,epe=Qde===Object.prototype?void 0:Qde,tpe=vfe(vfe.bind),npe=ufe.Object,rpe=vfe("".split),ope=Nfe((function(){return!npe("z").propertyIsEnumerable(0)}))?function(e){return"String"==Vde(e)?rpe(e,""):npe(e)}:npe,ipe=Math.ceil,ape=Math.floor,upe=function(e){var t=+e;return t!=t||0===t?0:(t>0?ape:ipe)(t)},spe=Math.min,cpe=function(e){return e>0?spe(upe(e),9007199254740991):0},lpe=function(e){return cpe(e.length)},fpe=Array.isArray||function(e){return"Array"==Vde(e)},dpe=function(){},ppe=[],hpe=kfe("Reflect","construct"),gpe=/^\s*(?:class|function)\b/,vpe=vfe(gpe.exec),ype=!gpe.exec(dpe),mpe=function(e){if(!Ofe(e))return!1;try{return hpe(dpe,ppe,e),!0}catch(e){return!1}},bpe=!hpe||Nfe((function(){var e;return mpe(mpe.call)||!mpe(Object)||!mpe((function(){e=!0}))||e}))?function(e){if(!Ofe(e))return!1;switch(Kde(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}return ype||!!vpe(gpe,Sde(e))}:mpe,wpe=Hfe("species"),Epe=ufe.Array,Ape=function(e,t){return new(function(e){var t;return fpe(e)&&(t=e.constructor,(bpe(t)&&(t===Epe||fpe(t.prototype))||Wfe(t)&&null===(t=t[wpe]))&&(t=void 0)),void 0===t?Epe:t}(e))(0===t?0:t)},Spe=vfe([].push),Cpe=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,u=5==e||i;return function(s,c,l,f){for(var d,p,h=wfe(s),g=ope(h),v=function(e,t){return sde(e),void 0===t?e:tpe?tpe(e,t):function(){return e.apply(t,arguments)}}(c,l),y=lpe(g),m=0,b=f||Ape,w=t?b(s,y):n||a?b(s,0):void 0;y>m;m++)if((u||m in g)&&(p=v(d=g[m],m,h),e))if(t)w[m]=p;else if(p)switch(e){case 3:return!0;case 5:return d;case 6:return m;case 2:Spe(w,d)}else switch(e){case 4:return!1;case 7:Spe(w,d)}return i?-1:r||o?o:w}},xpe=[Cpe(0),Cpe(1),Cpe(2),Cpe(3),Cpe(4),Cpe(5),Cpe(6),Cpe(7)][0],Dpe=(Xde=[].forEach)&&Nfe((function(){Xde.call(null,(function(){throw 1}),1)}))?[].forEach:function(e){return xpe(this,e,arguments.length>1?arguments[1]:void 0)},Ope=function(e){if(e&&e.forEach!==Dpe)try{mde(e,"forEach",Dpe)}catch(t){e.forEach=Dpe}};for(var kpe in Jde)Jde[kpe]&&Ope(ufe[kpe]&&ufe[kpe].prototype);Ope(epe);var Bpe={}.propertyIsEnumerable,Tpe=Object.getOwnPropertyDescriptor,Fpe={f:Tpe&&!Bpe.call({1:2},1)?function(e){var t=Tpe(this,e);return!!t&&t.enumerable}:Bpe},_pe=function(e){return ope(mfe(e))},Ppe=Object.getOwnPropertyDescriptor,jpe={f:qfe?Ppe:function(e,t){if(e=_pe(e),t=pde(t),Xfe)try{return Ppe(e,t)}catch(e){}if(Afe(e,t))return yde(!tde(Fpe.f,e,t),e[t])}},Npe=Math.max,Rpe=Math.min,Ipe=function(e,t){var n=upe(e);return n<0?Npe(n+t,0):Rpe(n,t)},Lpe=function(e){return function(t,n,r){var o,i=_pe(t),a=lpe(i),u=Ipe(r,a);if(e&&n!=n){for(;a>u;)if((o=i[u++])!=o)return!0}else for(;a>u;u++)if((e||u in i)&&i[u]===n)return e||u||0;return!e&&-1}},Mpe=(Lpe(!0),Lpe(!1)),zpe=vfe([].push),$pe=function(e,t){var n,r=_pe(e),o=0,i=[];for(n in r)!Afe(kde,n)&&Afe(r,n)&&zpe(i,n);for(;t.length>o;)Afe(r,n=t[o++])&&(~Mpe(i,n)||zpe(i,n));return i},Hpe=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Upe=Hpe.concat("length","prototype"),Vpe={f:Object.getOwnPropertyNames||function(e){return $pe(e,Upe)}},qpe={f:Object.getOwnPropertySymbols},Wpe=vfe([].concat),Gpe=kfe("Reflect","ownKeys")||function(e){var t=Vpe.f(Qfe(e)),n=qpe.f;return n?Wpe(t,n(e)):t},Kpe=function(e,t){for(var n=Gpe(t),r=vde.f,o=jpe.f,i=0;i<n.length;i++){var a=n[i];Afe(e,a)||r(e,a,o(t,a))}},Ype=/#|\.prototype\./,Xpe=function(e,t){var n=Zpe[Jpe(e)];return n==ehe||n!=Qpe&&(Ofe(t)?Nfe(t):!!t)},Jpe=Xpe.normalize=function(e){return String(e).replace(Ype,".").toLowerCase()},Zpe=Xpe.data={},Qpe=Xpe.NATIVE="N",ehe=Xpe.POLYFILL="P",the=Xpe,nhe=jpe.f,rhe=function(e,t){var n,r,o,i,a,u=e.target,s=e.global,c=e.stat;if(n=s?ufe:c?ufe[u]||cfe(u,{}):(ufe[u]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(a=nhe(n,r))&&a.value:n[r],!the(s?r:u+(c?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;Kpe(i,o)}(e.sham||o&&o.sham)&&mde(i,"sham",!0),$de(n,r,i,e)}},ohe=Object.keys||function(e){return $pe(e,Hpe)},ihe=Object.assign,ahe=Object.defineProperty,uhe=vfe([].concat),she=!ihe||Nfe((function(){if(qfe&&1!==ihe({b:1},ihe(ahe({},"a",{enumerable:!0,get:function(){ahe(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e})),7!=ihe({},e)[n]||ohe(ihe({},t)).join("")!=r}))?function(e,t){for(var n=wfe(e),r=arguments.length,o=1,i=qpe.f,a=Fpe.f;r>o;)for(var u,s=ope(arguments[o++]),c=i?uhe(ohe(s),i(s)):ohe(s),l=c.length,f=0;l>f;)u=c[f++],qfe&&!tde(a,s,u)||(n[u]=s[u]);return n}:ihe;rhe({target:"Object",stat:!0,forced:Object.assign!==she},{assign:she});var che=rfe((function(e){var t=function(e){var t=/\blang(?:uage)?-([\w-]+)\b/i,n=0,r={},o={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(t){return t instanceof i?new i(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++n}),e.__id},clone:function e(t,n){var r,i;switch(n=n||{},o.util.type(t)){case"Object":if(i=o.util.objId(t),n[i])return n[i];for(var a in r={},n[i]=r,t)t.hasOwnProperty(a)&&(r[a]=e(t[a],n));return r;case"Array":return i=o.util.objId(t),n[i]?n[i]:(r=[],n[i]=r,t.forEach((function(t,o){r[o]=e(t,n)})),r);default:return t}},getLanguage:function(e){for(;e&&!t.test(e.className);)e=e.parentElement;return e?(e.className.match(t)||[,"none"])[1].toLowerCase():"none"},currentScript:function(){if("undefined"==typeof document)return null;if("currentScript"in document)return document.currentScript;try{throw new Error}catch(r){var e=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(r.stack)||[])[1];if(e){var t=document.getElementsByTagName("script");for(var n in t)if(t[n].src==e)return t[n]}return null}},isActive:function(e,t,n){for(var r="no-"+t;e;){var o=e.classList;if(o.contains(t))return!0;if(o.contains(r))return!1;e=e.parentElement}return!!n}},languages:{plain:r,plaintext:r,text:r,txt:r,extend:function(e,t){var n=o.util.clone(o.languages[e]);for(var r in t)n[r]=t[r];return n},insertBefore:function(e,t,n,r){var i=(r=r||o.languages)[e],a={};for(var u in i)if(i.hasOwnProperty(u)){if(u==t)for(var s in n)n.hasOwnProperty(s)&&(a[s]=n[s]);n.hasOwnProperty(u)||(a[u]=i[u])}var c=r[e];return r[e]=a,o.languages.DFS(o.languages,(function(t,n){n===c&&t!=e&&(this[t]=a)})),a},DFS:function e(t,n,r,i){i=i||{};var a=o.util.objId;for(var u in t)if(t.hasOwnProperty(u)){n.call(t,u,t[u],r||u);var s=t[u],c=o.util.type(s);"Object"!==c||i[a(s)]?"Array"!==c||i[a(s)]||(i[a(s)]=!0,e(s,n,u,i)):(i[a(s)]=!0,e(s,n,null,i))}}},plugins:{},highlightAll:function(e,t){o.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,n){var r={callback:n,container:e,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};o.hooks.run("before-highlightall",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),o.hooks.run("before-all-elements-highlight",r);for(var i,a=0;i=r.elements[a++];)o.highlightElement(i,!0===t,r.callback)},highlightElement:function(n,r,i){var a=o.util.getLanguage(n),u=o.languages[a];n.className=n.className.replace(t,"").replace(/\s+/g," ")+" language-"+a;var s=n.parentElement;s&&"pre"===s.nodeName.toLowerCase()&&(s.className=s.className.replace(t,"").replace(/\s+/g," ")+" language-"+a);var c={element:n,language:a,grammar:u,code:n.textContent};function l(e){c.highlightedCode=e,o.hooks.run("before-insert",c),c.element.innerHTML=c.highlightedCode,o.hooks.run("after-highlight",c),o.hooks.run("complete",c),i&&i.call(c.element)}if(o.hooks.run("before-sanity-check",c),(s=c.element.parentElement)&&"pre"===s.nodeName.toLowerCase()&&!s.hasAttribute("tabindex")&&s.setAttribute("tabindex","0"),!c.code)return o.hooks.run("complete",c),void(i&&i.call(c.element));if(o.hooks.run("before-highlight",c),c.grammar)if(r&&e.Worker){var f=new Worker(o.filename);f.onmessage=function(e){l(e.data)},f.postMessage(JSON.stringify({language:c.language,code:c.code,immediateClose:!0}))}else l(o.highlight(c.code,c.grammar,c.language));else l(o.util.encode(c.code))},highlight:function(e,t,n){var r={code:e,grammar:t,language:n};return o.hooks.run("before-tokenize",r),r.tokens=o.tokenize(r.code,r.grammar),o.hooks.run("after-tokenize",r),i.stringify(o.util.encode(r.tokens),r.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var r in n)t[r]=n[r];delete t.rest}var o=new s;return c(o,o.head,e),u(e,o,t,o.head,0),function(e){for(var t=[],n=e.head.next;n!==e.tail;)t.push(n.value),n=n.next;return t}(o)},hooks:{all:{},add:function(e,t){var n=o.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=o.hooks.all[e];if(n&&n.length)for(var r,i=0;r=n[i++];)r(t)}},Token:i};function i(e,t,n,r){this.type=e,this.content=t,this.alias=n,this.length=0|(r||"").length}function a(e,t,n,r){e.lastIndex=t;var o=e.exec(n);if(o&&r&&o[1]){var i=o[1].length;o.index+=i,o[0]=o[0].slice(i)}return o}function u(e,t,n,r,s,f){for(var d in n)if(n.hasOwnProperty(d)&&n[d]){var p=n[d];p=Array.isArray(p)?p:[p];for(var h=0;h<p.length;++h){if(f&&f.cause==d+","+h)return;var g=p[h],v=g.inside,y=!!g.lookbehind,m=!!g.greedy,b=g.alias;if(m&&!g.pattern.global){var w=g.pattern.toString().match(/[imsuy]*$/)[0];g.pattern=RegExp(g.pattern.source,w+"g")}for(var E=g.pattern||g,A=r.next,S=s;A!==t.tail&&!(f&&S>=f.reach);S+=A.value.length,A=A.next){var C=A.value;if(t.length>e.length)return;if(!(C instanceof i)){var x,D=1;if(m){if(!(x=a(E,S,e,y)))break;var O=x.index,k=x.index+x[0].length,B=S;for(B+=A.value.length;O>=B;)B+=(A=A.next).value.length;if(S=B-=A.value.length,A.value instanceof i)continue;for(var T=A;T!==t.tail&&(B<k||"string"==typeof T.value);T=T.next)D++,B+=T.value.length;D--,C=e.slice(S,B),x.index-=S}else if(!(x=a(E,0,C,y)))continue;O=x.index;var F=x[0],_=C.slice(0,O),P=C.slice(O+F.length),j=S+C.length;f&&j>f.reach&&(f.reach=j);var N=A.prev;if(_&&(N=c(t,N,_),S+=_.length),l(t,N,D),A=c(t,N,new i(d,v?o.tokenize(F,v):F,b,F)),P&&c(t,A,P),D>1){var R={cause:d+","+h,reach:j};u(e,t,n,A.prev,S,R),f&&R.reach>f.reach&&(f.reach=R.reach)}}}}}}function s(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function c(e,t,n){var r=t.next,o={value:n,prev:t,next:r};return t.next=o,r.prev=o,e.length++,o}function l(e,t,n){for(var r=t.next,o=0;o<n&&r!==e.tail;o++)r=r.next;t.next=r,r.prev=t,e.length-=o}if(e.Prism=o,i.stringify=function e(t,n){if("string"==typeof t)return t;if(Array.isArray(t)){var r="";return t.forEach((function(t){r+=e(t,n)})),r}var i={type:t.type,content:e(t.content,n),tag:"span",classes:["token",t.type],attributes:{},language:n},a=t.alias;a&&(Array.isArray(a)?Array.prototype.push.apply(i.classes,a):i.classes.push(a)),o.hooks.run("wrap",i);var u="";for(var s in i.attributes)u+=" "+s+'="'+(i.attributes[s]||"").replace(/"/g,"&quot;")+'"';return"<"+i.tag+' class="'+i.classes.join(" ")+'"'+u+">"+i.content+"</"+i.tag+">"},!e.document)return e.addEventListener?(o.disableWorkerMessageHandler||e.addEventListener("message",(function(t){var n=JSON.parse(t.data),r=n.language,i=n.code,a=n.immediateClose;e.postMessage(o.highlight(i,o.languages[r],r)),a&&e.close()}),!1),o):o;var f=o.util.currentScript();function d(){o.manual||o.highlightAll()}if(f&&(o.filename=f.src,f.hasAttribute("data-manual")&&(o.manual=!0)),!o.manual){var p=document.readyState;"loading"===p||"interactive"===p&&f&&f.defer?document.addEventListener("DOMContentLoaded",d):window.requestAnimationFrame?window.requestAnimationFrame(d):window.setTimeout(d,16)}return o}("undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{});e.exports&&(e.exports=t),void 0!==nfe&&(nfe.Prism=t),t.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},t.languages.markup.tag.inside["attr-value"].inside.entity=t.languages.markup.entity,t.languages.markup.doctype.inside["internal-subset"].inside=t.languages.markup,t.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(t.languages.markup.tag,"addInlined",{value:function(e,n){var r={};r["language-"+n]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:t.languages[n]},r.cdata=/^<!\[CDATA\[|\]\]>$/i;var o={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:r}};o["language-"+n]={pattern:/[\s\S]+/,inside:t.languages[n]};var i={};i[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:o},t.languages.insertBefore("markup","cdata",i)}}),Object.defineProperty(t.languages.markup.tag,"addAttribute",{value:function(e,n){t.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[n,"language-"+n],inside:t.languages[n]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),t.languages.html=t.languages.markup,t.languages.mathml=t.languages.markup,t.languages.svg=t.languages.markup,t.languages.xml=t.languages.extend("markup",{}),t.languages.ssml=t.languages.xml,t.languages.atom=t.languages.xml,t.languages.rss=t.languages.xml,function(e){var t=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+t.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+t.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+t.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined("style","css"),n.tag.addAttribute("style","css"))}(t),t.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},t.languages.javascript=t.languages.extend("clike",{"class-name":[t.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:/\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),t.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,t.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:t.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:t.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:t.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:t.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:t.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),t.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:t.languages.javascript}},string:/[\s\S]+/}}}),t.languages.markup&&(t.languages.markup.tag.addInlined("script","javascript"),t.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),t.languages.js=t.languages.javascript,function(){if(void 0!==t&&"undefined"!=typeof document){Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector);var e={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"},n="data-src-status",r='pre[data-src]:not([data-src-status="loaded"]):not([data-src-status="loading"])',o=/\blang(?:uage)?-([\w-]+)\b/i;t.hooks.add("before-highlightall",(function(e){e.selector+=", "+r})),t.hooks.add("before-sanity-check",(function(o){var i=o.element;if(i.matches(r)){o.code="",i.setAttribute(n,"loading");var u=i.appendChild(document.createElement("CODE"));u.textContent="Loadingâ¦";var s=i.getAttribute("data-src"),c=o.language;if("none"===c){var l=(/\.(\w+)$/.exec(s)||[,"none"])[1];c=e[l]||l}a(u,c),a(i,c);var f=t.plugins.autoloader;f&&f.loadLanguages(c);var d=new XMLHttpRequest;d.open("GET",s,!0),d.onreadystatechange=function(){4==d.readyState&&(d.status<400&&d.responseText?(i.setAttribute(n,"loaded"),u.textContent=d.responseText,t.highlightElement(u)):(i.setAttribute(n,"failed"),d.status>=400?u.textContent="â Error "+d.status+" while fetching file: "+d.statusText:u.textContent="â Error: File does not exist or is empty"))},d.send(null)}})),t.plugins.fileHighlight={highlight:function(e){for(var n,o=(e||document).querySelectorAll(r),i=0;n=o[i++];)t.highlightElement(n)}};var i=!1;t.fileHighlight=function(){i||(console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."),i=!0),t.plugins.fileHighlight.highlight.apply(this,arguments)}}function a(e,t){var n=e.className;n=n.replace(o," ")+" language-"+t,e.className=n.replace(/\s+/g," ").trim()}}()}));!function(e){var t=e.util.clone(e.languages.javascript),n=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,r=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,o=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function i(e,t){return e=e.replace(/<S>/g,(function(){return n})).replace(/<BRACES>/g,(function(){return r})).replace(/<SPREAD>/g,(function(){return o})),RegExp(e,t)}o=i(o).source,e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=i(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/i,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/i,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=t.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:i(/<SPREAD>/.source),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:i(/=<BRACES>/.source),inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx},alias:"language-javascript"}},e.languages.jsx.tag);var a=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(a).join(""):""},u=function(t){for(var n=[],r=0;r<t.length;r++){var o=t[r],i=!1;if("string"!=typeof o&&("tag"===o.type&&o.content[0]&&"tag"===o.content[0].type?"</"===o.content[0].content[0].content?n.length>0&&n[n.length-1].tagName===a(o.content[0].content[1])&&n.pop():"/>"===o.content[o.content.length-1].content||n.push({tagName:a(o.content[0].content[1]),openedBraces:0}):n.length>0&&"punctuation"===o.type&&"{"===o.content?n[n.length-1].openedBraces++:n.length>0&&n[n.length-1].openedBraces>0&&"punctuation"===o.type&&"}"===o.content?n[n.length-1].openedBraces--:i=!0),(i||"string"==typeof o)&&n.length>0&&0===n[n.length-1].openedBraces){var s=a(o);r<t.length-1&&("string"==typeof t[r+1]||"plain-text"===t[r+1].type)&&(s+=a(t[r+1]),t.splice(r+1,1)),r>0&&("string"==typeof t[r-1]||"plain-text"===t[r-1].type)&&(s=a(t[r-1])+s,t.splice(r-1,1),r--),t[r]=new e.Token("plain-text",s,null,s)}o.content&&"string"!=typeof o.content&&u(o.content)}};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||u(e.tokens)}))}(Prism),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|as|declare|implements|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)\b(?=\s*(?:[{_$a-zA-Z\xA0-\uFFFF]|$))/,/\btype\b(?=\s*(?:[\{*]|$))/),delete e.languages.typescript.parameter;var t=e.languages.extend("typescript",{});delete t["class-name"],e.languages.typescript["class-name"].inside=t,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:t}}}}),e.languages.ts=e.languages.typescript}(Prism),Prism.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},Prism.languages.markup.tag.inside["attr-value"].inside.entity=Prism.languages.markup.entity,Prism.languages.markup.doctype.inside["internal-subset"].inside=Prism.languages.markup,Prism.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"))})),Object.defineProperty(Prism.languages.markup.tag,"addInlined",{value:function(e,t){var n={};n["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:Prism.languages[t]},n.cdata=/^<!\[CDATA\[|\]\]>$/i;var r={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:n}};r["language-"+t]={pattern:/[\s\S]+/,inside:Prism.languages[t]};var o={};o[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:r},Prism.languages.insertBefore("markup","cdata",o)}}),Object.defineProperty(Prism.languages.markup.tag,"addAttribute",{value:function(e,t){Prism.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[t,"language-"+t],inside:Prism.languages[t]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.xml=Prism.languages.extend("markup",{}),Prism.languages.ssml=Prism.languages.xml,Prism.languages.atom=Prism.languages.xml,Prism.languages.rss=Prism.languages.xml,Prism.languages.go=Prism.languages.extend("clike",{string:{pattern:/(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|iota|nil|true|false)\b/,number:/(?:\b0x[a-f\d]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[-+]?\d+)?)i?/i,operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/}),delete Prism.languages.go["class-name"],function(e){var t=/\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/,n=[{pattern:/\b(?:false|true)\b/i,alias:"boolean"},{pattern:/(::\s*)\b[a-z_]\w*\b(?!\s*\()/i,greedy:!0,lookbehind:!0},{pattern:/(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i,greedy:!0,lookbehind:!0},/\b(?:null)\b/i,/\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/],r=/\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i,o=/<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/,i=/[{}\[\](),:;]/;e.languages.php={delimiter:{pattern:/\?>$|^<\?(?:php(?=\s)|=)?/i,alias:"important"},comment:t,variable:/\$+(?:\w+\b|(?=\{))/i,package:{pattern:/(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,lookbehind:!0,inside:{punctuation:/\\/}},"class-name-definition":{pattern:/(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i,lookbehind:!0,alias:"class-name"},"function-definition":{pattern:/(\bfunction\s+)[a-z_]\w*(?=\s*\()/i,lookbehind:!0,alias:"function"},keyword:[{pattern:/(\(\s*)\b(?:bool|boolean|int|integer|float|string|object|array)\b(?=\s*\))/i,alias:"type-casting",greedy:!0,lookbehind:!0},{pattern:/([(,?]\s*)\b(?:bool|int|float|string|object|array(?!\s*\()|mixed|self|static|callable|iterable|(?:null|false)(?=\s*\|))\b(?=\s*\$)/i,alias:"type-hint",greedy:!0,lookbehind:!0},{pattern:/([(,?]\s*[\w|]\|\s*)(?:null|false)\b(?=\s*\$)/i,alias:"type-hint",greedy:!0,lookbehind:!0},{pattern:/(\)\s*:\s*(?:\?\s*)?)\b(?:bool|int|float|string|object|void|array(?!\s*\()|mixed|self|static|callable|iterable|(?:null|false)(?=\s*\|))\b/i,alias:"return-type",greedy:!0,lookbehind:!0},{pattern:/(\)\s*:\s*(?:\?\s*)?[\w|]\|\s*)(?:null|false)\b/i,alias:"return-type",greedy:!0,lookbehind:!0},{pattern:/\b(?:bool|int|float|string|object|void|array(?!\s*\()|mixed|iterable|(?:null|false)(?=\s*\|))\b/i,alias:"type-declaration",greedy:!0},{pattern:/(\|\s*)(?:null|false)\b/i,alias:"type-declaration",greedy:!0,lookbehind:!0},{pattern:/\b(?:parent|self|static)(?=\s*::)/i,alias:"static-context",greedy:!0},{pattern:/(\byield\s+)from\b/i,lookbehind:!0},/\bclass\b/i,{pattern:/((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\b/i,lookbehind:!0}],"argument-name":{pattern:/([(,]\s+)\b[a-z_]\w*(?=\s*:(?!:))/i,lookbehind:!0},"class-name":[{pattern:/(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,greedy:!0,lookbehind:!0},{pattern:/(\|\s*)\b[a-z_]\w*(?!\\)\b/i,greedy:!0,lookbehind:!0},{pattern:/\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i,greedy:!0},{pattern:/(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,alias:"class-name-fully-qualified",greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}},{pattern:/(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i,alias:"class-name-fully-qualified",greedy:!0,inside:{punctuation:/\\/}},{pattern:/(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,alias:"class-name-fully-qualified",greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}},{pattern:/\b[a-z_]\w*(?=\s*\$)/i,alias:"type-declaration",greedy:!0},{pattern:/(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,alias:["class-name-fully-qualified","type-declaration"],greedy:!0,inside:{punctuation:/\\/}},{pattern:/\b[a-z_]\w*(?=\s*::)/i,alias:"static-context",greedy:!0},{pattern:/(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,alias:["class-name-fully-qualified","static-context"],greedy:!0,inside:{punctuation:/\\/}},{pattern:/([(,?]\s*)[a-z_]\w*(?=\s*\$)/i,alias:"type-hint",greedy:!0,lookbehind:!0},{pattern:/([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,alias:["class-name-fully-qualified","type-hint"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}},{pattern:/(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i,alias:"return-type",greedy:!0,lookbehind:!0},{pattern:/(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,alias:["class-name-fully-qualified","return-type"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}}],constant:n,function:{pattern:/(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i,lookbehind:!0,inside:{punctuation:/\\/}},property:{pattern:/(->\s*)\w+/,lookbehind:!0},number:r,operator:o,punctuation:i};var a={pattern:/\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,lookbehind:!0,inside:e.languages.php},u=[{pattern:/<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,alias:"nowdoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<'?|[';]$/}}}},{pattern:/<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<"?|[";]$/}},interpolation:a}},{pattern:/`(?:\\[\s\S]|[^\\`])*`/,alias:"backtick-quoted-string",greedy:!0},{pattern:/'(?:\\[\s\S]|[^\\'])*'/,alias:"single-quoted-string",greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,alias:"double-quoted-string",greedy:!0,inside:{interpolation:a}}];e.languages.insertBefore("php","variable",{string:u,attribute:{pattern:/#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,greedy:!0,inside:{"attribute-content":{pattern:/^(#\[)[\s\S]+(?=\]$)/,lookbehind:!0,inside:{comment:t,string:u,"attribute-class-name":[{pattern:/([^:]|^)\b[a-z_]\w*(?!\\)\b/i,alias:"class-name",greedy:!0,lookbehind:!0},{pattern:/([^:]|^)(?:\\?\b[a-z_]\w*)+/i,alias:["class-name","class-name-fully-qualified"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}}],constant:n,number:r,operator:o,punctuation:i}},delimiter:{pattern:/^#\[|\]$/,alias:"punctuation"}}}}),e.hooks.add("before-tokenize",(function(t){/<\?/.test(t.code)&&e.languages["markup-templating"].buildPlaceholders(t,"php",/<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/gi)})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"php")}))}(Prism),Prism.languages.c=Prism.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),Prism.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},Prism.languages.c.string],comment:Prism.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:Prism.languages.c}}},constant:/\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/}),delete Prism.languages.c.boolean,Prism.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0},"string-interpolation":{pattern:/(?:f|rf|fr)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|rb|br)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|rb|br)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/im,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:True|False|None)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?\b/i,operator:/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},Prism.languages.python["string-interpolation"].inside.interpolation.inside.rest=Prism.languages.python,Prism.languages.py=Prism.languages.python,function(e){var t=/\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/,n=/(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source,r={pattern:RegExp(n+/[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),lookbehind:!0,inside:{namespace:{pattern:/^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,inside:{punctuation:/\./}},punctuation:/\./}};e.languages.java=e.languages.extend("clike",{"class-name":[r,{pattern:RegExp(n+/[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source),lookbehind:!0,inside:r.inside}],keyword:t,function:[e.languages.clike.function,{pattern:/(::\s*)[a-z_]\w*/,lookbehind:!0}],number:/\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,operator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,lookbehind:!0}}),e.languages.insertBefore("java","string",{"triple-quoted-string":{pattern:/"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,greedy:!0,alias:"string"}}),e.languages.insertBefore("java","class-name",{annotation:{pattern:/(^|[^.])@\w+(?:\s*\.\s*\w+)*/,lookbehind:!0,alias:"punctuation"},generics:{pattern:/<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,inside:{"class-name":r,keyword:t,punctuation:/[<>(),.:]/,operator:/[?&|]/}},namespace:{pattern:RegExp(/(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(/<keyword>/g,(function(){return t.source}))),lookbehind:!0,inside:{punctuation:/\./}}})}(Prism),function(e){var t=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,n=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,(function(){return t.source}));e.languages.cpp=e.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,(function(){return t.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:t,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:true|false)\b/}),e.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:module|import)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,(function(){return n}))+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),e.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b(?!operator\b)[a-z_]\w*\s*<(?:[^<>]|<[^<>]*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e.languages.cpp}}}}),e.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),e.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend("cpp",{})}}),e.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},e.languages.cpp["base-clause"])}(Prism),function(e){function t(e,t){return e.replace(/<<(\d+)>>/g,(function(e,n){return"(?:"+t[+n]+")"}))}function n(e,n,r){return RegExp(t(e,n),r||"")}function r(e,t){for(var n=0;n<t;n++)e=e.replace(/<<self>>/g,(function(){return"(?:"+e+")"}));return e.replace(/<<self>>/g,"[^\\s\\S]")}var o="bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",i="class enum interface record struct",a="add alias and ascending async await by descending from(?=\\s*(?:\\w|$)) get global group into init(?=\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\s*{)",u="abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield";function s(e){return"\\b(?:"+e.trim().replace(/ /g,"|")+")\\b"}var c=s(i),l=RegExp(s(o+" "+i+" "+a+" "+u)),f=s(i+" "+a+" "+u),d=s(o+" "+i+" "+u),p=r(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source,2),h=r(/\((?:[^()]|<<self>>)*\)/.source,2),g=/@?\b[A-Za-z_]\w*\b/.source,v=t(/<<0>>(?:\s*<<1>>)?/.source,[g,p]),y=t(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source,[f,v]),m=/\[\s*(?:,\s*)*\]/.source,b=t(/<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source,[y,m]),w=t(/[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,[p,h,m]),E=t(/\(<<0>>+(?:,<<0>>+)+\)/.source,[w]),A=t(/(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source,[E,y,m]),S={keyword:l,punctuation:/[<>()?,.:[\]]/},C=/'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source,x=/"(?:\\.|[^\\"\r\n])*"/.source,D=/@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;e.languages.csharp=e.languages.extend("clike",{string:[{pattern:n(/(^|[^$\\])<<0>>/.source,[D]),lookbehind:!0,greedy:!0},{pattern:n(/(^|[^@$\\])<<0>>/.source,[x]),lookbehind:!0,greedy:!0},{pattern:RegExp(C),greedy:!0,alias:"character"}],"class-name":[{pattern:n(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source,[y]),lookbehind:!0,inside:S},{pattern:n(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source,[g,A]),lookbehind:!0,inside:S},{pattern:n(/(\busing\s+)<<0>>(?=\s*=)/.source,[g]),lookbehind:!0},{pattern:n(/(\b<<0>>\s+)<<1>>/.source,[c,v]),lookbehind:!0,inside:S},{pattern:n(/(\bcatch\s*\(\s*)<<0>>/.source,[y]),lookbehind:!0,inside:S},{pattern:n(/(\bwhere\s+)<<0>>/.source,[g]),lookbehind:!0},{pattern:n(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source,[b]),lookbehind:!0,inside:S},{pattern:n(/\b<<0>>(?=\s+(?!<<1>>|with\s*\{)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source,[A,d,g]),inside:S}],keyword:l,number:/(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:ul|lu|[dflmu])?\b/i,operator:/>>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,punctuation:/\?\.?|::|[{}[\];(),.:]/}),e.languages.insertBefore("csharp","number",{range:{pattern:/\.\./,alias:"operator"}}),e.languages.insertBefore("csharp","punctuation",{"named-parameter":{pattern:n(/([(,]\s*)<<0>>(?=\s*:)/.source,[g]),lookbehind:!0,alias:"punctuation"}}),e.languages.insertBefore("csharp","class-name",{namespace:{pattern:n(/(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source,[g]),lookbehind:!0,inside:{punctuation:/\./}},"type-expression":{pattern:n(/(\b(?:default|typeof|sizeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source,[h]),lookbehind:!0,alias:"class-name",inside:S},"return-type":{pattern:n(/<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source,[A,y]),inside:S,alias:"class-name"},"constructor-invocation":{pattern:n(/(\bnew\s+)<<0>>(?=\s*[[({])/.source,[A]),lookbehind:!0,inside:S,alias:"class-name"},"generic-method":{pattern:n(/<<0>>\s*<<1>>(?=\s*\()/.source,[g,p]),inside:{function:n(/^<<0>>/.source,[g]),generic:{pattern:RegExp(p),alias:"class-name",inside:S}}},"type-list":{pattern:n(/\b((?:<<0>>\s+<<1>>|record\s+<<1>>\s*<<5>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>|<<1>>\s*<<5>>|<<6>>)(?:\s*,\s*(?:<<3>>|<<4>>|<<6>>))*(?=\s*(?:where|[{;]|=>|$))/.source,[c,v,g,A,l.source,h,/\bnew\s*\(\s*\)/.source]),lookbehind:!0,inside:{"record-arguments":{pattern:n(/(^(?!new\s*\()<<0>>\s*)<<1>>/.source,[v,h]),lookbehind:!0,greedy:!0,inside:e.languages.csharp},keyword:l,"class-name":{pattern:RegExp(A),greedy:!0,inside:S},punctuation:/[,()]/}},preprocessor:{pattern:/(^[\t ]*)#.*/m,lookbehind:!0,alias:"property",inside:{directive:{pattern:/(#)\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\b/,lookbehind:!0,alias:"keyword"}}}});var O=x+"|"+C,k=t(/\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source,[O]),B=r(t(/[^"'/()]|<<0>>|\(<<self>>*\)/.source,[k]),2),T=/\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source,F=t(/<<0>>(?:\s*\(<<1>>*\))?/.source,[y,B]);e.languages.insertBefore("csharp","class-name",{attribute:{pattern:n(/((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source,[T,F]),lookbehind:!0,greedy:!0,inside:{target:{pattern:n(/^<<0>>(?=\s*:)/.source,[T]),alias:"keyword"},"attribute-arguments":{pattern:n(/\(<<0>>*\)/.source,[B]),inside:e.languages.csharp},"class-name":{pattern:RegExp(y),inside:{punctuation:/\./}},punctuation:/[:,]/}}});var _=/:[^}\r\n]+/.source,P=r(t(/[^"'/()]|<<0>>|\(<<self>>*\)/.source,[k]),2),j=t(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,[P,_]),N=r(t(/[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source,[O]),2),R=t(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,[N,_]);function I(t,r){return{interpolation:{pattern:n(/((?:^|[^{])(?:\{\{)*)<<0>>/.source,[t]),lookbehind:!0,inside:{"format-string":{pattern:n(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source,[r,_]),lookbehind:!0,inside:{punctuation:/^:/}},punctuation:/^\{|\}$/,expression:{pattern:/[\s\S]+/,alias:"language-csharp",inside:e.languages.csharp}}},string:/[\s\S]+/}}e.languages.insertBefore("csharp","string",{"interpolation-string":[{pattern:n(/(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source,[j]),lookbehind:!0,greedy:!0,inside:I(j,P)},{pattern:n(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source,[R]),lookbehind:!0,greedy:!0,inside:I(R,N)}]})}(Prism),Prism.languages.dotnet=Prism.languages.cs=Prism.languages.csharp,Prism.languages["visual-basic"]={comment:{pattern:/(?:['ââ]|REM\b)(?:[^\r\n_]|_(?:\r\n?|\n)?)*/i,inside:{keyword:/^REM/i}},directive:{pattern:/#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\S\r\n]_[^\S\r\n]*(?:\r\n?|\n)|.)+/i,alias:"comment",greedy:!0},string:{pattern:/\$?["ââ](?:["ââ]{2}|[^"ââ])*["ââ]C?/i,greedy:!0},date:{pattern:/#[^\S\r\n]*(?:\d+([/-])\d+\1\d+(?:[^\S\r\n]+(?:\d+[^\S\r\n]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[^\S\r\n]*(?:AM|PM))?))?|\d+[^\S\r\n]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[^\S\r\n]*(?:AM|PM))?)[^\S\r\n]*#/i,alias:"builtin"},number:/(?:(?:\b\d+(?:\.\d+)?|\.\d+)(?:E[+-]?\d+)?|&[HO][\dA-F]+)(?:U?[ILS]|[FRD])?/i,boolean:/\b(?:True|False|Nothing)\b/i,keyword:/\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Until|Xor)\b/i,operator:[/[+\-*/\\^<=>&#@$%!]/,{pattern:/([^\S\r\n])_(?=[^\S\r\n]*[\r\n])/,lookbehind:!0}],punctuation:/[{}().,:?]/},Prism.languages.vb=Prism.languages["visual-basic"],Prism.languages.vba=Prism.languages["visual-basic"],Prism.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:TRUE|FALSE|NULL)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|IN|ILIKE|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){e.languages.ruby=e.languages.extend("clike",{comment:[/#.*/,{pattern:/^=begin\s[\s\S]*?^=end/m,greedy:!0}],"class-name":{pattern:/(\b(?:class)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/});var t={pattern:/#\{[^}]+\}/,inside:{delimiter:{pattern:/^#\{|\}$/,alias:"tag"},rest:e.languages.ruby}};delete e.languages.ruby.function,e.languages.insertBefore("ruby","keyword",{regex:[{pattern:RegExp(/%r/.source+"(?:"+[/([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,/\((?:[^()\\]|\\[\s\S])*\)/.source,/\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}/.source,/\[(?:[^\[\]\\]|\\[\s\S])*\]/.source,/<(?:[^<>\\]|\\[\s\S])*>/.source].join("|")+")"+/[egimnosux]{0,6}/.source),greedy:!0,inside:{interpolation:t}},{pattern:/(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,lookbehind:!0,greedy:!0,inside:{interpolation:t}}],variable:/[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,symbol:{pattern:/(^|[^:]):[a-zA-Z_]\w*(?:[?!]|\b)/,lookbehind:!0},"method-definition":{pattern:/(\bdef\s+)[\w.]+/,lookbehind:!0,inside:{function:/\w+$/,rest:e.languages.ruby}}}),e.languages.insertBefore("ruby","number",{builtin:/\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\b/,constant:/\b[A-Z]\w*(?:[?!]|\b)/}),e.languages.ruby.string=[{pattern:RegExp(/%[qQiIwWxs]?/.source+"(?:"+[/([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,/\((?:[^()\\]|\\[\s\S])*\)/.source,/\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}/.source,/\[(?:[^\[\]\\]|\\[\s\S])*\]/.source,/<(?:[^<>\\]|\\[\s\S])*>/.source].join("|")+")"),greedy:!0,inside:{interpolation:t}},{pattern:/("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,greedy:!0,inside:{interpolation:t}},{pattern:/<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?[a-z_]\w*|[a-z_]\w*$/i,alias:"symbol",inside:{punctuation:/^<<[-~]?/}},interpolation:t}},{pattern:/<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?'[a-z_]\w*'|[a-z_]\w*$/i,alias:"symbol",inside:{punctuation:/^<<[-~]?'|'$/}}}}],e.languages.rb=e.languages.ruby}(Prism),Prism.languages.swift={comment:{pattern:/(^|[^\\:])(?:\/\/.*|\/\*(?:[^/*]|\/(?!\*)|\*(?!\/)|\/\*(?:[^*]|\*(?!\/))*\*\/)*\*\/)/,lookbehind:!0,greedy:!0},"string-literal":[{pattern:RegExp(/(^|[^"#])/.source+"(?:"+/"(?:\\(?:\((?:[^()]|\([^()]*\))*\)|\r\n|[^(])|[^\\\r\n"])*"/.source+"|"+/"""(?:\\(?:\((?:[^()]|\([^()]*\))*\)|[^(])|[^\\"]|"(?!""))*"""/.source+")"+/(?!["#])/.source),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\\()(?:[^()]|\([^()]*\))*(?=\))/,lookbehind:!0,inside:null},"interpolation-punctuation":{pattern:/^\)|\\\($/,alias:"punctuation"},punctuation:/\\(?=[\r\n])/,string:/[\s\S]+/}},{pattern:RegExp(/(^|[^"#])(#+)/.source+"(?:"+/"(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|\r\n|[^#])|[^\\\r\n])*?"/.source+"|"+/"""(?:\\(?:#+\((?:[^()]|\([^()]*\))*\)|[^#])|[^\\])*?"""/.source+")\\2"),lookbehind:!0,greedy:!0,inside:{interpolation:{pattern:/(\\#+\()(?:[^()]|\([^()]*\))*(?=\))/,lookbehind:!0,inside:null},"interpolation-punctuation":{pattern:/^\)|\\#+\($/,alias:"punctuation"},string:/[\s\S]+/}}],directive:{pattern:RegExp(/#/.source+"(?:"+/(?:elseif|if)\b/.source+"(?:[ \t]*"+/(?:![ \t]*)?(?:\b\w+\b(?:[ \t]*\((?:[^()]|\([^()]*\))*\))?|\((?:[^()]|\([^()]*\))*\))(?:[ \t]*(?:&&|\|\|))?/.source+")+|"+/(?:else|endif)\b/.source+")"),alias:"property",inside:{"directive-name":/^#\w+/,boolean:/\b(?:true|false)\b/,number:/\b\d+(?:\.\d+)*\b/,operator:/!|&&|\|\||[<>]=?/,punctuation:/[(),]/}},literal:{pattern:/#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\b/,alias:"constant"},"other-directive":{pattern:/#\w+\b/,alias:"property"},attribute:{pattern:/@\w+/,alias:"atrule"},"function-definition":{pattern:/(\bfunc\s+)\w+/,lookbehind:!0,alias:"function"},label:{pattern:/\b(break|continue)\s+\w+|\b[a-zA-Z_]\w*(?=\s*:\s*(?:for|repeat|while)\b)/,lookbehind:!0,alias:"important"},keyword:/\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\b/,boolean:/\b(?:true|false)\b/,nil:{pattern:/\bnil\b/,alias:"constant"},"short-argument":/\$\d+\b/,omit:{pattern:/\b_\b/,alias:"keyword"},number:/\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,"class-name":/\b[A-Z](?:[A-Z_\d]*[a-z]\w*)?\b/,function:/\b[a-z_]\w*(?=\s*\()/i,constant:/\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,operator:/[-+*/%=!<>&|^~?]+|\.[.\-+*/%=!<>&|^~?]+/,punctuation:/[{}[\]();,.:\\]/},Prism.languages.swift["string-literal"].forEach((function(e){e.inside.interpolation.inside=Prism.languages.swift})),function(e){var t="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",n={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},r={bash:n,environment:{pattern:RegExp("\\$"+t),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+t),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+t),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:r},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:n}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:r},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:r.entity}}],environment:{pattern:RegExp("\\$?"+t),alias:"constant"},variable:r.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},n.inside=e.languages.bash;for(var o=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],i=r.variable[1].inside,a=0;a<o.length;a++)i[o[a]]=e.languages.bash[o[a]];e.languages.shell=e.languages.bash}(Prism),function(e){var t=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function n(e){return e=e.replace(/<inner>/g,(function(){return t})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var r=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,o=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return r})),i=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"font-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+o+i+"(?:"+o+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+o+i+")(?:"+o+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(r),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+o+")"+i+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+o+"$"),inside:{"table-header":{pattern:RegExp(r),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:n(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:n(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:n(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:n(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(t){["url","bold","italic","strike","code-snippet"].forEach((function(n){t!==n&&(e.languages.markdown[t].inside.content.inside[n]=e.languages.markdown[n])}))})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(t){if(t&&"string"!=typeof t)for(var n=0,r=t.length;n<r;n++){var o=t[n];if("code"===o.type){var i=o.content[1],a=o.content[3];if(i&&a&&"code-language"===i.type&&"code-block"===a.type&&"string"==typeof i.content){var u=i.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),s="language-"+(u=(/[a-z][\w-]*/i.exec(u)||[""])[0].toLowerCase());a.alias?"string"==typeof a.alias?a.alias=[a.alias,s]:a.alias.push(s):a.alias=[s]}}else e(o.content)}}(e.tokens)})),e.hooks.add("wrap",(function(t){if("code-block"===t.type){for(var n="",r=0,o=t.classes.length;r<o;r++){var i=t.classes[r],c=/language-(.+)/.exec(i);if(c){n=c[1];break}}var l=e.languages[n];if(l)t.content=e.highlight(function(e){return e.replace(a,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,t){var n;return"#"===(t=t.toLowerCase())[0]?(n="x"===t[1]?parseInt(t.slice(2),16):Number(t.slice(1)),s(n)):u[t]||e}))}(t.content),l,n);else if(n&&"none"!==n&&e.plugins.autoloader){var f="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());t.attributes.id=f,e.plugins.autoloader.loadLanguages(n,(function(){var t=document.getElementById(f);t&&(t.innerHTML=e.highlight(t.textContent,e.languages[n],n))}))}}}));var a=RegExp(e.languages.markup.tag.pattern.source,"gi"),u={amp:"&",lt:"<",gt:">",quot:'"'},s=String.fromCodePoint||String.fromCharCode;e.languages.md=e.languages.markdown}(Prism),Prism.languages.lua={comment:/^#!.+|--(?:\[(=*)\[[\s\S]*?\]\1\]|.*)/m,string:{pattern:/(["'])(?:(?!\1)[^\\\r\n]|\\z(?:\r\n|\s)|\\(?:\r\n|[^z]))*\1|\[(=*)\[[\s\S]*?\]\2\]/,greedy:!0},number:/\b0x[a-f\d]+(?:\.[a-f\d]*)?(?:p[+-]?\d+)?\b|\b\d+(?:\.\B|(?:\.\d*)?(?:e[+-]?\d+)?\b)|\B\.\d+(?:e[+-]?\d+)?\b/i,keyword:/\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\b/,function:/(?!\d)\w+(?=\s*(?:[({]))/,operator:[/[-+*%^&|#]|\/\/?|<[<=]?|>[>=]?|[=~]=?/,{pattern:/(^|[^.])\.\.(?!\.)/,lookbehind:!0}],punctuation:/[\[\](){},;]|\.+|:+/},Prism.languages.groovy=Prism.languages.extend("clike",{string:[{pattern:/("""|''')(?:[^\\]|\\[\s\S])*?\1|\$\/(?:[^/$]|\$(?:[/$]|(?![/$]))|\/(?!\$))*\/\$/,greedy:!0},{pattern:/(["'/])(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0}],keyword:/\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\b/,number:/\b(?:0b[01_]+|0x[\da-f_]+(?:\.[\da-f_p\-]+)?|[\d_]+(?:\.[\d_]+)?(?:e[+-]?\d+)?)[glidf]?\b/i,operator:{pattern:/(^|[^.])(?:~|==?~?|\?[.:]?|\*(?:[.=]|\*=?)?|\.[@&]|\.\.<|\.\.(?!\.)|-[-=>]?|\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\|[|=]?|\/=?|\^=?|%=?)/,lookbehind:!0},punctuation:/\.+|[{}[\];(),:$]/}),Prism.languages.insertBefore("groovy","string",{shebang:{pattern:/#!.+/,alias:"comment"}}),Prism.languages.insertBefore("groovy","punctuation",{"spock-block":/\b(?:setup|given|when|then|and|cleanup|expect|where):/}),Prism.languages.insertBefore("groovy","function",{annotation:{pattern:/(^|[^.])@\w+/,lookbehind:!0,alias:"punctuation"}}),Prism.hooks.add("wrap",(function(e){if("groovy"===e.language&&"string"===e.type){var t=e.content[0];if("'"!=t){var n=/([^\\])(?:\$(?:\{.*?\}|[\w.]+))/;"$"===t&&(n=/([^\$])(?:\$(?:\{.*?\}|[\w.]+))/),e.content=e.content.replace(/&lt;/g,"<").replace(/&amp;/g,"&"),e.content=Prism.highlight(e.content,{expression:{pattern:n,lookbehind:!0,inside:Prism.languages.groovy}}),e.classes.push("/"===t?"regex":"gstring")}}}));var lhe=["comment","prolog","doctype","cdata","punctuation","namespace","property","tag","boolean","number","constant","symbol","deleted","selector","attr-name","string","builtin","inserted","operator","entity","url","string","atrule","attr-value","keyword","function","class-name","regex","important","variable","bold","italic","entity","char"];function fhe(e){return"string"==typeof e?e.length:"string"==typeof e.content?e.content.length:e.content.reduce((function(e,t){return e+fhe(t)}),0)}var dhe,phe=ufe.String,hhe=function(e){if("Symbol"===Kde(e))throw TypeError("Cannot convert a Symbol value to a string");return phe(e)},ghe=function(){var e=Qfe(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},vhe=ufe.RegExp,yhe=Nfe((function(){var e=vhe("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),mhe=yhe||Nfe((function(){return!vhe("a","y").sticky})),bhe={BROKEN_CARET:yhe||Nfe((function(){var e=vhe("^r","gy");return e.lastIndex=2,null!=e.exec("str")})),MISSED_STICKY:mhe,UNSUPPORTED_Y:yhe},whe=qfe?Object.defineProperties:function(e,t){Qfe(e);for(var n,r=_pe(t),o=ohe(t),i=o.length,a=0;i>a;)vde.f(e,n=o[a++],r[n]);return e},Ehe=kfe("document","documentElement"),Ahe=Ode("IE_PROTO"),She=function(){},Che=function(e){return"<script>"+e+"<\/script>"},xhe=function(e){e.write(Che("")),e.close();var t=e.parentWindow.Object;return e=null,t},Dhe=function(){try{dhe=new ActiveXObject("htmlfile")}catch(e){}var e,t;Dhe="undefined"!=typeof document?document.domain&&dhe?xhe(dhe):((t=Yfe("iframe")).style.display="none",Ehe.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(Che("document.F=Object")),e.close(),e.F):xhe(dhe);for(var n=Hpe.length;n--;)delete Dhe.prototype[Hpe[n]];return Dhe()};kde[Ahe]=!0;var Ohe,khe,Bhe=Object.create||function(e,t){var n;return null!==e?(She.prototype=Qfe(e),n=new She,She.prototype=null,n[Ahe]=e):n=Dhe(),void 0===t?n:whe(n,t)},The=ufe.RegExp,Fhe=Nfe((function(){var e=The(".","s");return!(e.dotAll&&e.exec("\n")&&"s"===e.flags)})),_he=ufe.RegExp,Phe=Nfe((function(){var e=_he("(?<a>b)","g");return"b"!==e.exec("b").groups.a||"bc"!=="b".replace(e,"$<a>c")})),jhe=Rde.get,Nhe=ffe("native-string-replace",String.prototype.replace),Rhe=RegExp.prototype.exec,Ihe=Rhe,Lhe=vfe("".charAt),Mhe=vfe("".indexOf),zhe=vfe("".replace),$he=vfe("".slice),Hhe=(khe=/b*/g,tde(Rhe,Ohe=/a/,"a"),tde(Rhe,khe,"a"),0!==Ohe.lastIndex||0!==khe.lastIndex),Uhe=bhe.BROKEN_CARET,Vhe=void 0!==/()??/.exec("")[1];(Hhe||Vhe||Uhe||Fhe||Phe)&&(Ihe=function(e){var t,n,r,o,i,a,u,s=this,c=jhe(s),l=hhe(e),f=c.raw;if(f)return f.lastIndex=s.lastIndex,t=tde(Ihe,f,l),s.lastIndex=f.lastIndex,t;var d=c.groups,p=Uhe&&s.sticky,h=tde(ghe,s),g=s.source,v=0,y=l;if(p&&(h=zhe(h,"y",""),-1===Mhe(h,"g")&&(h+="g"),y=$he(l,s.lastIndex),s.lastIndex>0&&(!s.multiline||s.multiline&&"\n"!==Lhe(l,s.lastIndex-1))&&(g="(?: "+g+")",y=" "+y,v++),n=new RegExp("^(?:"+g+")",h)),Vhe&&(n=new RegExp("^"+g+"$(?!\\s)",h)),Hhe&&(r=s.lastIndex),o=tde(Rhe,p?n:s,y),p?o?(o.input=$he(o.input,v),o[0]=$he(o[0],v),o.index=s.lastIndex,s.lastIndex+=o[0].length):s.lastIndex=0:Hhe&&o&&(s.lastIndex=s.global?o.index+o[0].length:r),Vhe&&o&&o.length>1&&tde(Nhe,o[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(o[i]=void 0)})),o&&d)for(o.groups=a=Bhe(null),i=0;i<d.length;i++)a[(u=d[i])[0]]=o[u[1]];return o});var qhe=Ihe;rhe({target:"RegExp",proto:!0,forced:/./.exec!==qhe},{exec:qhe});var Whe=Function.prototype,Ghe=Whe.apply,Khe=Whe.bind,Yhe=Whe.call,Xhe="object"==typeof Reflect&&Reflect.apply||(Khe?Yhe.bind(Ghe):function(){return Yhe.apply(Ghe,arguments)}),Jhe=Hfe("species"),Zhe=RegExp.prototype,Qhe=Hfe("match"),ege=ufe.TypeError,tge=Hfe("species"),nge=vfe("".charAt),rge=vfe("".charCodeAt),oge=vfe("".slice),ige=function(e){return function(t,n){var r,o,i=hhe(mfe(t)),a=upe(n),u=i.length;return a<0||a>=u?e?"":void 0:(r=rge(i,a))<55296||r>56319||a+1===u||(o=rge(i,a+1))<56320||o>57343?e?nge(i,a):r:e?oge(i,a,a+2):o-56320+(r-55296<<10)+65536}},age=(ige(!1),ige(!0)),uge=function(e,t,n){return t+(n?age(e,t).length:1)},sge=ufe.Array,cge=Math.max,lge=function(e,t,n){for(var r,o,i,a,u=lpe(e),s=Ipe(t,u),c=Ipe(void 0===n?u:n,u),l=sge(cge(c-s,0)),f=0;s<c;s++,f++)r=l,o=f,i=e[s],(a=pde(o))in r?vde.f(r,a,yde(0,i)):r[a]=i;return l.length=f,l},fge=ufe.TypeError,dge=function(e,t){var n=e.exec;if(Ofe(n)){var r=tde(n,e,t);return null!==r&&Qfe(r),r}if("RegExp"===Vde(e))return tde(qhe,e,t);throw fge("RegExp#exec called on incompatible receiver")},pge=bhe.UNSUPPORTED_Y,hge=Math.min,gge=[].push,vge=vfe(/./.exec),yge=vfe(gge),mge=vfe("".slice);!function(e,t,n,r){var o=Hfe(e),i=!Nfe((function(){var t={};return t[o]=function(){return 7},7!=""[e](t)})),a=i&&!Nfe((function(){var e=!1,t=/a/;return(t={}).constructor={},t.constructor[Jhe]=function(){return t},t.flags="",t[o]=/./[o],t.exec=function(){return e=!0,null},t[o](""),!e}));if(!i||!a||n){var u=vfe(/./[o]),s=function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r,o,i=hhe(mfe(this)),a=void 0===n?4294967295:n>>>0;if(0===a)return[];if(void 0===e)return[i];if(!Wfe(r=e)||!(void 0!==(o=r[Qhe])?o:"RegExp"==Vde(r)))return tde(t,i,e,a);for(var u,s,c,l=[],f=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),d=0,p=new RegExp(e.source,f+"g");(u=tde(qhe,p,i))&&!((s=p.lastIndex)>d&&(yge(l,mge(i,d,u.index)),u.length>1&&u.index<i.length&&Xhe(gge,l,lge(u,1)),c=u[0].length,d=s,l.length>=a));)p.lastIndex===u.index&&p.lastIndex++;return d===i.length?!c&&vge(p,"")||yge(l,""):yge(l,mge(i,d)),l.length>a?lge(l,0,a):l}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:tde(t,this,e,n)}:t,[function(t,n){var o=mfe(this),i=null==t?void 0:cde(t,e);return i?tde(i,t,o,n):tde(r,hhe(o),t,n)},function(e,o){var i=Qfe(this),a=hhe(e),u=n(r,i,a,o,r!==t);if(u.done)return u.value;var s=function(e,t){var n,r=Qfe(e).constructor;return void 0===r||null==(n=Qfe(r)[tge])?t:function(e){if(bpe(e))return e;throw ege(ade(e)+" is not a constructor")}(n)}(i,RegExp),c=i.unicode,l=(i.ignoreCase?"i":"")+(i.multiline?"m":"")+(i.unicode?"u":"")+(pge?"g":"y"),f=new s(pge?"^(?:"+i.source+")":i,l),d=void 0===o?4294967295:o>>>0;if(0===d)return[];if(0===a.length)return null===dge(f,a)?[a]:[];for(var p=0,h=0,g=[];h<a.length;){f.lastIndex=pge?0:h;var v,y=dge(f,pge?mge(a,h):a);if(null===y||(v=hge(cpe(f.lastIndex+(pge?h:0)),a.length))===p)h=uge(a,h,c);else{if(yge(g,mge(a,p,h)),g.length===d)return g;for(var m=1;m<=y.length-1;m++)if(yge(g,y[m]),g.length===d)return g;h=p=v}}return yge(g,mge(a,p)),g}]}(o,""[e],(function(e,t,n,r,o){var a=vfe(e),s=t.exec;return s===qhe||s===Zhe.exec?i&&!o?{done:!0,value:u(t,n,r)}:{done:!0,value:a(n,t,r)}:{done:!1}}));$de(String.prototype,e,s[0]),$de(Zhe,o,s[1])}r&&mde(Zhe[o],"sham",!0)}("split",0,!!Nfe((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),pge),rhe({global:!0},{globalThis:ufe}),Cp&&(wp.fn.attr=Cp);var bge=zde.PROPER,wge=RegExp.prototype,Ege=wge.toString,Age=vfe(ghe),Sge=Nfe((function(){return"/a/b"!=Ege.call({source:"a",flags:"b"})})),Cge=bge&&"toString"!=Ege.name;(Sge||Cge)&&$de(RegExp.prototype,"toString",(function(){var e=Qfe(this),t=hhe(e.source),n=e.flags;return"/"+t+"/"+hhe(void 0===n&&nde(wge,e)&&!("flags"in wge)?Age(e):n)}),{unsafe:!0});var xge=function(){function e(){this.title=J_("highLightModule.selectLang"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M64 64v896h896V64H64z m487.6 698.8c0 87.2-51.2 127-125.8 127-67.4 0-106.4-34.8-126.4-77l68.6-41.4c13.2 23.4 25.2 43.2 54.2 43.2 27.6 0 45.2-10.8 45.2-53V475.4h84.2v287.4z m199.2 127c-78.2 0-128.8-37.2-153.4-86l68.6-39.6c18 29.4 41.6 51.2 83 51.2 34.8 0 57.2-17.4 57.2-41.6 0-28.8-22.8-39-61.4-56l-21-9c-60.8-25.8-101-58.4-101-127 0-63.2 48.2-111.2 123.2-111.2 53.6 0 92 18.6 119.6 67.4L800 580c-14.4-25.8-30-36-54.2-36-24.6 0-40.2 15.6-40.2 36 0 25.2 15.6 35.4 51.8 51.2l21 9c71.6 30.6 111.8 62 111.8 132.4 0 75.6-59.6 117.2-139.4 117.2z"></path></svg>',this.tag="select",this.width=95,this.selectPanelWidth=115}return e.prototype.getOptions=function(e){var t=[],n=e.getMenuConfig("codeSelectLang").codeLangs,r=void 0===n?[]:n;t.push({text:"plain text",value:""}),r.forEach((function(e){var n=e.text,r=e.value;t.push({text:n,value:r})}));var o=this.getValue(e);return t.forEach((function(e){e.value===o?e.selected=!0:delete e.selected})),t},e.prototype.isActive=function(e){return!1},e.prototype.getValue=function(e){var t=this.getSelectCodeElem(e);if(null==t)return"";if(!ff.isElement(t))return"";var n=t.language.toString(),r=e.getMenuConfig("codeSelectLang").codeLangs;return(void 0===r?[]:r).some((function(e){return e.value===n}))?n:""},e.prototype.isDisabled=function(e){return null==e.selection||!this.getSelectCodeElem(e)},e.prototype.exec=function(e,t){if(null!=this.getSelectCodeElem(e)){var n={language:t.toString()};ad.setNodes(e,n,{match:function(e){return gO.checkNodeType(e,"code")}})}},e.prototype.getSelectCodeElem=function(e){var t=gO.getSelectedNodeByType(e,"code");if(null==t)return null;var n=gO.getParentNode(e,t);return ff.isElement(n)?"pre"!==n.type?null:t:null},e}(),Dge={renderStyle:function(e,t){var n=e,r=t,o="";return lhe.forEach((function(e){n[e]&&(o=e)})),o&&function(e,t){null==e.data&&(e.data={});var n=e.data;null==n.props&&(n.props={}),Object.assign(n.props,{className:t})}(r,o="token "+o),r},parseStyleHtml:function(e,t,n){var r=wp(e);if(!ff.isElement(t))return t;if("code"!==gO.getNodeType(t))return t;var o=t,i=r.attr("class")||"";return 0===i.indexOf("language-")?o.language=i.split("-")[1]||"":o.language=i.toLowerCase(),o},menus:[{key:"codeSelectLang",factory:function(){return new xge},config:{codeLangs:[{text:"CSS",value:"css"},{text:"HTML",value:"html"},{text:"XML",value:"xml"},{text:"Javascript",value:"javascript"},{text:"Typescript",value:"typescript"},{text:"JSX",value:"jsx"},{text:"Go",value:"go"},{text:"PHP",value:"php"},{text:"C",value:"c"},{text:"Python",value:"python"},{text:"Java",value:"java"},{text:"C++",value:"cpp"},{text:"C#",value:"csharp"},{text:"Visual Basic",value:"visual-basic"},{text:"SQL",value:"sql"},{text:"Ruby",value:"ruby"},{text:"Swift",value:"swift"},{text:"Bash",value:"bash"},{text:"Lua",value:"lua"},{text:"Groovy",value:"groovy"},{text:"Markdown",value:"markdown"}]}}],elemsToHtml:[{type:"code",elemToHtml:function(e,t){var n=e.language,r=void 0===n?"":n;return"<code "+(r?'class="language-'+r+'"':"")+">"+t+"</code>"}}]},Oge=/"/g,kge=vfe("".replace);rhe({target:"String",proto:!0,forced:Nfe((function(){var e="".anchor('"');return e!==e.toLowerCase()||e.split('"').length>3}))},{anchor:function(e){return t=e,n=hhe(mfe(this)),r="<a",(r+=' name="'+kge(hhe(t),Oge,"&quot;")+'"')+">"+n+"</a>";var t,n,r}});var Bge=function(e){var t,n,r,o=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}(e,2),i=o[0],a=o[1],u=[],s=function(e){if(!Hf.isText(e))return null;var t=gO.getParentNode(null,e);if(t&&"code"===gO.getNodeType(t)){var n=gO.getParentNode(null,t);if(n&&"pre"===gO.getNodeType(n))return t}return null}(i);if(null==s)return u;var c=s.language,l=void 0===c?"":c;if(!l)return u;var f=function(e,t){if(!t)return[];var n=che.languages[t];return n?che.tokenize(e.text,n):[]}(i,l),d=0;try{for(var p=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(f),h=p.next();!h.done;h=p.next()){var g=h.value,v=d+fhe(g);"string"!=typeof g&&u.push(((r={})[g.type]=!0,r.anchor={path:a,offset:d},r.focus={path:a,offset:v},r)),d=v}}catch(e){t={error:e}}finally{try{h&&!h.done&&(n=p.return)&&n.call(p)}finally{if(t)throw t.error}}return u},Tge=function(){return Tge=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Tge.apply(this,arguments)},Fge=function(){function e(){throw new Error("ä¸è½å®ä¾å\nCan not construct a instance")}return e.setEditorConfig=function(e){void 0===e&&(e={}),this.editorConfig=Tge(Tge({},this.editorConfig),e)},e.setSimpleEditorConfig=function(e){void 0===e&&(e={}),this.simpleEditorConfig=Tge(Tge({},this.simpleEditorConfig),e)},e.setToolbarConfig=function(e){void 0===e&&(e={}),this.toolbarConfig=Tge(Tge({},this.toolbarConfig),e)},e.setSimpleToolbarConfig=function(e){void 0===e&&(e={}),this.simpleToolbarConfig=Tge(Tge({},this.simpleToolbarConfig),e)},e.registerPlugin=function(e){this.plugins.push(e)},e.registerMenu=function(e,t){!function(e,t){var n=e.key,r=e.factory,o=e.config,i=wx(wx({},o),t||{});if(null!=mO[n])throw new Error("Duplicated key '"+n+"' in menu items");mO[n]=r,function(e,t){null!=t&&(yO[e]=t)}(n,i)}(e,t)},e.registerRenderElem=function(e){!function(e){var t=e.type,n=e.renderElem;ZT[t||""]=n}(e)},e.registerRenderStyle=function(e){!function(e){JT.push(e)}(e)},e.registerElemToHtml=function(e){!function(e){var t=e.type,n=e.elemToHtml;FO[t||""]=n}(e)},e.registerStyleToHtml=function(e){!function(e){TO.push(e)}(e)},e.registerPreParseHtml=function(e){!function(e){bB.push(e)}(e)},e.registerParseElemHtml=function(e){!function(e){var t=e.selector,n=e.parseElemHtml;EB[t]=n}(e)},e.registerParseStyleHtml=function(e){!function(e){wB.push(e)}(e)},e.registerModule=function(e){_ge(e)},e.editorConfig={},e.simpleEditorConfig={},e.toolbarConfig={},e.simpleToolbarConfig={},e.plugins=[],e}();function _ge(e){var t=e.menus,n=e.renderElems,r=e.renderStyle,o=e.elemsToHtml,i=e.styleToHtml,a=e.preParseHtml,u=e.parseElemsHtml,s=e.parseStyleHtml,c=e.editorPlugin;t&&t.forEach((function(e){return Fge.registerMenu(e)})),n&&n.forEach((function(e){return Fge.registerRenderElem(e)})),r&&Fge.registerRenderStyle(r),o&&o.forEach((function(e){return Fge.registerElemToHtml(e)})),i&&Fge.registerStyleToHtml(i),a&&a.forEach((function(e){return Fge.registerPreParseHtml(e)})),u&&u.forEach((function(e){return Fge.registerParseElemHtml(e)})),s&&Fge.registerParseStyleHtml(s),c&&Fge.registerPlugin(c)}LW.forEach((function(e){return _ge(e)})),_ge(tQ),_ge(I6),_ge(ire),_ge(tfe),_ge(Dge);var Pge='<svg viewBox="0 0 1024 1024"><path d="M959.877 128l0.123 0.123v767.775l-0.123 0.122H64.102l-0.122-0.122V128.123l0.122-0.123h895.775zM960 64H64C28.795 64 0 92.795 0 128v768c0 35.205 28.795 64 64 64h896c35.205 0 64-28.795 64-64V128c0-35.205-28.795-64-64-64zM832 288.01c0 53.023-42.988 96.01-96.01 96.01s-96.01-42.987-96.01-96.01S682.967 192 735.99 192 832 234.988 832 288.01zM896 832H128V704l224.01-384 256 320h64l224.01-192z"></path></svg>',jge={link:{menuKeys:["editLink","unLink","viewLink"]},image:{menuKeys:["imageWidth30","imageWidth50","imageWidth100","editImage","viewImageLink","deleteImage"]},pre:{menuKeys:["enter","codeBlock","codeSelectLang"]},table:{menuKeys:["enter","tableHeader","tableFullWidth","insertTableRow","deleteTableRow","insertTableCol","deleteTableCol","deleteTable"]},divider:{menuKeys:["enter"]},video:{menuKeys:["enter","editVideoSize"]}},Nge={hoverbarKeys:Tge(Tge({},jge),{text:{menuKeys:["headerSelect","insertLink","bulletedList","|","bold","through","color","bgColor","clearStyle"]}})};Fge.setEditorConfig(Tge(Tge({},Nge),{decorate:Bge}));var Rge={hoverbarKeys:jge};Fge.setSimpleEditorConfig(Tge(Tge({},Rge),{decorate:Bge}));var Ige={toolbarKeys:["headerSelect","blockquote","|","bold","underline","italic",{key:"group-more-style",title:J_("editor.more"),iconSvg:'<svg viewBox="0 0 1024 1024"><path d="M204.8 505.6m-76.8 0a76.8 76.8 0 1 0 153.6 0 76.8 76.8 0 1 0-153.6 0Z"></path><path d="M505.6 505.6m-76.8 0a76.8 76.8 0 1 0 153.6 0 76.8 76.8 0 1 0-153.6 0Z"></path><path d="M806.4 505.6m-76.8 0a76.8 76.8 0 1 0 153.6 0 76.8 76.8 0 1 0-153.6 0Z"></path></svg>',menuKeys:["through","code","sup","sub","clearStyle"]},"color","bgColor","|","fontSize","fontFamily","lineHeight","|","bulletedList","numberedList","todo",{key:"group-justify",title:J_("editor.justify"),iconSvg:'<svg viewBox="0 0 1024 1024"><path d="M768 793.6v102.4H51.2v-102.4h716.8z m204.8-230.4v102.4H51.2v-102.4h921.6z m-204.8-230.4v102.4H51.2v-102.4h716.8zM972.8 102.4v102.4H51.2V102.4h921.6z"></path></svg>',menuKeys:["justifyLeft","justifyRight","justifyCenter","justifyJustify"]},{key:"group-indent",title:J_("editor.indent"),iconSvg:'<svg viewBox="0 0 1024 1024"><path d="M0 64h1024v128H0z m384 192h640v128H384z m0 192h640v128H384z m0 192h640v128H384zM0 832h1024v128H0z m0-128V320l256 192z"></path></svg>',menuKeys:["indent","delIndent"]},"|","emotion","insertLink",{key:"group-image",title:J_("editor.image"),iconSvg:Pge,menuKeys:["insertImage","uploadImage"]},{key:"group-video",title:J_("editor.video"),iconSvg:'<svg viewBox="0 0 1024 1024"><path d="M981.184 160.096C837.568 139.456 678.848 128 512 128S186.432 139.456 42.816 160.096C15.296 267.808 0 386.848 0 512s15.264 244.16 42.816 351.904C186.464 884.544 345.152 896 512 896s325.568-11.456 469.184-32.096C1008.704 756.192 1024 637.152 1024 512s-15.264-244.16-42.816-351.904zM384 704V320l320 192-320 192z"></path></svg>',menuKeys:["insertVideo","uploadVideo"]},"insertTable","codeBlock","divider","|","undo","redo","|","fullScreen"]};Fge.setToolbarConfig(Ige);var Lge={toolbarKeys:["blockquote","header1","header2","header3","|","bold","underline","italic","through","color","bgColor","clearStyle","|","bulletedList","numberedList","todo","justifyLeft","justifyRight","justifyCenter","|","insertLink",{key:"group-image",title:J_("editor.image"),iconSvg:Pge,menuKeys:["insertImage","uploadImage"]},"insertVideo","insertTable","codeBlock","|","undo","redo","|","fullScreen"]};function Mge(e){void 0===e&&(e={});var t=e.selector,n=void 0===t?"":t,r=e.content,o=void 0===r?[]:r,i=e.html,a=e.config,u=void 0===a?{}:a,s=e.mode,c="simple"===(void 0===s?"default":s)?Fge.simpleEditorConfig:Fge.editorConfig,l=Tge(Tge({},c.hoverbarKeys||{}),u.hoverbarKeys||{});return KF({selector:n,config:Tge(Tge(Tge({},c),u),{hoverbarKeys:l}),content:o,html:i,plugins:Fge.plugins})}function zge(e){var t=e.selector,n=e.editor,r=e.config,o=void 0===r?{}:r,i=e.mode,a=void 0===i?"default":i;if(!t)throw new Error("Cannot find 'selector' when create toolbar");var u="simple"===a?Fge.simpleToolbarConfig:Fge.toolbarConfig,s=function(e,t){if(null==e)throw new Error("Cannot create toolbar, because editor is null");var n=t.selector,r=t.config,o=void 0===r?{}:r;if(function(e,t){return QB(e,"data-w-e-toolbar",t)}(e,n))throw new Error("Repeated create toolbar by selector '"+n+"'");var i=wx({toolbarKeys:[],excludeKeys:[],insertKeys:{index:0,keys:[]},modalAppendToBody:!1},o||{}),a=new QF(n,i);return SD.set(a,e),CD.set(e,a),a}(n,{selector:t,config:Tge(Tge({},u),o)});return s}Fge.setSimpleToolbarConfig(Lge);var $ge={}},231:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var r=n(354),o=n.n(r),i=n(314),a=n.n(i)()(o());a.push([e.id,"html, body{\n  height: 100%;\n}\n\n.wrap{\n  min-height: 100%;\n  display: flex;\n}\n\n/* æç¤ºæ¡ */\n.alert{\n  width: 400px;\n  position: fixed;\n  top: 50px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: none;\n  z-index: 10000;\n}\n.show{\n  display: block;\n}\n\n/* ä¾§è¾¹æ  */\n.aside {\n  width: 200px;\n  background-color: #023;\n  padding-top: 40px;\n}\n.aside h2 {\n  text-align: center;\n  color: #fc6627;\n}\n\n/* ä¾§è¾¹æ å¯¼èª */\n.nav{\n  padding-left: 20px;\n}\n.nav li {\n  width: 100%;\n  height: 60px;\n  line-height: 60px;\n  color: white;\n  cursor: pointer;\n  list-style: none;\n}\n.nav li a{\n  color: white;\n  text-decoration: none;\n}\n.nav li a.active{\n  color: #409eff !important;\n}\n\n/* å³ä¾§åºå */\n.main{\n  flex: 1;\n}\n.top-nav{\n  height: 60px;\n  border-bottom: 1px solid #ddd;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding-right: 40px;\n}\n.nav-item span{\n  cursor: pointer;\n}\n.nav-item span:last-of-type{\n  margin-left: 20px;\n}\n\n/* å¡çå®¹å¨å¸å± */\n.content{\n  padding: 30px;\n}\n.card{\n  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\n  border: 1px solid #ebeef5;\n  padding: 20px;\n}\n.card .title{\n  height: 50px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid #ebeef5;\n}\n\n/* è¡¨å */\n.body form>div{\n  margin-top: 20px;\n}\n.body form input, .body form select{\n  width: auto;\n  display: inline-block;\n}\n\n/* å°é¢ */\n.cover .place{\n  width: 200px;\n  height: 200px;\n  text-align: center;\n  font-size: 40px;\n  line-height: 200px;\n  border: 1px solid #ddd;\n  color: #aaa;\n  cursor: pointer;\n  display: inline-block;\n  vertical-align: top;\n}\n.cover img{\n  width: 200px;\n  height: 200px;\n}\n.cover .rounded{\n  display: none;\n}\n.cover .show{\n  display: inline-block;\n}\n.cover .hide{\n  display: none;\n}\n\n/* å¯ææ¬ç¼è¾å¨ */\n#editorâwrapper {\n  border: 1px solid #ccc;\n  z-index: 100; /* æéå®ä¹ */\n}\n#toolbar-container { border-bottom: 1px solid #ccc; }\n#editor-container { height: 500px; }","",{version:3,sources:["webpack://./src/publish/index.css"],names:[],mappings:"AAAA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,aAAa;AACf;;AAEA,QAAQ;AACR;EACE,YAAY;EACZ,eAAe;EACf,SAAS;EACT,SAAS;EACT,2BAA2B;EAC3B,aAAa;EACb,cAAc;AAChB;AACA;EACE,cAAc;AAChB;;AAEA,QAAQ;AACR;EACE,YAAY;EACZ,sBAAsB;EACtB,iBAAiB;AACnB;AACA;EACE,kBAAkB;EAClB,cAAc;AAChB;;AAEA,UAAU;AACV;EACE,kBAAkB;AACpB;AACA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,YAAY;EACZ,eAAe;EACf,gBAAgB;AAClB;AACA;EACE,YAAY;EACZ,qBAAqB;AACvB;AACA;EACE,yBAAyB;AAC3B;;AAEA,SAAS;AACT;EACE,OAAO;AACT;AACA;EACE,YAAY;EACZ,6BAA6B;EAC7B,aAAa;EACb,yBAAyB;EACzB,mBAAmB;EACnB,mBAAmB;AACrB;AACA;EACE,eAAe;AACjB;AACA;EACE,iBAAiB;AACnB;;AAEA,WAAW;AACX;EACE,aAAa;AACf;AACA;EACE,yCAAyC;EACzC,yBAAyB;EACzB,aAAa;AACf;AACA;EACE,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,gCAAgC;AAClC;;AAEA,OAAO;AACP;EACE,gBAAgB;AAClB;AACA;EACE,WAAW;EACX,qBAAqB;AACvB;;AAEA,OAAO;AACP;EACE,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,sBAAsB;EACtB,WAAW;EACX,eAAe;EACf,qBAAqB;EACrB,mBAAmB;AACrB;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,aAAa;AACf;AACA;EACE,qBAAqB;AACvB;AACA;EACE,aAAa;AACf;;AAEA,WAAW;AACX;EACE,sBAAsB;EACtB,YAAY,EAAE,SAAS;AACzB;AACA,qBAAqB,6BAA6B,EAAE;AACpD,oBAAoB,aAAa,EAAE",sourcesContent:["html, body{\r\n  height: 100%;\r\n}\r\n\r\n.wrap{\r\n  min-height: 100%;\r\n  display: flex;\r\n}\r\n\r\n/* æç¤ºæ¡ */\r\n.alert{\r\n  width: 400px;\r\n  position: fixed;\r\n  top: 50px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: none;\r\n  z-index: 10000;\r\n}\r\n.show{\r\n  display: block;\r\n}\r\n\r\n/* ä¾§è¾¹æ  */\r\n.aside {\r\n  width: 200px;\r\n  background-color: #023;\r\n  padding-top: 40px;\r\n}\r\n.aside h2 {\r\n  text-align: center;\r\n  color: #fc6627;\r\n}\r\n\r\n/* ä¾§è¾¹æ å¯¼èª */\r\n.nav{\r\n  padding-left: 20px;\r\n}\r\n.nav li {\r\n  width: 100%;\r\n  height: 60px;\r\n  line-height: 60px;\r\n  color: white;\r\n  cursor: pointer;\r\n  list-style: none;\r\n}\r\n.nav li a{\r\n  color: white;\r\n  text-decoration: none;\r\n}\r\n.nav li a.active{\r\n  color: #409eff !important;\r\n}\r\n\r\n/* å³ä¾§åºå */\r\n.main{\r\n  flex: 1;\r\n}\r\n.top-nav{\r\n  height: 60px;\r\n  border-bottom: 1px solid #ddd;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding-right: 40px;\r\n}\r\n.nav-item span{\r\n  cursor: pointer;\r\n}\r\n.nav-item span:last-of-type{\r\n  margin-left: 20px;\r\n}\r\n\r\n/* å¡çå®¹å¨å¸å± */\r\n.content{\r\n  padding: 30px;\r\n}\r\n.card{\r\n  box-shadow: 0 2px 12px 0 rgb(0 0 0 / 10%);\r\n  border: 1px solid #ebeef5;\r\n  padding: 20px;\r\n}\r\n.card .title{\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  border-bottom: 1px solid #ebeef5;\r\n}\r\n\r\n/* è¡¨å */\r\n.body form>div{\r\n  margin-top: 20px;\r\n}\r\n.body form input, .body form select{\r\n  width: auto;\r\n  display: inline-block;\r\n}\r\n\r\n/* å°é¢ */\r\n.cover .place{\r\n  width: 200px;\r\n  height: 200px;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  line-height: 200px;\r\n  border: 1px solid #ddd;\r\n  color: #aaa;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n.cover img{\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n.cover .rounded{\r\n  display: none;\r\n}\r\n.cover .show{\r\n  display: inline-block;\r\n}\r\n.cover .hide{\r\n  display: none;\r\n}\r\n\r\n/* å¯ææ¬ç¼è¾å¨ */\r\n#editorâwrapper {\r\n  border: 1px solid #ccc;\r\n  z-index: 100; /* æéå®ä¹ */\r\n}\r\n#toolbar-container { border-bottom: 1px solid #ccc; }\r\n#editor-container { height: 500px; }"],sourceRoot:""}]);const u=a},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var u=0;u<this.length;u++){var s=this[u][0];null!=s&&(a[s]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},76:e=>{var t=/^(?:submit|button|image|reset|file)$/i,n=/^(?:input|select|textarea|keygen)/i,r=/(\[[^\[\]]*\])/g;function o(e,t,n){if(0===t.length)return n;var r=t.shift(),i=r.match(/^\[(.+?)\]$/);if("[]"===r)return e=e||[],Array.isArray(e)?e.push(o(null,t,n)):(e._values=e._values||[],e._values.push(o(null,t,n))),e;if(i){var a=i[1],u=+a;isNaN(u)?(e=e||{})[a]=o(e[a],t,n):(e=e||[])[u]=o(e[u],t,n)}else e[r]=o(e[r],t,n);return e}function i(e,t,n){if(t.match(r))o(e,function(e){var t=[],n=new RegExp(r),o=/^([^\[\]]*)/.exec(e);for(o[1]&&t.push(o[1]);null!==(o=n.exec(e));)t.push(o[1]);return t}(t),n);else{var i=e[t];i?(Array.isArray(i)||(e[t]=[i]),e[t].push(n)):e[t]=n}return e}function a(e,t,n){return n=n.replace(/(\r)?\n/g,"\r\n"),n=(n=encodeURIComponent(n)).replace(/%20/g,"+"),e+(e?"&":"")+encodeURIComponent(t)+"="+n}e.exports=function(e,r){"object"!=typeof r?r={hash:!!r}:void 0===r.hash&&(r.hash=!0);for(var o=r.hash?{}:"",u=r.serializer||(r.hash?i:a),s=e&&e.elements?e.elements:[],c=Object.create(null),l=0;l<s.length;++l){var f=s[l];if((r.disabled||!f.disabled)&&f.name&&n.test(f.nodeName)&&!t.test(f.type)){var d=f.name,p=f.value;if("checkbox"!==f.type&&"radio"!==f.type||f.checked||(p=void 0),r.empty){if("checkbox"!==f.type||f.checked||(p=""),"radio"===f.type&&(c[f.name]||f.checked?f.checked&&(c[f.name]=!0):c[f.name]=!1),null==p&&"radio"==f.type)continue}else if(!p)continue;if("select-multiple"!==f.type)o=u(o,d,p);else{p=[];for(var h=f.options,g=!1,v=0;v<h.length;++v){var y=h[v],m=r.empty&&!y.value,b=y.value||m;y.selected&&b&&(g=!0,o=r.hash&&"[]"!==d.slice(d.length-2)?u(o,d+"[]",y.value):u(o,d,y.value))}!g&&r.empty&&(o=u(o,d,""))}}}if(r.empty)for(var d in c)c[d]||(o=u(o,d,""));return o}},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},a=[],u=0;u<e.length;u++){var s=e[u],c=r.base?s[0]+r.base:s[0],l=i[c]||0,f="".concat(c," ").concat(l);i[c]=l+1;var d=n(f),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var h=o(p,r);r.byIndex=u,t.splice(u,0,{identifier:f,updater:h,references:1})}a.push(f)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var u=n(i[a]);t[u].references--}for(var s=r(e,o),c=0;c<i.length;c++){var l=n(i[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=s}}},659:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nc=void 0,(()=>{"use strict";var e={};function t(e,t){return function(){return e.apply(t,arguments)}}n.r(e),n.d(e,{hasBrowserEnv:()=>fe,hasStandardBrowserEnv:()=>de,hasStandardBrowserWebWorkerEnv:()=>he,origin:()=>ge});const{toString:r}=Object.prototype,{getPrototypeOf:o}=Object,i=(a=Object.create(null),e=>{const t=r.call(e);return a[t]||(a[t]=t.slice(8,-1).toLowerCase())});var a;const u=e=>(e=e.toLowerCase(),t=>i(t)===e),s=e=>t=>typeof t===e,{isArray:c}=Array,l=s("undefined"),f=u("ArrayBuffer"),d=s("string"),p=s("function"),h=s("number"),g=e=>null!==e&&"object"==typeof e,v=e=>{if("object"!==i(e))return!1;const t=o(e);return!(null!==t&&t!==Object.prototype&&null!==Object.getPrototypeOf(t)||Symbol.toStringTag in e||Symbol.iterator in e)},y=u("Date"),m=u("File"),b=u("Blob"),w=u("FileList"),E=u("URLSearchParams"),[A,S,C,x]=["ReadableStream","Request","Response","Headers"].map(u);function D(e,t,{allOwnKeys:n=!1}={}){if(null==e)return;let r,o;if("object"!=typeof e&&(e=[e]),c(e))for(r=0,o=e.length;r<o;r++)t.call(null,e[r],r,e);else{const o=n?Object.getOwnPropertyNames(e):Object.keys(e),i=o.length;let a;for(r=0;r<i;r++)a=o[r],t.call(null,e[a],a,e)}}function O(e,t){t=t.toLowerCase();const n=Object.keys(e);let r,o=n.length;for(;o-- >0;)if(r=n[o],t===r.toLowerCase())return r;return null}const k="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:global,B=e=>!l(e)&&e!==k,T=(F="undefined"!=typeof Uint8Array&&o(Uint8Array),e=>F&&e instanceof F);var F;const _=u("HTMLFormElement"),P=(({hasOwnProperty:e})=>(t,n)=>e.call(t,n))(Object.prototype),j=u("RegExp"),N=(e,t)=>{const n=Object.getOwnPropertyDescriptors(e),r={};D(n,((n,o)=>{let i;!1!==(i=t(n,o,e))&&(r[o]=i||n)})),Object.defineProperties(e,r)},R="abcdefghijklmnopqrstuvwxyz",I="0123456789",L={DIGIT:I,ALPHA:R,ALPHA_DIGIT:R+R.toUpperCase()+I},M=u("AsyncFunction"),z=(U="function"==typeof setImmediate,V=p(k.postMessage),U?setImmediate:V?($=`axios@${Math.random()}`,H=[],k.addEventListener("message",(({source:e,data:t})=>{e===k&&t===$&&H.length&&H.shift()()}),!1),e=>{H.push(e),k.postMessage($,"*")}):e=>setTimeout(e));var $,H,U,V;const q="undefined"!=typeof queueMicrotask?queueMicrotask.bind(k):"undefined"!=typeof process&&process.nextTick||z,W={isArray:c,isArrayBuffer:f,isBuffer:function(e){return null!==e&&!l(e)&&null!==e.constructor&&!l(e.constructor)&&p(e.constructor.isBuffer)&&e.constructor.isBuffer(e)},isFormData:e=>{let t;return e&&("function"==typeof FormData&&e instanceof FormData||p(e.append)&&("formdata"===(t=i(e))||"object"===t&&p(e.toString)&&"[object FormData]"===e.toString()))},isArrayBufferView:function(e){let t;return t="undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&f(e.buffer),t},isString:d,isNumber:h,isBoolean:e=>!0===e||!1===e,isObject:g,isPlainObject:v,isReadableStream:A,isRequest:S,isResponse:C,isHeaders:x,isUndefined:l,isDate:y,isFile:m,isBlob:b,isRegExp:j,isFunction:p,isStream:e=>g(e)&&p(e.pipe),isURLSearchParams:E,isTypedArray:T,isFileList:w,forEach:D,merge:function e(){const{caseless:t}=B(this)&&this||{},n={},r=(r,o)=>{const i=t&&O(n,o)||o;v(n[i])&&v(r)?n[i]=e(n[i],r):v(r)?n[i]=e({},r):c(r)?n[i]=r.slice():n[i]=r};for(let e=0,t=arguments.length;e<t;e++)arguments[e]&&D(arguments[e],r);return n},extend:(e,n,r,{allOwnKeys:o}={})=>(D(n,((n,o)=>{r&&p(n)?e[o]=t(n,r):e[o]=n}),{allOwnKeys:o}),e),trim:e=>e.trim?e.trim():e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:e=>(65279===e.charCodeAt(0)&&(e=e.slice(1)),e),inherits:(e,t,n,r)=>{e.prototype=Object.create(t.prototype,r),e.prototype.constructor=e,Object.defineProperty(e,"super",{value:t.prototype}),n&&Object.assign(e.prototype,n)},toFlatObject:(e,t,n,r)=>{let i,a,u;const s={};if(t=t||{},null==e)return t;do{for(i=Object.getOwnPropertyNames(e),a=i.length;a-- >0;)u=i[a],r&&!r(u,e,t)||s[u]||(t[u]=e[u],s[u]=!0);e=!1!==n&&o(e)}while(e&&(!n||n(e,t))&&e!==Object.prototype);return t},kindOf:i,kindOfTest:u,endsWith:(e,t,n)=>{e=String(e),(void 0===n||n>e.length)&&(n=e.length),n-=t.length;const r=e.indexOf(t,n);return-1!==r&&r===n},toArray:e=>{if(!e)return null;if(c(e))return e;let t=e.length;if(!h(t))return null;const n=new Array(t);for(;t-- >0;)n[t]=e[t];return n},forEachEntry:(e,t)=>{const n=(e&&e[Symbol.iterator]).call(e);let r;for(;(r=n.next())&&!r.done;){const n=r.value;t.call(e,n[0],n[1])}},matchAll:(e,t)=>{let n;const r=[];for(;null!==(n=e.exec(t));)r.push(n);return r},isHTMLForm:_,hasOwnProperty:P,hasOwnProp:P,reduceDescriptors:N,freezeMethods:e=>{N(e,((t,n)=>{if(p(e)&&-1!==["arguments","caller","callee"].indexOf(n))return!1;const r=e[n];p(r)&&(t.enumerable=!1,"writable"in t?t.writable=!1:t.set||(t.set=()=>{throw Error("Can not rewrite read-only method '"+n+"'")}))}))},toObjectSet:(e,t)=>{const n={},r=e=>{e.forEach((e=>{n[e]=!0}))};return c(e)?r(e):r(String(e).split(t)),n},toCamelCase:e=>e.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,(function(e,t,n){return t.toUpperCase()+n})),noop:()=>{},toFiniteNumber:(e,t)=>null!=e&&Number.isFinite(e=+e)?e:t,findKey:O,global:k,isContextDefined:B,ALPHABET:L,generateString:(e=16,t=L.ALPHA_DIGIT)=>{let n="";const{length:r}=t;for(;e--;)n+=t[Math.random()*r|0];return n},isSpecCompliantForm:function(e){return!!(e&&p(e.append)&&"FormData"===e[Symbol.toStringTag]&&e[Symbol.iterator])},toJSONObject:e=>{const t=new Array(10),n=(e,r)=>{if(g(e)){if(t.indexOf(e)>=0)return;if(!("toJSON"in e)){t[r]=e;const o=c(e)?[]:{};return D(e,((e,t)=>{const i=n(e,r+1);!l(i)&&(o[t]=i)})),t[r]=void 0,o}}return e};return n(e,0)},isAsyncFn:M,isThenable:e=>e&&(g(e)||p(e))&&p(e.then)&&p(e.catch),setImmediate:z,asap:q};function G(e,t,n,r,o){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack,this.message=e,this.name="AxiosError",t&&(this.code=t),n&&(this.config=n),r&&(this.request=r),o&&(this.response=o)}W.inherits(G,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:W.toJSONObject(this.config),code:this.code,status:this.response&&this.response.status?this.response.status:null}}});const K=G.prototype,Y={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach((e=>{Y[e]={value:e}})),Object.defineProperties(G,Y),Object.defineProperty(K,"isAxiosError",{value:!0}),G.from=(e,t,n,r,o,i)=>{const a=Object.create(K);return W.toFlatObject(e,a,(function(e){return e!==Error.prototype}),(e=>"isAxiosError"!==e)),G.call(a,e.message,t,n,r,o),a.cause=e,a.name=e.name,i&&Object.assign(a,i),a};const X=G;function J(e){return W.isPlainObject(e)||W.isArray(e)}function Z(e){return W.endsWith(e,"[]")?e.slice(0,-2):e}function Q(e,t,n){return e?e.concat(t).map((function(e,t){return e=Z(e),!n&&t?"["+e+"]":e})).join(n?".":""):t}const ee=W.toFlatObject(W,{},null,(function(e){return/^is[A-Z]/.test(e)})),te=function(e,t,n){if(!W.isObject(e))throw new TypeError("target must be an object");t=t||new FormData;const r=(n=W.toFlatObject(n,{metaTokens:!0,dots:!1,indexes:!1},!1,(function(e,t){return!W.isUndefined(t[e])}))).metaTokens,o=n.visitor||c,i=n.dots,a=n.indexes,u=(n.Blob||"undefined"!=typeof Blob&&Blob)&&W.isSpecCompliantForm(t);if(!W.isFunction(o))throw new TypeError("visitor must be a function");function s(e){if(null===e)return"";if(W.isDate(e))return e.toISOString();if(!u&&W.isBlob(e))throw new X("Blob is not supported. Use a Buffer instead.");return W.isArrayBuffer(e)||W.isTypedArray(e)?u&&"function"==typeof Blob?new Blob([e]):Buffer.from(e):e}function c(e,n,o){let u=e;if(e&&!o&&"object"==typeof e)if(W.endsWith(n,"{}"))n=r?n:n.slice(0,-2),e=JSON.stringify(e);else if(W.isArray(e)&&function(e){return W.isArray(e)&&!e.some(J)}(e)||(W.isFileList(e)||W.endsWith(n,"[]"))&&(u=W.toArray(e)))return n=Z(n),u.forEach((function(e,r){!W.isUndefined(e)&&null!==e&&t.append(!0===a?Q([n],r,i):null===a?n:n+"[]",s(e))})),!1;return!!J(e)||(t.append(Q(o,n,i),s(e)),!1)}const l=[],f=Object.assign(ee,{defaultVisitor:c,convertValue:s,isVisitable:J});if(!W.isObject(e))throw new TypeError("data must be an object");return function e(n,r){if(!W.isUndefined(n)){if(-1!==l.indexOf(n))throw Error("Circular reference detected in "+r.join("."));l.push(n),W.forEach(n,(function(n,i){!0===(!(W.isUndefined(n)||null===n)&&o.call(t,n,W.isString(i)?i.trim():i,r,f))&&e(n,r?r.concat(i):[i])})),l.pop()}}(e),t};function ne(e){const t={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g,(function(e){return t[e]}))}function re(e,t){this._pairs=[],e&&te(e,this,t)}const oe=re.prototype;oe.append=function(e,t){this._pairs.push([e,t])},oe.toString=function(e){const t=e?function(t){return e.call(this,t,ne)}:ne;return this._pairs.map((function(e){return t(e[0])+"="+t(e[1])}),"").join("&")};const ie=re;function ae(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function ue(e,t,n){if(!t)return e;const r=n&&n.encode||ae,o=n&&n.serialize;let i;if(i=o?o(t,n):W.isURLSearchParams(t)?t.toString():new ie(t,n).toString(r),i){const t=e.indexOf("#");-1!==t&&(e=e.slice(0,t)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}const se=class{constructor(){this.handlers=[]}use(e,t,n){return this.handlers.push({fulfilled:e,rejected:t,synchronous:!!n&&n.synchronous,runWhen:n?n.runWhen:null}),this.handlers.length-1}eject(e){this.handlers[e]&&(this.handlers[e]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(e){W.forEach(this.handlers,(function(t){null!==t&&e(t)}))}},ce={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},le={isBrowser:!0,classes:{URLSearchParams:"undefined"!=typeof URLSearchParams?URLSearchParams:ie,FormData:"undefined"!=typeof FormData?FormData:null,Blob:"undefined"!=typeof Blob?Blob:null},protocols:["http","https","file","blob","url","data"]},fe="undefined"!=typeof window&&"undefined"!=typeof document,de=(pe="undefined"!=typeof navigator&&navigator.product,fe&&["ReactNative","NativeScript","NS"].indexOf(pe)<0);var pe;const he="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"==typeof self.importScripts,ge=fe&&window.location.href||"http://localhost",ve={...e,...le},ye=function(e){function t(e,n,r,o){let i=e[o++];if("__proto__"===i)return!0;const a=Number.isFinite(+i),u=o>=e.length;return i=!i&&W.isArray(r)?r.length:i,u?(W.hasOwnProp(r,i)?r[i]=[r[i],n]:r[i]=n,!a):(r[i]&&W.isObject(r[i])||(r[i]=[]),t(e,n,r[i],o)&&W.isArray(r[i])&&(r[i]=function(e){const t={},n=Object.keys(e);let r;const o=n.length;let i;for(r=0;r<o;r++)i=n[r],t[i]=e[i];return t}(r[i])),!a)}if(W.isFormData(e)&&W.isFunction(e.entries)){const n={};return W.forEachEntry(e,((e,r)=>{t(function(e){return W.matchAll(/\w+|\[(\w*)]/g,e).map((e=>"[]"===e[0]?"":e[1]||e[0]))}(e),r,n,0)})),n}return null},me={transitional:ce,adapter:["xhr","http","fetch"],transformRequest:[function(e,t){const n=t.getContentType()||"",r=n.indexOf("application/json")>-1,o=W.isObject(e);if(o&&W.isHTMLForm(e)&&(e=new FormData(e)),W.isFormData(e))return r?JSON.stringify(ye(e)):e;if(W.isArrayBuffer(e)||W.isBuffer(e)||W.isStream(e)||W.isFile(e)||W.isBlob(e)||W.isReadableStream(e))return e;if(W.isArrayBufferView(e))return e.buffer;if(W.isURLSearchParams(e))return t.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),e.toString();let i;if(o){if(n.indexOf("application/x-www-form-urlencoded")>-1)return function(e,t){return te(e,new ve.classes.URLSearchParams,Object.assign({visitor:function(e,t,n,r){return ve.isNode&&W.isBuffer(e)?(this.append(t,e.toString("base64")),!1):r.defaultVisitor.apply(this,arguments)}},t))}(e,this.formSerializer).toString();if((i=W.isFileList(e))||n.indexOf("multipart/form-data")>-1){const t=this.env&&this.env.FormData;return te(i?{"files[]":e}:e,t&&new t,this.formSerializer)}}return o||r?(t.setContentType("application/json",!1),function(e){if(W.isString(e))try{return(0,JSON.parse)(e),W.trim(e)}catch(e){if("SyntaxError"!==e.name)throw e}return(0,JSON.stringify)(e)}(e)):e}],transformResponse:[function(e){const t=this.transitional||me.transitional,n=t&&t.forcedJSONParsing,r="json"===this.responseType;if(W.isResponse(e)||W.isReadableStream(e))return e;if(e&&W.isString(e)&&(n&&!this.responseType||r)){const n=!(t&&t.silentJSONParsing)&&r;try{return JSON.parse(e)}catch(e){if(n){if("SyntaxError"===e.name)throw X.from(e,X.ERR_BAD_RESPONSE,this,null,this.response);throw e}}}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:ve.classes.FormData,Blob:ve.classes.Blob},validateStatus:function(e){return e>=200&&e<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};W.forEach(["delete","get","head","post","put","patch"],(e=>{me.headers[e]={}}));const be=me,we=W.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Ee=Symbol("internals");function Ae(e){return e&&String(e).trim().toLowerCase()}function Se(e){return!1===e||null==e?e:W.isArray(e)?e.map(Se):String(e)}function Ce(e,t,n,r,o){return W.isFunction(r)?r.call(this,t,n):(o&&(t=n),W.isString(t)?W.isString(r)?-1!==t.indexOf(r):W.isRegExp(r)?r.test(t):void 0:void 0)}class xe{constructor(e){e&&this.set(e)}set(e,t,n){const r=this;function o(e,t,n){const o=Ae(t);if(!o)throw new Error("header name must be a non-empty string");const i=W.findKey(r,o);(!i||void 0===r[i]||!0===n||void 0===n&&!1!==r[i])&&(r[i||t]=Se(e))}const i=(e,t)=>W.forEach(e,((e,n)=>o(e,n,t)));if(W.isPlainObject(e)||e instanceof this.constructor)i(e,t);else if(W.isString(e)&&(e=e.trim())&&!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(e.trim()))i((e=>{const t={};let n,r,o;return e&&e.split("\n").forEach((function(e){o=e.indexOf(":"),n=e.substring(0,o).trim().toLowerCase(),r=e.substring(o+1).trim(),!n||t[n]&&we[n]||("set-cookie"===n?t[n]?t[n].push(r):t[n]=[r]:t[n]=t[n]?t[n]+", "+r:r)})),t})(e),t);else if(W.isHeaders(e))for(const[t,r]of e.entries())o(r,t,n);else null!=e&&o(t,e,n);return this}get(e,t){if(e=Ae(e)){const n=W.findKey(this,e);if(n){const e=this[n];if(!t)return e;if(!0===t)return function(e){const t=Object.create(null),n=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let r;for(;r=n.exec(e);)t[r[1]]=r[2];return t}(e);if(W.isFunction(t))return t.call(this,e,n);if(W.isRegExp(t))return t.exec(e);throw new TypeError("parser must be boolean|regexp|function")}}}has(e,t){if(e=Ae(e)){const n=W.findKey(this,e);return!(!n||void 0===this[n]||t&&!Ce(0,this[n],n,t))}return!1}delete(e,t){const n=this;let r=!1;function o(e){if(e=Ae(e)){const o=W.findKey(n,e);!o||t&&!Ce(0,n[o],o,t)||(delete n[o],r=!0)}}return W.isArray(e)?e.forEach(o):o(e),r}clear(e){const t=Object.keys(this);let n=t.length,r=!1;for(;n--;){const o=t[n];e&&!Ce(0,this[o],o,e,!0)||(delete this[o],r=!0)}return r}normalize(e){const t=this,n={};return W.forEach(this,((r,o)=>{const i=W.findKey(n,o);if(i)return t[i]=Se(r),void delete t[o];const a=e?function(e){return e.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,((e,t,n)=>t.toUpperCase()+n))}(o):String(o).trim();a!==o&&delete t[o],t[a]=Se(r),n[a]=!0})),this}concat(...e){return this.constructor.concat(this,...e)}toJSON(e){const t=Object.create(null);return W.forEach(this,((n,r)=>{null!=n&&!1!==n&&(t[r]=e&&W.isArray(n)?n.join(", "):n)})),t}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map((([e,t])=>e+": "+t)).join("\n")}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(e){return e instanceof this?e:new this(e)}static concat(e,...t){const n=new this(e);return t.forEach((e=>n.set(e))),n}static accessor(e){const t=(this[Ee]=this[Ee]={accessors:{}}).accessors,n=this.prototype;function r(e){const r=Ae(e);t[r]||(function(e,t){const n=W.toCamelCase(" "+t);["get","set","has"].forEach((r=>{Object.defineProperty(e,r+n,{value:function(e,n,o){return this[r].call(this,t,e,n,o)},configurable:!0})}))}(n,e),t[r]=!0)}return W.isArray(e)?e.forEach(r):r(e),this}}xe.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),W.reduceDescriptors(xe.prototype,(({value:e},t)=>{let n=t[0].toUpperCase()+t.slice(1);return{get:()=>e,set(e){this[n]=e}}})),W.freezeMethods(xe);const De=xe;function Oe(e,t){const n=this||be,r=t||n,o=De.from(r.headers);let i=r.data;return W.forEach(e,(function(e){i=e.call(n,i,o.normalize(),t?t.status:void 0)})),o.normalize(),i}function ke(e){return!(!e||!e.__CANCEL__)}function Be(e,t,n){X.call(this,null==e?"canceled":e,X.ERR_CANCELED,t,n),this.name="CanceledError"}W.inherits(Be,X,{__CANCEL__:!0});const Te=Be;function Fe(e,t,n){const r=n.config.validateStatus;n.status&&r&&!r(n.status)?t(new X("Request failed with status code "+n.status,[X.ERR_BAD_REQUEST,X.ERR_BAD_RESPONSE][Math.floor(n.status/100)-4],n.config,n.request,n)):e(n)}const _e=(e,t,n=3)=>{let r=0;const o=function(e,t){e=e||10;const n=new Array(e),r=new Array(e);let o,i=0,a=0;return t=void 0!==t?t:1e3,function(u){const s=Date.now(),c=r[a];o||(o=s),n[i]=u,r[i]=s;let l=a,f=0;for(;l!==i;)f+=n[l++],l%=e;if(i=(i+1)%e,i===a&&(a=(a+1)%e),s-o<t)return;const d=c&&s-c;return d?Math.round(1e3*f/d):void 0}}(50,250);return function(e,t){let n,r,o=0,i=1e3/t;const a=(t,i=Date.now())=>{o=i,n=null,r&&(clearTimeout(r),r=null),e.apply(null,t)};return[(...e)=>{const t=Date.now(),u=t-o;u>=i?a(e,t):(n=e,r||(r=setTimeout((()=>{r=null,a(n)}),i-u)))},()=>n&&a(n)]}((n=>{const i=n.loaded,a=n.lengthComputable?n.total:void 0,u=i-r,s=o(u);r=i,e({loaded:i,total:a,progress:a?i/a:void 0,bytes:u,rate:s||void 0,estimated:s&&a&&i<=a?(a-i)/s:void 0,event:n,lengthComputable:null!=a,[t?"download":"upload"]:!0})}),n)},Pe=(e,t)=>{const n=null!=e;return[r=>t[0]({lengthComputable:n,total:e,loaded:r}),t[1]]},je=e=>(...t)=>W.asap((()=>e(...t))),Ne=ve.hasStandardBrowserEnv?function(){const e=/(msie|trident)/i.test(navigator.userAgent),t=document.createElement("a");let n;function r(n){let r=n;return e&&(t.setAttribute("href",r),r=t.href),t.setAttribute("href",r),{href:t.href,protocol:t.protocol?t.protocol.replace(/:$/,""):"",host:t.host,search:t.search?t.search.replace(/^\?/,""):"",hash:t.hash?t.hash.replace(/^#/,""):"",hostname:t.hostname,port:t.port,pathname:"/"===t.pathname.charAt(0)?t.pathname:"/"+t.pathname}}return n=r(window.location.href),function(e){const t=W.isString(e)?r(e):e;return t.protocol===n.protocol&&t.host===n.host}}():function(){return!0},Re=ve.hasStandardBrowserEnv?{write(e,t,n,r,o,i){const a=[e+"="+encodeURIComponent(t)];W.isNumber(n)&&a.push("expires="+new Date(n).toGMTString()),W.isString(r)&&a.push("path="+r),W.isString(o)&&a.push("domain="+o),!0===i&&a.push("secure"),document.cookie=a.join("; ")},read(e){const t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove(e){this.write(e,"",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function Ie(e,t){return e&&!/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t)?function(e,t){return t?e.replace(/\/?\/$/,"")+"/"+t.replace(/^\/+/,""):e}(e,t):t}const Le=e=>e instanceof De?{...e}:e;function Me(e,t){t=t||{};const n={};function r(e,t,n){return W.isPlainObject(e)&&W.isPlainObject(t)?W.merge.call({caseless:n},e,t):W.isPlainObject(t)?W.merge({},t):W.isArray(t)?t.slice():t}function o(e,t,n){return W.isUndefined(t)?W.isUndefined(e)?void 0:r(void 0,e,n):r(e,t,n)}function i(e,t){if(!W.isUndefined(t))return r(void 0,t)}function a(e,t){return W.isUndefined(t)?W.isUndefined(e)?void 0:r(void 0,e):r(void 0,t)}function u(n,o,i){return i in t?r(n,o):i in e?r(void 0,n):void 0}const s={url:i,method:i,data:i,baseURL:a,transformRequest:a,transformResponse:a,paramsSerializer:a,timeout:a,timeoutMessage:a,withCredentials:a,withXSRFToken:a,adapter:a,responseType:a,xsrfCookieName:a,xsrfHeaderName:a,onUploadProgress:a,onDownloadProgress:a,decompress:a,maxContentLength:a,maxBodyLength:a,beforeRedirect:a,transport:a,httpAgent:a,httpsAgent:a,cancelToken:a,socketPath:a,responseEncoding:a,validateStatus:u,headers:(e,t)=>o(Le(e),Le(t),!0)};return W.forEach(Object.keys(Object.assign({},e,t)),(function(r){const i=s[r]||o,a=i(e[r],t[r],r);W.isUndefined(a)&&i!==u||(n[r]=a)})),n}const ze=e=>{const t=Me({},e);let n,{data:r,withXSRFToken:o,xsrfHeaderName:i,xsrfCookieName:a,headers:u,auth:s}=t;if(t.headers=u=De.from(u),t.url=ue(Ie(t.baseURL,t.url),e.params,e.paramsSerializer),s&&u.set("Authorization","Basic "+btoa((s.username||"")+":"+(s.password?unescape(encodeURIComponent(s.password)):""))),W.isFormData(r))if(ve.hasStandardBrowserEnv||ve.hasStandardBrowserWebWorkerEnv)u.setContentType(void 0);else if(!1!==(n=u.getContentType())){const[e,...t]=n?n.split(";").map((e=>e.trim())).filter(Boolean):[];u.setContentType([e||"multipart/form-data",...t].join("; "))}if(ve.hasStandardBrowserEnv&&(o&&W.isFunction(o)&&(o=o(t)),o||!1!==o&&Ne(t.url))){const e=i&&a&&Re.read(a);e&&u.set(i,e)}return t},$e="undefined"!=typeof XMLHttpRequest&&function(e){return new Promise((function(t,n){const r=ze(e);let o=r.data;const i=De.from(r.headers).normalize();let a,u,s,c,l,{responseType:f,onUploadProgress:d,onDownloadProgress:p}=r;function h(){c&&c(),l&&l(),r.cancelToken&&r.cancelToken.unsubscribe(a),r.signal&&r.signal.removeEventListener("abort",a)}let g=new XMLHttpRequest;function v(){if(!g)return;const r=De.from("getAllResponseHeaders"in g&&g.getAllResponseHeaders());Fe((function(e){t(e),h()}),(function(e){n(e),h()}),{data:f&&"text"!==f&&"json"!==f?g.response:g.responseText,status:g.status,statusText:g.statusText,headers:r,config:e,request:g}),g=null}g.open(r.method.toUpperCase(),r.url,!0),g.timeout=r.timeout,"onloadend"in g?g.onloadend=v:g.onreadystatechange=function(){g&&4===g.readyState&&(0!==g.status||g.responseURL&&0===g.responseURL.indexOf("file:"))&&setTimeout(v)},g.onabort=function(){g&&(n(new X("Request aborted",X.ECONNABORTED,e,g)),g=null)},g.onerror=function(){n(new X("Network Error",X.ERR_NETWORK,e,g)),g=null},g.ontimeout=function(){let t=r.timeout?"timeout of "+r.timeout+"ms exceeded":"timeout exceeded";const o=r.transitional||ce;r.timeoutErrorMessage&&(t=r.timeoutErrorMessage),n(new X(t,o.clarifyTimeoutError?X.ETIMEDOUT:X.ECONNABORTED,e,g)),g=null},void 0===o&&i.setContentType(null),"setRequestHeader"in g&&W.forEach(i.toJSON(),(function(e,t){g.setRequestHeader(t,e)})),W.isUndefined(r.withCredentials)||(g.withCredentials=!!r.withCredentials),f&&"json"!==f&&(g.responseType=r.responseType),p&&([s,l]=_e(p,!0),g.addEventListener("progress",s)),d&&g.upload&&([u,c]=_e(d),g.upload.addEventListener("progress",u),g.upload.addEventListener("loadend",c)),(r.cancelToken||r.signal)&&(a=t=>{g&&(n(!t||t.type?new Te(null,e,g):t),g.abort(),g=null)},r.cancelToken&&r.cancelToken.subscribe(a),r.signal&&(r.signal.aborted?a():r.signal.addEventListener("abort",a)));const y=function(e){const t=/^([-+\w]{1,25})(:?\/\/|:)/.exec(e);return t&&t[1]||""}(r.url);y&&-1===ve.protocols.indexOf(y)?n(new X("Unsupported protocol "+y+":",X.ERR_BAD_REQUEST,e)):g.send(o||null)}))},He=(e,t)=>{let n,r=new AbortController;const o=function(e){if(!n){n=!0,a();const t=e instanceof Error?e:this.reason;r.abort(t instanceof X?t:new Te(t instanceof Error?t.message:t))}};let i=t&&setTimeout((()=>{o(new X(`timeout ${t} of ms exceeded`,X.ETIMEDOUT))}),t);const a=()=>{e&&(i&&clearTimeout(i),i=null,e.forEach((e=>{e&&(e.removeEventListener?e.removeEventListener("abort",o):e.unsubscribe(o))})),e=null)};e.forEach((e=>e&&e.addEventListener&&e.addEventListener("abort",o)));const{signal:u}=r;return u.unsubscribe=a,[u,()=>{i&&clearTimeout(i),i=null}]},Ue=function*(e,t){let n=e.byteLength;if(!t||n<t)return void(yield e);let r,o=0;for(;o<n;)r=o+t,yield e.slice(o,r),o=r},Ve=(e,t,n,r,o)=>{const i=async function*(e,t,n){for await(const r of e)yield*Ue(ArrayBuffer.isView(r)?r:await n(String(r)),t)}(e,t,o);let a,u=0,s=e=>{a||(a=!0,r&&r(e))};return new ReadableStream({async pull(e){try{const{done:t,value:r}=await i.next();if(t)return s(),void e.close();let o=r.byteLength;if(n){let e=u+=o;n(e)}e.enqueue(new Uint8Array(r))}catch(e){throw s(e),e}},cancel:e=>(s(e),i.return())},{highWaterMark:2})},qe="function"==typeof fetch&&"function"==typeof Request&&"function"==typeof Response,We=qe&&"function"==typeof ReadableStream,Ge=qe&&("function"==typeof TextEncoder?(Ke=new TextEncoder,e=>Ke.encode(e)):async e=>new Uint8Array(await new Response(e).arrayBuffer()));var Ke;const Ye=(e,...t)=>{try{return!!e(...t)}catch(e){return!1}},Xe=We&&Ye((()=>{let e=!1;const t=new Request(ve.origin,{body:new ReadableStream,method:"POST",get duplex(){return e=!0,"half"}}).headers.has("Content-Type");return e&&!t})),Je=We&&Ye((()=>W.isReadableStream(new Response("").body))),Ze={stream:Je&&(e=>e.body)};var Qe;qe&&(Qe=new Response,["text","arrayBuffer","blob","formData","stream"].forEach((e=>{!Ze[e]&&(Ze[e]=W.isFunction(Qe[e])?t=>t[e]():(t,n)=>{throw new X(`Response type '${e}' is not supported`,X.ERR_NOT_SUPPORT,n)})})));const et=qe&&(async e=>{let{url:t,method:n,data:r,signal:o,cancelToken:i,timeout:a,onDownloadProgress:u,onUploadProgress:s,responseType:c,headers:l,withCredentials:f="same-origin",fetchOptions:d}=ze(e);c=c?(c+"").toLowerCase():"text";let p,h,[g,v]=o||i||a?He([o,i],a):[];const y=()=>{!p&&setTimeout((()=>{g&&g.unsubscribe()})),p=!0};let m;try{if(s&&Xe&&"get"!==n&&"head"!==n&&0!==(m=await(async(e,t)=>{const n=W.toFiniteNumber(e.getContentLength());return null==n?(async e=>null==e?0:W.isBlob(e)?e.size:W.isSpecCompliantForm(e)?(await new Request(e).arrayBuffer()).byteLength:W.isArrayBufferView(e)||W.isArrayBuffer(e)?e.byteLength:(W.isURLSearchParams(e)&&(e+=""),W.isString(e)?(await Ge(e)).byteLength:void 0))(t):n})(l,r))){let e,n=new Request(t,{method:"POST",body:r,duplex:"half"});if(W.isFormData(r)&&(e=n.headers.get("content-type"))&&l.setContentType(e),n.body){const[e,t]=Pe(m,_e(je(s)));r=Ve(n.body,65536,e,t,Ge)}}W.isString(f)||(f=f?"include":"omit"),h=new Request(t,{...d,signal:g,method:n.toUpperCase(),headers:l.normalize().toJSON(),body:r,duplex:"half",credentials:f});let o=await fetch(h);const i=Je&&("stream"===c||"response"===c);if(Je&&(u||i)){const e={};["status","statusText","headers"].forEach((t=>{e[t]=o[t]}));const t=W.toFiniteNumber(o.headers.get("content-length")),[n,r]=u&&Pe(t,_e(je(u),!0))||[];o=new Response(Ve(o.body,65536,n,(()=>{r&&r(),i&&y()}),Ge),e)}c=c||"text";let a=await Ze[W.findKey(Ze,c)||"text"](o,e);return!i&&y(),v&&v(),await new Promise(((t,n)=>{Fe(t,n,{data:a,headers:De.from(o.headers),status:o.status,statusText:o.statusText,config:e,request:h})}))}catch(t){if(y(),t&&"TypeError"===t.name&&/fetch/i.test(t.message))throw Object.assign(new X("Network Error",X.ERR_NETWORK,e,h),{cause:t.cause||t});throw X.from(t,t&&t.code,e,h)}}),tt={http:null,xhr:$e,fetch:et};W.forEach(tt,((e,t)=>{if(e){try{Object.defineProperty(e,"name",{value:t})}catch(e){}Object.defineProperty(e,"adapterName",{value:t})}}));const nt=e=>`- ${e}`,rt=e=>W.isFunction(e)||null===e||!1===e,ot=e=>{e=W.isArray(e)?e:[e];const{length:t}=e;let n,r;const o={};for(let i=0;i<t;i++){let t;if(n=e[i],r=n,!rt(n)&&(r=tt[(t=String(n)).toLowerCase()],void 0===r))throw new X(`Unknown adapter '${t}'`);if(r)break;o[t||"#"+i]=r}if(!r){const e=Object.entries(o).map((([e,t])=>`adapter ${e} `+(!1===t?"is not supported by the environment":"is not available in the build")));let n=t?e.length>1?"since :\n"+e.map(nt).join("\n"):" "+nt(e[0]):"as no adapter specified";throw new X("There is no suitable adapter to dispatch the request "+n,"ERR_NOT_SUPPORT")}return r};function it(e){if(e.cancelToken&&e.cancelToken.throwIfRequested(),e.signal&&e.signal.aborted)throw new Te(null,e)}function at(e){return it(e),e.headers=De.from(e.headers),e.data=Oe.call(e,e.transformRequest),-1!==["post","put","patch"].indexOf(e.method)&&e.headers.setContentType("application/x-www-form-urlencoded",!1),ot(e.adapter||be.adapter)(e).then((function(t){return it(e),t.data=Oe.call(e,e.transformResponse,t),t.headers=De.from(t.headers),t}),(function(t){return ke(t)||(it(e),t&&t.response&&(t.response.data=Oe.call(e,e.transformResponse,t.response),t.response.headers=De.from(t.response.headers))),Promise.reject(t)}))}const ut={};["object","boolean","number","function","string","symbol"].forEach(((e,t)=>{ut[e]=function(n){return typeof n===e||"a"+(t<1?"n ":" ")+e}}));const st={};ut.transitional=function(e,t,n){function r(e,t){return"[Axios v1.7.3] Transitional option '"+e+"'"+t+(n?". "+n:"")}return(n,o,i)=>{if(!1===e)throw new X(r(o," has been removed"+(t?" in "+t:"")),X.ERR_DEPRECATED);return t&&!st[o]&&(st[o]=!0,console.warn(r(o," has been deprecated since v"+t+" and will be removed in the near future"))),!e||e(n,o,i)}};const ct={assertOptions:function(e,t,n){if("object"!=typeof e)throw new X("options must be an object",X.ERR_BAD_OPTION_VALUE);const r=Object.keys(e);let o=r.length;for(;o-- >0;){const i=r[o],a=t[i];if(a){const t=e[i],n=void 0===t||a(t,i,e);if(!0!==n)throw new X("option "+i+" must be "+n,X.ERR_BAD_OPTION_VALUE)}else if(!0!==n)throw new X("Unknown option "+i,X.ERR_BAD_OPTION)}},validators:ut},lt=ct.validators;class ft{constructor(e){this.defaults=e,this.interceptors={request:new se,response:new se}}async request(e,t){try{return await this._request(e,t)}catch(e){if(e instanceof Error){let t;Error.captureStackTrace?Error.captureStackTrace(t={}):t=new Error;const n=t.stack?t.stack.replace(/^.+\n/,""):"";try{e.stack?n&&!String(e.stack).endsWith(n.replace(/^.+\n.+\n/,""))&&(e.stack+="\n"+n):e.stack=n}catch(e){}}throw e}}_request(e,t){"string"==typeof e?(t=t||{}).url=e:t=e||{},t=Me(this.defaults,t);const{transitional:n,paramsSerializer:r,headers:o}=t;void 0!==n&&ct.assertOptions(n,{silentJSONParsing:lt.transitional(lt.boolean),forcedJSONParsing:lt.transitional(lt.boolean),clarifyTimeoutError:lt.transitional(lt.boolean)},!1),null!=r&&(W.isFunction(r)?t.paramsSerializer={serialize:r}:ct.assertOptions(r,{encode:lt.function,serialize:lt.function},!0)),t.method=(t.method||this.defaults.method||"get").toLowerCase();let i=o&&W.merge(o.common,o[t.method]);o&&W.forEach(["delete","get","head","post","put","patch","common"],(e=>{delete o[e]})),t.headers=De.concat(i,o);const a=[];let u=!0;this.interceptors.request.forEach((function(e){"function"==typeof e.runWhen&&!1===e.runWhen(t)||(u=u&&e.synchronous,a.unshift(e.fulfilled,e.rejected))}));const s=[];let c;this.interceptors.response.forEach((function(e){s.push(e.fulfilled,e.rejected)}));let l,f=0;if(!u){const e=[at.bind(this),void 0];for(e.unshift.apply(e,a),e.push.apply(e,s),l=e.length,c=Promise.resolve(t);f<l;)c=c.then(e[f++],e[f++]);return c}l=a.length;let d=t;for(f=0;f<l;){const e=a[f++],t=a[f++];try{d=e(d)}catch(e){t.call(this,e);break}}try{c=at.call(this,d)}catch(e){return Promise.reject(e)}for(f=0,l=s.length;f<l;)c=c.then(s[f++],s[f++]);return c}getUri(e){return ue(Ie((e=Me(this.defaults,e)).baseURL,e.url),e.params,e.paramsSerializer)}}W.forEach(["delete","get","head","options"],(function(e){ft.prototype[e]=function(t,n){return this.request(Me(n||{},{method:e,url:t,data:(n||{}).data}))}})),W.forEach(["post","put","patch"],(function(e){function t(t){return function(n,r,o){return this.request(Me(o||{},{method:e,headers:t?{"Content-Type":"multipart/form-data"}:{},url:n,data:r}))}}ft.prototype[e]=t(),ft.prototype[e+"Form"]=t(!0)}));const dt=ft;class pt{constructor(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");let t;this.promise=new Promise((function(e){t=e}));const n=this;this.promise.then((e=>{if(!n._listeners)return;let t=n._listeners.length;for(;t-- >0;)n._listeners[t](e);n._listeners=null})),this.promise.then=e=>{let t;const r=new Promise((e=>{n.subscribe(e),t=e})).then(e);return r.cancel=function(){n.unsubscribe(t)},r},e((function(e,r,o){n.reason||(n.reason=new Te(e,r,o),t(n.reason))}))}throwIfRequested(){if(this.reason)throw this.reason}subscribe(e){this.reason?e(this.reason):this._listeners?this._listeners.push(e):this._listeners=[e]}unsubscribe(e){if(!this._listeners)return;const t=this._listeners.indexOf(e);-1!==t&&this._listeners.splice(t,1)}static source(){let e;return{token:new pt((function(t){e=t})),cancel:e}}}const ht=pt,gt={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(gt).forEach((([e,t])=>{gt[t]=e}));const vt=gt,yt=function e(n){const r=new dt(n),o=t(dt.prototype.request,r);return W.extend(o,dt.prototype,r,{allOwnKeys:!0}),W.extend(o,r,null,{allOwnKeys:!0}),o.create=function(t){return e(Me(n,t))},o}(be);yt.Axios=dt,yt.CanceledError=Te,yt.CancelToken=ht,yt.isCancel=ke,yt.VERSION="1.7.3",yt.toFormData=te,yt.AxiosError=X,yt.Cancel=yt.CanceledError,yt.all=function(e){return Promise.all(e)},yt.spread=function(e){return function(t){return e.apply(null,t)}},yt.isAxiosError=function(e){return W.isObject(e)&&!0===e.isAxiosError},yt.mergeConfig=Me,yt.AxiosHeaders=De,yt.formToJSON=e=>ye(W.isHTMLForm(e)?new FormData(e):e),yt.getAdapter=ot,yt.HttpStatusCode=vt,yt.default=yt;const mt=yt;mt.defaults.baseURL="http://geek.itheima.net",mt.interceptors.request.use((function(e){const t=localStorage.getItem("token");return t&&(e.headers.Authorization=`Bearer ${t}`),e}),(function(e){return Promise.reject(e)})),mt.interceptors.response.use((function(e){return e.data}),(function(e){return console.dir(e),401===e?.response?.status&&(alert("èº«ä»½éªè¯å¤±è´¥ï¼è¯·éæ°ç»å½"),localStorage.clear(),location.href="../login/index.html"),Promise.reject(e)}));const bt=mt;localStorage.getItem("token")||(location.href="../login/index.html"),bt({url:"/v1_0/user/profile"}).then((e=>{const t=e.data.name;document.querySelector(".nick-name").innerHTML=t})),document.querySelector(".quit").addEventListener("click",(e=>{localStorage.clear(),location.href="../login/index.html"}));var wt=n(72),Et=n.n(wt),At=n(825),St=n.n(At),Ct=n(659),xt=n.n(Ct),Dt=n(56),Ot=n.n(Dt),kt=n(540),Bt=n.n(kt),Tt=n(113),Ft=n.n(Tt),_t=n(231),Pt={};Pt.styleTagTransform=Ft(),Pt.setAttributes=Ot(),Pt.insert=xt().bind(null,"head"),Pt.domAPI=St(),Pt.insertStyleElement=Bt(),Et()(_t.A,Pt),_t.A&&_t.A.locals&&_t.A.locals;const jt=n(309),{createEditor:Nt,createToolbar:Rt}=jt,It={placeholder:"åå¸æç« åå®¹...",onChange(e){const t=e.getHtml();document.querySelector(".publish-content").value=t}},Lt=Nt({selector:"#editor-container",html:"<p><br></p>",config:It,mode:"default"}),Mt=(Rt({editor:Lt,selector:"#toolbar-container",config:{},mode:"default"}),Lt);function zt(e,t){const n=document.querySelector(".alert");n.classList.add(e?"alert-success":"alert-danger"),n.innerHTML=t,n.classList.add("show"),setTimeout((()=>{n.classList.remove(e?"alert-success":"alert-danger"),n.innerHTML="",n.classList.remove("show")}),2e3)}var $t=n(76),Ht=n.n($t);!async function(){const e='<option value="" selected="">è¯·éæ©æç« é¢é</option>'+(await bt({url:"/v1_0/channels"})).data.channels.map((e=>`<option value="${e.id}">${e.name}</option>`)).join("");document.querySelector(".form-select").innerHTML=e}(),document.querySelector(".img-file").addEventListener("change",(async e=>{const t=e.target.files[0],n=new FormData;n.append("image",t);const r=(await bt({url:"/v1_0/upload",method:"POST",data:n})).data.url;document.querySelector(".rounded").src=r,document.querySelector(".rounded").classList.add("show"),document.querySelector(".place").classList.add("hide")})),document.querySelector(".rounded").addEventListener("click",(()=>{document.querySelector(".img-file").click()})),document.querySelector(".send").addEventListener("click",(async e=>{if("åå¸"!==e.target.innerHTML)return;const t=document.querySelector(".art-form"),n=Ht()(t,{hash:!0,empty:!0});delete n.id,console.log(n),n.cover={type:1,images:[document.querySelector(".rounded").src]};try{await bt({url:"/v1_0/mp/articles",method:"POST",data:n}),zt(!0,"åå¸æå"),t.reset(),document.querySelector(".rounded").src="",document.querySelector(".rounded").classList.remove("show"),document.querySelector(".place").classList.remove("hide"),Mt.setHtml(""),setTimeout((()=>{location.href="../content/index.html"}),1500)}catch(e){zt(!1,e.response.data.message)}})),function(){const e=location.search;new URLSearchParams(e).forEach((async(e,t)=>{if("id"===t){document.querySelector(".title span").innerHTML="ä¿®æ¹æç« ",document.querySelector(".send").innerHTML="ä¿®æ¹";const t=await bt({url:`/v1_0/mp/articles/${e}`});console.log(t);const n={channel_id:t.data.channel_id,title:t.data.title,rounded:t.data.cover.images[0],content:t.data.content,id:t.data.id};Object.keys(n).forEach((e=>{"rounded"===e?n[e]&&(document.querySelector(".rounded").src=n[e],document.querySelector(".rounded").classList.add("show"),document.querySelector(".place").classList.add("hide")):"content"===e?Mt.setHtml(n[e]):document.querySelector(`[name=${e}]`).value=n[e]}))}}))}(),document.querySelector(".send").addEventListener("click",(async e=>{if("ä¿®æ¹"!==e.target.innerHTML)return;const t=document.querySelector(".art-form"),n=Ht()(t,{hash:!0,empty:!0});try{const e=await bt({url:`/v1_0/mp/articles/${n.id}`,method:"PUT",data:{...n,cover:{type:document.querySelector(".rounded").src?1:0,images:[document.querySelector(".rounded").src]}}});console.log(e),zt(!0,"ä¿®æ¹æç« æå")}catch(e){zt(!1,e.response.data.message)}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,